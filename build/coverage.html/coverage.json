{"/home/travis/build/npmtest/node-npmtest-elastical/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_elastical */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-elastical/lib.npmtest_elastical.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/lib.npmtest_elastical.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_elastical */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_elastical = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_elastical = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-elastical/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-elastical && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_elastical */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_elastical","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_elastical.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_elastical.rollup.js'] =","            local.assetsDict['/assets.npmtest_elastical.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_elastical.__dirname + '/lib.npmtest_elastical.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}}},"branchMap":{},"code":["/**","@module elastical","**/","","module.exports = {","    Client: require('./lib/client'),","    Index : require('./lib/index')","};",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/client.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":9,"18":0,"19":0,"20":0,"21":0,"22":0,"23":9,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":1,"142":1,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":7,"153":0,"154":0,"155":1,"156":16,"157":0,"158":0,"159":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":0,"2":9,"3":9,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":7,"19":0,"20":16,"21":0},"fnMap":{"1":{"name":"Client","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":31}}},"2":{"name":"(anonymous_2)","line":92,"loc":{"start":{"line":92,"column":15},"end":{"line":92,"column":18}}},"3":{"name":"(anonymous_3)","line":114,"loc":{"start":{"line":114,"column":12},"end":{"line":114,"column":15}}},"4":{"name":"(anonymous_4)","line":172,"loc":{"start":{"line":172,"column":11},"end":{"line":172,"column":40}}},"5":{"name":"(anonymous_5)","line":220,"loc":{"start":{"line":220,"column":38},"end":{"line":220,"column":58}}},"6":{"name":"(anonymous_6)","line":333,"loc":{"start":{"line":333,"column":14},"end":{"line":333,"column":30}}},"7":{"name":"(anonymous_7)","line":646,"loc":{"start":{"line":646,"column":12},"end":{"line":646,"column":41}}},"8":{"name":"(anonymous_8)","line":661,"loc":{"start":{"line":661,"column":36},"end":{"line":661,"column":52}}},"9":{"name":"(anonymous_9)","line":719,"loc":{"start":{"line":719,"column":11},"end":{"line":719,"column":31}}},"10":{"name":"(anonymous_10)","line":760,"loc":{"start":{"line":760,"column":11},"end":{"line":760,"column":40}}},"11":{"name":"(anonymous_11)","line":787,"loc":{"start":{"line":787,"column":25},"end":{"line":787,"column":48}}},"12":{"name":"(anonymous_12)","line":801,"loc":{"start":{"line":801,"column":9},"end":{"line":801,"column":29}}},"13":{"name":"(anonymous_13)","line":956,"loc":{"start":{"line":956,"column":14},"end":{"line":956,"column":49}}},"14":{"name":"(anonymous_14)","line":979,"loc":{"start":{"line":979,"column":25},"end":{"line":979,"column":38}}},"15":{"name":"(anonymous_15)","line":995,"loc":{"start":{"line":995,"column":30},"end":{"line":995,"column":56}}},"16":{"name":"noop","line":1036,"loc":{"start":{"line":1036,"column":0},"end":{"line":1036,"column":16}}},"17":{"name":"curlDebug","line":1038,"loc":{"start":{"line":1038,"column":0},"end":{"line":1038,"column":28}}},"18":{"name":"wrapIndexMethod","line":1052,"loc":{"start":{"line":1052,"column":0},"end":{"line":1052,"column":37}}},"19":{"name":"(anonymous_19)","line":1053,"loc":{"start":{"line":1053,"column":11},"end":{"line":1053,"column":32}}},"20":{"name":"wrapStaticIndexMethod","line":1061,"loc":{"start":{"line":1061,"column":0},"end":{"line":1061,"column":43}}},"21":{"name":"(anonymous_21)","line":1062,"loc":{"start":{"line":1062,"column":11},"end":{"line":1062,"column":23}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":11,"column":32}},"2":{"start":{"line":45,"column":0},"end":{"line":66,"column":1}},"3":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"4":{"start":{"line":48,"column":8},"end":{"line":48,"column":23}},"5":{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},"6":{"start":{"line":52,"column":4},"end":{"line":52,"column":39}},"7":{"start":{"line":53,"column":4},"end":{"line":53,"column":33}},"8":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"9":{"start":{"line":56,"column":6},"end":{"line":56,"column":31}},"10":{"start":{"line":58,"column":9},"end":{"line":60,"column":5}},"11":{"start":{"line":59,"column":6},"end":{"line":59,"column":31}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":62}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":59}},"14":{"start":{"line":63,"column":4},"end":{"line":63,"column":60}},"15":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"16":{"start":{"line":68,"column":0},"end":{"line":1023,"column":2}},"17":{"start":{"line":93,"column":8},"end":{"line":95,"column":22}},"18":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"19":{"start":{"line":98,"column":10},"end":{"line":98,"column":54}},"20":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"21":{"start":{"line":102,"column":10},"end":{"line":102,"column":52}},"22":{"start":{"line":105,"column":8},"end":{"line":105,"column":23}},"23":{"start":{"line":115,"column":8},"end":{"line":115,"column":33}},"24":{"start":{"line":173,"column":8},"end":{"line":174,"column":23}},"25":{"start":{"line":175,"column":8},"end":{"line":178,"column":9}},"26":{"start":{"line":176,"column":12},"end":{"line":176,"column":31}},"27":{"start":{"line":177,"column":12},"end":{"line":177,"column":26}},"28":{"start":{"line":179,"column":8},"end":{"line":183,"column":9}},"29":{"start":{"line":180,"column":10},"end":{"line":180,"column":61}},"30":{"start":{"line":181,"column":10},"end":{"line":181,"column":32}},"31":{"start":{"line":182,"column":10},"end":{"line":182,"column":20}},"32":{"start":{"line":186,"column":8},"end":{"line":186,"column":44}},"33":{"start":{"line":189,"column":8},"end":{"line":194,"column":9}},"34":{"start":{"line":190,"column":12},"end":{"line":191,"column":57}},"35":{"start":{"line":193,"column":12},"end":{"line":193,"column":33}},"36":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"37":{"start":{"line":199,"column":12},"end":{"line":199,"column":61}},"38":{"start":{"line":202,"column":8},"end":{"line":211,"column":9}},"39":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"40":{"start":{"line":204,"column":16},"end":{"line":204,"column":30}},"41":{"start":{"line":207,"column":12},"end":{"line":208,"column":55}},"42":{"start":{"line":210,"column":12},"end":{"line":210,"column":32}},"43":{"start":{"line":213,"column":8},"end":{"line":213,"column":51}},"44":{"start":{"line":214,"column":8},"end":{"line":214,"column":25}},"45":{"start":{"line":215,"column":8},"end":{"line":215,"column":33}},"46":{"start":{"line":216,"column":8},"end":{"line":216,"column":63}},"47":{"start":{"line":217,"column":8},"end":{"line":219,"column":9}},"48":{"start":{"line":218,"column":10},"end":{"line":218,"column":35}},"49":{"start":{"line":220,"column":8},"end":{"line":228,"column":11}},"50":{"start":{"line":221,"column":12},"end":{"line":223,"column":13}},"51":{"start":{"line":222,"column":14},"end":{"line":222,"column":57}},"52":{"start":{"line":224,"column":12},"end":{"line":226,"column":13}},"53":{"start":{"line":225,"column":14},"end":{"line":225,"column":92}},"54":{"start":{"line":227,"column":12},"end":{"line":227,"column":50}},"55":{"start":{"line":334,"column":8},"end":{"line":335,"column":61}},"56":{"start":{"line":647,"column":8},"end":{"line":649,"column":23}},"57":{"start":{"line":651,"column":8},"end":{"line":654,"column":9}},"58":{"start":{"line":652,"column":12},"end":{"line":652,"column":31}},"59":{"start":{"line":653,"column":12},"end":{"line":653,"column":26}},"60":{"start":{"line":655,"column":8},"end":{"line":655,"column":63}},"61":{"start":{"line":657,"column":8},"end":{"line":657,"column":44}},"62":{"start":{"line":661,"column":8},"end":{"line":673,"column":11}},"63":{"start":{"line":662,"column":12},"end":{"line":662,"column":38}},"64":{"start":{"line":664,"column":12},"end":{"line":672,"column":13}},"65":{"start":{"line":665,"column":16},"end":{"line":669,"column":17}},"66":{"start":{"line":666,"column":20},"end":{"line":666,"column":73}},"67":{"start":{"line":668,"column":20},"end":{"line":668,"column":67}},"68":{"start":{"line":671,"column":16},"end":{"line":671,"column":37}},"69":{"start":{"line":675,"column":8},"end":{"line":678,"column":9}},"70":{"start":{"line":676,"column":12},"end":{"line":677,"column":33}},"71":{"start":{"line":680,"column":8},"end":{"line":685,"column":9}},"72":{"start":{"line":681,"column":12},"end":{"line":682,"column":57}},"73":{"start":{"line":684,"column":12},"end":{"line":684,"column":33}},"74":{"start":{"line":689,"column":8},"end":{"line":691,"column":9}},"75":{"start":{"line":690,"column":12},"end":{"line":690,"column":67}},"76":{"start":{"line":693,"column":8},"end":{"line":702,"column":9}},"77":{"start":{"line":694,"column":12},"end":{"line":696,"column":13}},"78":{"start":{"line":695,"column":16},"end":{"line":695,"column":30}},"79":{"start":{"line":698,"column":12},"end":{"line":699,"column":55}},"80":{"start":{"line":701,"column":12},"end":{"line":701,"column":32}},"81":{"start":{"line":704,"column":8},"end":{"line":704,"column":51}},"82":{"start":{"line":706,"column":8},"end":{"line":706,"column":26}},"83":{"start":{"line":708,"column":8},"end":{"line":710,"column":9}},"84":{"start":{"line":709,"column":10},"end":{"line":709,"column":27}},"85":{"start":{"line":712,"column":8},"end":{"line":714,"column":9}},"86":{"start":{"line":713,"column":12},"end":{"line":713,"column":41}},"87":{"start":{"line":716,"column":8},"end":{"line":722,"column":11}},"88":{"start":{"line":720,"column":12},"end":{"line":720,"column":68}},"89":{"start":{"line":720,"column":23},"end":{"line":720,"column":66}},"90":{"start":{"line":721,"column":12},"end":{"line":721,"column":42}},"91":{"start":{"line":761,"column":6},"end":{"line":763,"column":21}},"92":{"start":{"line":765,"column":6},"end":{"line":768,"column":7}},"93":{"start":{"line":766,"column":8},"end":{"line":766,"column":27}},"94":{"start":{"line":767,"column":8},"end":{"line":767,"column":21}},"95":{"start":{"line":770,"column":6},"end":{"line":770,"column":42}},"96":{"start":{"line":772,"column":6},"end":{"line":783,"column":7}},"97":{"start":{"line":773,"column":8},"end":{"line":774,"column":51}},"98":{"start":{"line":776,"column":8},"end":{"line":776,"column":29}},"99":{"start":{"line":778,"column":8},"end":{"line":781,"column":9}},"100":{"start":{"line":779,"column":10},"end":{"line":780,"column":54}},"101":{"start":{"line":782,"column":8},"end":{"line":782,"column":29}},"102":{"start":{"line":785,"column":6},"end":{"line":785,"column":23}},"103":{"start":{"line":787,"column":6},"end":{"line":793,"column":9}},"104":{"start":{"line":788,"column":10},"end":{"line":790,"column":11}},"105":{"start":{"line":789,"column":14},"end":{"line":789,"column":40}},"106":{"start":{"line":792,"column":10},"end":{"line":792,"column":57}},"107":{"start":{"line":795,"column":6},"end":{"line":797,"column":7}},"108":{"start":{"line":796,"column":8},"end":{"line":796,"column":37}},"109":{"start":{"line":799,"column":6},"end":{"line":804,"column":9}},"110":{"start":{"line":802,"column":8},"end":{"line":802,"column":63}},"111":{"start":{"line":802,"column":18},"end":{"line":802,"column":61}},"112":{"start":{"line":803,"column":8},"end":{"line":803,"column":28}},"113":{"start":{"line":957,"column":8},"end":{"line":957,"column":38}},"114":{"start":{"line":959,"column":8},"end":{"line":962,"column":9}},"115":{"start":{"line":960,"column":12},"end":{"line":960,"column":31}},"116":{"start":{"line":961,"column":12},"end":{"line":961,"column":26}},"117":{"start":{"line":965,"column":8},"end":{"line":965,"column":38}},"118":{"start":{"line":967,"column":8},"end":{"line":967,"column":38}},"119":{"start":{"line":968,"column":8},"end":{"line":968,"column":26}},"120":{"start":{"line":970,"column":8},"end":{"line":982,"column":17}},"121":{"start":{"line":980,"column":10},"end":{"line":980,"column":46}},"122":{"start":{"line":980,"column":40},"end":{"line":980,"column":46}},"123":{"start":{"line":981,"column":10},"end":{"line":981,"column":61}},"124":{"start":{"line":986,"column":8},"end":{"line":988,"column":9}},"125":{"start":{"line":987,"column":12},"end":{"line":987,"column":31}},"126":{"start":{"line":992,"column":8},"end":{"line":994,"column":9}},"127":{"start":{"line":993,"column":12},"end":{"line":993,"column":60}},"128":{"start":{"line":995,"column":8},"end":{"line":1021,"column":11}},"129":{"start":{"line":996,"column":12},"end":{"line":996,"column":57}},"130":{"start":{"line":996,"column":23},"end":{"line":996,"column":55}},"131":{"start":{"line":1005,"column":12},"end":{"line":1011,"column":13}},"132":{"start":{"line":1006,"column":16},"end":{"line":1006,"column":45}},"133":{"start":{"line":1008,"column":16},"end":{"line":1010,"column":31}},"134":{"start":{"line":1009,"column":20},"end":{"line":1009,"column":44}},"135":{"start":{"line":1013,"column":12},"end":{"line":1017,"column":13}},"136":{"start":{"line":1014,"column":16},"end":{"line":1015,"column":32}},"137":{"start":{"line":1016,"column":16},"end":{"line":1016,"column":23}},"138":{"start":{"line":1019,"column":12},"end":{"line":1019,"column":39}},"139":{"start":{"line":1020,"column":12},"end":{"line":1020,"column":19}},"140":{"start":{"line":1031,"column":0},"end":{"line":1031,"column":46}},"141":{"start":{"line":1033,"column":0},"end":{"line":1033,"column":24}},"142":{"start":{"line":1036,"column":0},"end":{"line":1036,"column":18}},"143":{"start":{"line":1038,"column":0},"end":{"line":1050,"column":1}},"144":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":56}},"145":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":40}},"146":{"start":{"line":1043,"column":4},"end":{"line":1047,"column":5}},"147":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":59}},"148":{"start":{"line":1045,"column":11},"end":{"line":1047,"column":5}},"149":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":73}},"150":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":41}},"151":{"start":{"line":1052,"column":0},"end":{"line":1059,"column":1}},"152":{"start":{"line":1053,"column":4},"end":{"line":1058,"column":6}},"153":{"start":{"line":1054,"column":8},"end":{"line":1055,"column":45}},"154":{"start":{"line":1057,"column":8},"end":{"line":1057,"column":52}},"155":{"start":{"line":1061,"column":0},"end":{"line":1068,"column":1}},"156":{"start":{"line":1062,"column":4},"end":{"line":1067,"column":5}},"157":{"start":{"line":1063,"column":8},"end":{"line":1063,"column":57}},"158":{"start":{"line":1065,"column":8},"end":{"line":1065,"column":27}},"159":{"start":{"line":1066,"column":8},"end":{"line":1066,"column":52}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":19},"end":{"line":52,"column":23}},{"start":{"line":52,"column":27},"end":{"line":52,"column":38}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":19},"end":{"line":53,"column":26}},{"start":{"line":53,"column":30},"end":{"line":53,"column":32}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":9}},{"start":{"line":58,"column":9},"end":{"line":58,"column":9}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":25}},{"start":{"line":61,"column":30},"end":{"line":61,"column":60}}]},"7":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":24}},{"start":{"line":62,"column":29},"end":{"line":62,"column":57}}]},"8":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},{"start":{"line":63,"column":30},"end":{"line":63,"column":58}}]},"9":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":33},"end":{"line":94,"column":56}},{"start":{"line":94,"column":59},"end":{"line":94,"column":61}}]},"10":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"11":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"12":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"13":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":8}},{"start":{"line":179,"column":8},"end":{"line":179,"column":8}}]},"14":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":29},"end":{"line":186,"column":36}},{"start":{"line":186,"column":40},"end":{"line":186,"column":42}}]},"15":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"16":{"line":190,"type":"cond-expr","locations":[{"start":{"line":191,"column":16},"end":{"line":191,"column":39}},{"start":{"line":191,"column":42},"end":{"line":191,"column":55}}]},"17":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"18":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"19":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":203,"column":12}},{"start":{"line":203,"column":12},"end":{"line":203,"column":12}}]},"20":{"line":207,"type":"cond-expr","locations":[{"start":{"line":208,"column":16},"end":{"line":208,"column":38}},{"start":{"line":208,"column":41},"end":{"line":208,"column":53}}]},"21":{"line":216,"type":"cond-expr","locations":[{"start":{"line":216,"column":47},"end":{"line":216,"column":53}},{"start":{"line":216,"column":56},"end":{"line":216,"column":61}}]},"22":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"23":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":12},"end":{"line":221,"column":12}},{"start":{"line":221,"column":12},"end":{"line":221,"column":12}}]},"24":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"25":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":15},"end":{"line":334,"column":37}},{"start":{"line":335,"column":13},"end":{"line":335,"column":59}}]},"26":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":8},"end":{"line":651,"column":8}},{"start":{"line":651,"column":8},"end":{"line":651,"column":8}}]},"27":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":29},"end":{"line":657,"column":36}},{"start":{"line":657,"column":40},"end":{"line":657,"column":42}}]},"28":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":12},"end":{"line":664,"column":12}},{"start":{"line":664,"column":12},"end":{"line":664,"column":12}}]},"29":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":16},"end":{"line":665,"column":16}},{"start":{"line":665,"column":16},"end":{"line":665,"column":16}}]},"30":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":20},"end":{"line":665,"column":34}},{"start":{"line":665,"column":38},"end":{"line":665,"column":53}}]},"31":{"line":666,"type":"cond-expr","locations":[{"start":{"line":666,"column":61},"end":{"line":666,"column":64}},{"start":{"line":666,"column":67},"end":{"line":666,"column":70}}]},"32":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":8},"end":{"line":675,"column":8}},{"start":{"line":675,"column":8},"end":{"line":675,"column":8}}]},"33":{"line":676,"type":"cond-expr","locations":[{"start":{"line":676,"column":61},"end":{"line":676,"column":75}},{"start":{"line":677,"column":16},"end":{"line":677,"column":32}}]},"34":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":8},"end":{"line":680,"column":8}},{"start":{"line":680,"column":8},"end":{"line":680,"column":8}}]},"35":{"line":681,"type":"cond-expr","locations":[{"start":{"line":682,"column":16},"end":{"line":682,"column":39}},{"start":{"line":682,"column":42},"end":{"line":682,"column":55}}]},"36":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":8},"end":{"line":689,"column":8}},{"start":{"line":689,"column":8},"end":{"line":689,"column":8}}]},"37":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":8},"end":{"line":693,"column":8}},{"start":{"line":693,"column":8},"end":{"line":693,"column":8}}]},"38":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":12},"end":{"line":694,"column":12}},{"start":{"line":694,"column":12},"end":{"line":694,"column":12}}]},"39":{"line":698,"type":"cond-expr","locations":[{"start":{"line":699,"column":16},"end":{"line":699,"column":38}},{"start":{"line":699,"column":41},"end":{"line":699,"column":53}}]},"40":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":8},"end":{"line":708,"column":8}},{"start":{"line":708,"column":8},"end":{"line":708,"column":8}}]},"41":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":8},"end":{"line":712,"column":8}},{"start":{"line":712,"column":8},"end":{"line":712,"column":8}}]},"42":{"line":717,"type":"cond-expr","locations":[{"start":{"line":717,"column":33},"end":{"line":717,"column":39}},{"start":{"line":717,"column":42},"end":{"line":717,"column":47}}]},"43":{"line":718,"type":"cond-expr","locations":[{"start":{"line":718,"column":33},"end":{"line":718,"column":40}},{"start":{"line":718,"column":43},"end":{"line":718,"column":45}}]},"44":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":12},"end":{"line":720,"column":12}},{"start":{"line":720,"column":12},"end":{"line":720,"column":12}}]},"45":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":6},"end":{"line":765,"column":6}},{"start":{"line":765,"column":6},"end":{"line":765,"column":6}}]},"46":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":27},"end":{"line":770,"column":34}},{"start":{"line":770,"column":38},"end":{"line":770,"column":40}}]},"47":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":6},"end":{"line":772,"column":6}},{"start":{"line":772,"column":6},"end":{"line":772,"column":6}}]},"48":{"line":773,"type":"cond-expr","locations":[{"start":{"line":774,"column":10},"end":{"line":774,"column":33}},{"start":{"line":774,"column":36},"end":{"line":774,"column":49}}]},"49":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":8},"end":{"line":778,"column":8}},{"start":{"line":778,"column":8},"end":{"line":778,"column":8}}]},"50":{"line":779,"type":"cond-expr","locations":[{"start":{"line":780,"column":12},"end":{"line":780,"column":35}},{"start":{"line":780,"column":38},"end":{"line":780,"column":51}}]},"51":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":10},"end":{"line":788,"column":10}},{"start":{"line":788,"column":10},"end":{"line":788,"column":10}}]},"52":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":14},"end":{"line":788,"column":28}},{"start":{"line":788,"column":32},"end":{"line":788,"column":47}}]},"53":{"line":789,"type":"cond-expr","locations":[{"start":{"line":789,"column":30},"end":{"line":789,"column":33}},{"start":{"line":789,"column":36},"end":{"line":789,"column":39}}]},"54":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":6},"end":{"line":795,"column":6}},{"start":{"line":795,"column":6},"end":{"line":795,"column":6}}]},"55":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":8},"end":{"line":802,"column":8}},{"start":{"line":802,"column":8},"end":{"line":802,"column":8}}]},"56":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":8},"end":{"line":959,"column":8}},{"start":{"line":959,"column":8},"end":{"line":959,"column":8}}]},"57":{"line":965,"type":"binary-expr","locations":[{"start":{"line":965,"column":8},"end":{"line":965,"column":16}},{"start":{"line":965,"column":21},"end":{"line":965,"column":36}}]},"58":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":10},"end":{"line":980,"column":10}},{"start":{"line":980,"column":10},"end":{"line":980,"column":10}}]},"59":{"line":981,"type":"binary-expr","locations":[{"start":{"line":981,"column":10},"end":{"line":981,"column":22}},{"start":{"line":981,"column":27},"end":{"line":981,"column":59}}]},"60":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":8},"end":{"line":986,"column":8}},{"start":{"line":986,"column":8},"end":{"line":986,"column":8}}]},"61":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":8},"end":{"line":992,"column":8}},{"start":{"line":992,"column":8},"end":{"line":992,"column":8}}]},"62":{"line":996,"type":"if","locations":[{"start":{"line":996,"column":12},"end":{"line":996,"column":12}},{"start":{"line":996,"column":12},"end":{"line":996,"column":12}}]},"63":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":12},"end":{"line":1005,"column":12}},{"start":{"line":1005,"column":12},"end":{"line":1005,"column":12}}]},"64":{"line":1005,"type":"binary-expr","locations":[{"start":{"line":1005,"column":16},"end":{"line":1005,"column":40}},{"start":{"line":1005,"column":44},"end":{"line":1005,"column":66}}]},"65":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":12},"end":{"line":1013,"column":12}},{"start":{"line":1013,"column":12},"end":{"line":1013,"column":12}}]},"66":{"line":1013,"type":"binary-expr","locations":[{"start":{"line":1013,"column":16},"end":{"line":1013,"column":36}},{"start":{"line":1013,"column":40},"end":{"line":1013,"column":60}}]},"67":{"line":1014,"type":"binary-expr","locations":[{"start":{"line":1014,"column":32},"end":{"line":1014,"column":36}},{"start":{"line":1014,"column":40},"end":{"line":1014,"column":50}},{"start":{"line":1014,"column":55},"end":{"line":1014,"column":79}}]},"68":{"line":1015,"type":"binary-expr","locations":[{"start":{"line":1015,"column":20},"end":{"line":1015,"column":24}},{"start":{"line":1015,"column":28},"end":{"line":1015,"column":30}}]},"69":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":27},"end":{"line":1019,"column":31}},{"start":{"line":1019,"column":35},"end":{"line":1019,"column":37}}]},"70":{"line":1039,"type":"binary-expr","locations":[{"start":{"line":1039,"column":31},"end":{"line":1039,"column":45}},{"start":{"line":1039,"column":49},"end":{"line":1039,"column":54}}]},"71":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}},{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}}]},"72":{"line":1045,"type":"if","locations":[{"start":{"line":1045,"column":11},"end":{"line":1045,"column":11}},{"start":{"line":1045,"column":11},"end":{"line":1045,"column":11}}]}},"code":["/**","ElasticSearch client implementation.","","@module elastical","@submodule client","**/","","var request = require('request').defaults({encoding: 'utf8'}),","    util    = require('./util'),","    Index = require('./index'),","    encode = encodeURIComponent;","","/**","Creates a new Elastical client associated with the specified _host_. The client","uses ElasticSearch's REST API to interact with the host, so connections are","established as needed and are not persistent.","","@example","","    // Create a client that connects to http://127.0.0.1:9200","    var elastical = require('elastical'),","        client    = new elastical.client();","","@class Client","@param {String} [host=\"127.0.0.1\"] Hostname to connect to.","@param {Object} [options] Client options.","    @param {String} [options.auth] Username and password (delimited by a \":\") to","        pass to ElasticSearch using basic HTTP auth. If not specified, no","        authentication will be used. Be sure to set `options.protocol` to","        'https' unless you're comfortable sending passwords in plaintext.","    @param {Boolean} [options.curlDebug=false] If `true`, runnable curl commands","        will be written to stderr for every request the client makes. This is","        useful for debugging requests by hand.","    @param {Number} [options.port=9200] Port to connect to.","    @param {String} [options.protocol='http'] Protocol to use. May be \"http\" or","        \"https\".","    @param {String} [options.basePath=''] Optional base path to prepend to all ","        query paths. This can be useful if acessing a cluster on a host that ","        uses paths to namespace customer indexes.","    @param {Number} [options.timeout=60000] Number of milliseconds to wait","        before aborting a request. Be sure to increase this if you do large bulk","        operations.","@constructor","**/","function Client(host, options) {","    // Allow options without host.","    if (typeof host === 'object') {","        options = host;","        host    = undefined;","    }","","    this.host    = host || '127.0.0.1';","    this.options = options || {};","","    if(typeof this.options.port === 'undefined') {","      this.options.port = 9200;","    }","    else if(this.options.port === null) {","      this.options.port = null;","    }","    this.options.protocol || (this.options.protocol = 'http');","    this.options.timeout || (this.options.timeout = 60000);","    this.options.basePath || (this.options.basePath = null);","","    this._indexCache = {};","}","","Client.prototype = {","    // -- Protected Properties -------------------------------------------------","","    /**","    Search options that must be passed as query parameters instead of in the","    request body.","","    @property _SEARCH_PARAMS","    @type {String[]}","    @protected","    @final","    **/","    _SEARCH_PARAMS: [","        'preference', 'routing', 'scroll', 'scroll_id', 'search_type', 'timeout', 'ignore_indices'","    ],","","    // -- Public Properties ----------------------------------------------------","","    /**","    Base URL for this client, of the form \"http://host:port\".","","    @property baseUrl","    @type {String}","    **/","    get baseUrl() {","        var baseUrl = this.options.protocol + '://' +","            (this.options.auth ? this.options.auth + '@' : '') +","            this.host;","","        if(this.options.port !== null) {","          baseUrl = baseUrl + ':' + this.options.port;","        }","","        if(this.options.basePath !== null) {","          baseUrl = baseUrl + this.options.basePath;","        }","        ","        return baseUrl;","    },","","    /**","    Port number for this client.","","    @property port","    @type {Number}","    **/","    get port() {","        return this.options.port;","    },","","    // -- Public Methods -------------------------------------------------------","","    /**","    Performs multiple document create/index/delete operations in a single request.","","    See `Index.bulk()` for detailed usage instructions.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/bulk.html)","","    @example","","        client.bulk([","            {create: {index: 'blog', type: 'post', id: '1', data: {","                title: 'Hello',","                body : 'Welcome to my stupid blog.'","            }}},","","            {index: {index: 'blog', type: 'post', id: '2', data: {","                title: 'Breaking news',","                body : 'Today I ate a sandwich.'","            }}},","","            {delete: {index: 'blog', type: 'post', id: '42'}}","        ], function (err, res) {","            // ...","        });","","    @method bulk","    @param {Object[]} operations Array of operations to perform. See","        `Index.bulk()` for a description of the expected object format.","    @param {Object} [options] Options. See `Index.bulk()` for details.","    @param {Function} [callback] Callback function.","        @param {Error|null} callback.err Error, or `null` on success.","        @param {Object} callback.res ElasticSearch response data.","    @see Index.bulk","    **/","    bulk: wrapStaticIndexMethod('bulk'),","","    /**","    Get the number of matches for a query","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/count.html)","","    @method count","    @param {Object} options the options object","      @param {String} [options.index] Index name.","      @param {String} [options.type] type Type name.","      @param {String} [otions.query] Query to get the number of match for.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    @see Index.count","    **/","    count: function (options, callback) {","        var url   = '',","            hasOptions;","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","        if(typeof callback !== 'function'){","          var err =  new Error(\"callback is not a function\");","          var stack = err.stack;","          throw err;","        }","","        // Create a copy of options so we can modify it.","        options = util.merge(options || {});","","","        if (options.index) {","            url = '/' + encode(Array.isArray(options.index) ?","                options.index.join(',') : options.index);","","            delete options.index;","        }","","        // If a query is provided and it's a string, automatically turn it into","        // a query_string query.","        if (typeof options.query === 'string') {","            options = {query_string: {query: options.query}};","        }","","        if (options.type) {","            if (!url) {","                url = '/_all';","            }","","            url += '/' + encode(Array.isArray(options.type) ?","                options.type.join(',') : options.type);","","            delete options.type;","        }","","        hasOptions = !!Object.keys(options).length;","        url += '/_count';","        options.curlDebug = true;","        var myOptions = { method: hasOptions ? 'POST' : 'GET'};","        if(hasOptions){","          myOptions.json = options;","        }","        this._request(url, myOptions, function (err, res) {","            if (err) { ","              return callback(err, null, res), undefined; ","            }","            if(res._shards.failed > 0){","              return callback(new Error(res._shards.failures.reason), null, res), undefined;","            }","            return callback(null, res.count, res);","        });","    },","","    /**","    Creates a new index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index.html)","","    @method createIndex","    @param {String} name Name of the new index.","    @param {Object} options Index options (see ElasticSearch docs for details).","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Index} callback.index Index instance for the newly created index.","      @param {Object} callback.data ElasticSearch response data.","    @see Index.create","    **/","    createIndex: wrapStaticIndexMethod('create'),","","    /**","    Deletes a document from the specified index. See `Index.delete()` for the","    complete list of supported options.","","    @method delete","    @param {String} index Index name.","    @param {String} type Type name.","    @param {String} id Document id to delete.","    @param {Object} [options] Delete options.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response.","    @see Index.delete","    **/","    delete: wrapIndexMethod('delete'),","","    /**","    Deletes the specified index or indices. If no indices are specified, **all**","    indices on the server will be deleted.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index.html)","","    @method deleteIndex","    @param {String|String[]} [names] Name of the index to delete, or an array of","        names to delete multiple indices. If omitted, **all** indices will be","        deleted.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.data ElasticSearch response data.","    @see Index.deleteIndex","    **/","    deleteIndex: wrapStaticIndexMethod('delete'),","","    /**","    Gets a document from the specified index based on its id.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/get.html)","","    @method get","    @param {String} name Index name.","    @param {String} id Document id.","    @param {Object} [options] Options.","      @param {String|String[]} [options.fields] Document field name or array of","          field names to retrieve. By default, all fields are retrieved.","      @param {Boolean} [options.ignoreMissing=false] If `true`, an error will","          not be returned if the index, type, or document do not exist. Instead,","          a `null` document will be returned.","      @param {String} [options.preference] Controls which shard replicas the","          request should be executed on. By default, the operation will be","          randomized between the shard replicas. See the ElasticSearch docs for","          possible values.","      @param {Boolean} [options.realtime=true] Whether or not to use realtime","          GET. See the ElasticSearch docs for details.","      @param {Boolean} [options.refresh=false] If `true`, the relevant shard","          will be refreshed before the get operation to ensure that it's","          searchable. This may cause heavy server load, so use with caution.","      @param {String} [options.routing] Value that determines what shard this","          document will be routed to. If not specified, a hash of the document's","          id will be used. Note that an incorrectly routed get operation will","          fail, so it's best to leave this alone unless you know your business.","      @param {String} [options.type=\"_all\"] If specified, the get operation will","          be limited to documents of this type.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object|null} callback.doc Retrieved document or document fields,","          or `null` if the document was not found and `options.ignoreMissing` is","          `true`.","      @param {Object} callback.res Full ElasticSearch response data.","    @see Index.get","    **/","    get: wrapIndexMethod('get'),","","    /**","    Gets an Index instance for interacting with the specified ElasticSearch","    index.","","    @example","","        var client = new require('elastical').Client(),","            tweets = client.getIndex('tweets');","","    @method getIndex","    @param {String} name Index name.","    @return {Index} Index instance.","    @see Index","    **/","    getIndex: function (name) {","        return this._indexCache[name] ||","            (this._indexCache[name] = new Index(this, name));","    },","","    /**","    Gets mapping definitions for the specified type within the specified index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping.html)","","    @method getMapping","    @param {String|String[]} names Index name or array of names.","    @param {String} type Document type. If omitted, mappings for all type are returned.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    @see Client.getMapping","    **/","    getMapping: wrapStaticIndexMethod('getMapping'),","","    /**","    Gets settings for the specified index/indices.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings.html)","","    @method getSettings","    @param {String|String[]} names Index name or array of names.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Index.getSettings","    **/","    getSettings: wrapStaticIndexMethod('getSettings'),","","    /**","    Update settings for the specified index/indices.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/)","","    @method updateSettings","    @param {String|String[]} index Index name or array of names. If not specified,","        it will be applied to all indices","    @param {Object} settings Settings. See ElasticSearch docs for details.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Index.updateSettings","    **/","    updateSettings: wrapStaticIndexMethod('updateSettings'),","","    /**","     Apply aliases actions.","","     [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases.html)","","     @method applyAliasesActions","     @param {Object[]} actions Aliases actions.","     @param {Function} callback Callback function.","     @param {Error|null} callback.err Error, or `null` on success.","     @param {Object} callback.res ElasticSearch response data.","     @see Index.applyAliasesActions","     **/","    applyAliasesActions: wrapStaticIndexMethod('applyAliasesActions'),","","    /**","     Get aliases.","","     [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases.html)","","     @method getAliases","     @param {String|String[]|null} names Index name or array of names.","     @param {Function} callback Callback function.","     @param {Error|null} callback.err Error, or `null` on success.","     @param {Object} callback.res ElasticSearch response data.","     @see Index.getAliases","     **/","    getAliases: wrapStaticIndexMethod('getAliases'),","","/**","    Adds a document to the specified index.","","    If the specified index doesn't exist, it will be created.","","    If a document already exists in that index with the specified _type_ and","    _id_, it will be updated. Otherwise, a new document will be created.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/index_.html)","","    @example","","        client.index('blog', 'post', {","            title  : \"Welcome to my stupid blog\",","            content: \"This is the first and last time I'll post anything.\",","            tags   : ['welcome', 'first post', 'last post'],","            created: Date.now()","        }, function (err, res) {","            if (err) { throw err; }","            console.log('Indexed a blog post');","        });","","    @method index","    @param {String} index Index name.","    @param {String} type Document type.","    @param {Object} doc Document data to index.","    @param {Object} [options] Options.","      @param {String} [options.consistency=\"quorum\"] Write consistency to use","          for this indexing operation. Permitted values are \"one\", \"quorum\" and","          \"all\". See the ElasticSearch docs for details.","      @param {Boolean} [options.create=false] Only create the document if it","          doesn't already exist.","      @param {String} [options.id] Document id. One will be automatically","          generated if not specified.","      @param {String} [options.parent] Parent document id.","      @param {String} [options.percolate] Percolation query to check against","          this document. See the ElasticSearch docs for details.","      @param {Boolean} [options.refresh=false] If `true`, the document will be","          made searchable immediately after it is indexed.","      @param {String} [options.replication=\"sync\"] Replication mode for this","          indexing operation. Maybe be set to \"sync\" or \"async\".","      @param {String} [options.routing] Value that determines what shard this","          document will be routed to. If not specified, a hash of the document's","          id will be used.","      @param {String} [options.timeout=\"1m\"] How long to wait for the primary","          shard to become available to index this document before aborting. See","          the ElasticSearch docs for details. This should be a value like \"5m\"","          (5 minutes) or \"15s\" (15 seconds).","      @param {Number} [options.version] Document version to create/update. If","          this is set and `options.version_type` is not set,","          `options.version_type` will automatically be set to \"external\".","      @param {String} [options.version_type=\"internal\"] Version type (either","          \"internal\" or \"external\"). See the ElasticSearch docs for details.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Index.index","    **/","    index: wrapIndexMethod('index'),","","    /**","    Checks whether the specified index or indices exist.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists.html)","","    @method indexExists","    @param {String|String[]} names Index name or array of names to check.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Boolean} callback.exists `true` if all specified indices exist,","        `false` otherwise.","    @see Index.exists","    **/","    indexExists: wrapStaticIndexMethod('exists'),","","    /**","    Multi GET API allows to get multiple documents","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/multi-get.html)","","    @method multiGet","    @param {String|null} index optional Index name.","    @param {String|null} type optional document type.","    @param {Object} data either docs or ids","      @param {Object[]} [data.docs] docs to query (can include _index, _type, _id, fields)","      @param {String[]} [data.ids] ids to query","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Index.multiGet","    **/","    multiGet: wrapStaticIndexMethod('multiGet'),","","    /**","    Registers a mapping definition for the specified type within the specified","    index or indices.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping.html)","","    @method putMapping","    @param {String|String[]} [names] Index name or array of names to define the","        mapping within. If not specified, it will be defined in all indices.","    @param {String} type Document type.","    @param {Object} [mapping] Mapping definition. See the [ElasticSearch","        docs](http://www.elasticsearch.org/guide/reference/mapping/) for","        an overview.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    @see Client.putMapping","    **/","    putMapping: wrapStaticIndexMethod('putMapping'),","","    /**","    Refreshes the specified index or indices.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh.html)","","    @method refresh","    @param {String|String[]} [names] Index name or array of names to refresh. If","        not specified, all indices will be refreshed.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Index.refresh","    **/","    refresh: wrapStaticIndexMethod('refresh'),","","    /**","    Analyze","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze.html)","","    @method analyze","    @param {String} text Text to analyze","    @param {Object} [options] Options. See ElasticSearch docs for details.","        @param {String} [options.index=\"indexname\"] Specify indexname to use a specific","            index analyzer","        @param {String} [options.analyzer=\"standard\"] Analyzer to use for analysis","        @param {String} [options.tokenizer=\"keyword\"] Tokenizer to use for anaysis when","            using a custom transient anayzer","        @param {String} [options.field=\"obj1.field1\"] Use the analyzer configured in","            the mapping for this field","    @param {Function} [callback] Callback function.","        @param {Error|null} callback.err Error, or `null` on success.","        @param {Object} callback.res ElasticSearch response data.","    @static","    @see Index.analyze","    **/","","    analyze: wrapStaticIndexMethod('analyze'),","","    /**","    Searches for documents matching the given query.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/search/)","","    @example","","        var client = new require('elastical').Client();","","        client.search({query: 'pie'}, function (err, results) {","            if (err) { throw err; }","            console.log(results);","        });","","    @method search","    @param {Object} [options] Search options. Technically this argument is","        optional, but you'll almost always want to provide at least a query.","","      @param {Object|String} [options.query] Search query. This can be a simple","          string (in which case a \"query_string\" search will be performed) or a","          full query object. See the [ElasticSearch Query DSL docs](http://www.elasticsearch.org/guide/reference/query-dsl/)","          for details.","      @param {Boolean} [options.explain=false] If `true`, results will include","          an explanation of how the score was computed for each hit.","      @param {Object} [options.facets] Facets to aggregate by. See the","          [ElasticSearch facets docs](http://www.elasticsearch.org/guide/reference/api/search/facets/)","          for details.","      @param {String|String[]} [options.fields] Document field name or array of","          field names to retrieve. By default, all fields are retrieved.","      @param {Object} [options.filter] Result filter. See the [ElasticSearch","          filtering docs](http://www.elasticsearch.org/guide/reference/api/search/filter.html)","          for details.","      @param {Number} [options.from=0] Return results starting at this offset.","      @param {Object} [options.highlight] Result highlighting options. See the","          [ElasticSearch highlighting docs](http://www.elasticsearch.org/guide/reference/api/search/highlighting.html)","          for details.","      @param {String|String[]} [options.index] Index name or array of index","          names to search. By default all indices will be searched.","      @param {Object} [options.indices_boost] Index boost options. See the","          [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/search/index-boost.html)","          for details.","      @param {Number} [options.min_score] If specified, documents with a score","          lower than this will be filtered out.","      @param {String} [options.preference] Controls which shard replicas the","          request should be executed on. By default, the operation will be","          randomized between the shard replicas. See the [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/search/preference.html)","          for possible values.","      @param {String} [options.routing] Value that determines what shard this","          search will be routed to.","      @param {Object} [options.script_fields] Script expressions to evaluate for","          specific fields. See the [ElasticSearch script fields docs](http://www.elasticsearch.org/guide/reference/api/search/script-fields.html)","          for details.","      @param {String} [options.scroll] Scroll timeout. If specified, nodes that","          participate in this search will maintain resources for this query","          until the timeout expires. See the [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/search/scroll.html)","          for details.","      @param {String} [options.scroll_id] Scroll id to use for this request.","      @param {String} [options.search_type] Search operation type to use. May be","          one of \"query_and_fetch\", \"query_then_fetch\", \"dfs_query_and_fetch\",","          \"dfs_query_then_fetch\", \"count\", or \"scan\". See the [ElasticSearch","          docs](http://www.elasticsearch.org/guide/reference/api/search/search-type.html)","          for details.","      @param {Number} [options.size=10] Return this many results.","      @param {Object} [options.sort] Sort options. See the [ElasticSearch sort","          docs](http://www.elasticsearch.org/guide/reference/api/search/sort.html)","          for details.","      @param {String} [options.timeout] Timeout after which the search will be","          aborted. Any hits that have been gathered before the timeout is","          reached will be returned. Default is no timeout.","      @param {Boolean} [options.track_scores=false] Whether or not to compute","          scores when sorting by a field.","      @param {String|String[]} [options.type] Type name or array of type names","          to search. By default all types will be searched.","      @param {Boolean} [options.version=false] If `true`, a version number will","          be returned for each hit.","","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.results Search results.","      @param {Object} callback.res Full ElasticSearch response data.","    **/","    search: function (options, callback) {","        var query = [],","            url   = '',","            hasOptions;","","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","        var useScrollingEndpoint = (options.scroll_id != null);","        // Create a copy of options so we can modify it.","        options = util.merge(options || {});","","        // Some options must be passed as query parameters. Find those options","        // and move them into the query param array.","        this._SEARCH_PARAMS.forEach(function (name) {","            var value = options[name];","","            if (typeof value !== 'undefined') {","                if (value === true || value === false) {","                    query.push(encode(name) + '=' + (value ? '1' : '0'));","                } else {","                    query.push(encode(name) + '=' + encode(value));","                }","","                delete options[name];","            }","        });","","        if (options.fields) {","            options.fields = Array.isArray(options.fields) ? options.fields :","                [options.fields];","        }","","        if (options.index) {","            url = '/' + encode(Array.isArray(options.index) ?","                options.index.join(',') : options.index);","","            delete options.index;","        }","","        // If a query is provided and it's a string, automatically turn it into","        // a query_string query.","        if (typeof options.query === 'string') {","            options.query = {query_string: {query: options.query}};","        }","","        if (options.type) {","            if (!url) {","                url = '/_all';","            }","","            url += '/' + encode(Array.isArray(options.type) ?","                options.type.join(',') : options.type);","","            delete options.type;","        }","","        hasOptions = !!Object.keys(options).length;","","        url += '/_search';","","        if(useScrollingEndpoint){","          url += '/scroll';","        }","","        if (query.length) {","            url += '?' + query.join('&');","        }","","        this._request(url, {","            method: hasOptions ? 'POST' : 'GET',","            json  : hasOptions ? options : {}","        }, function (err, res) {","            if (err) { return callback(err, null, res), undefined; }","            callback(null, res.hits, res);","        });","    },","    ","    /**","    Provide statistics on different operations happening on an index.","    By default, docs, store, and indexing, get, and search stats are returned.","    ","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-stats.html)","","    @example","","        var client = new require('elastical').Client();","","        client.stat({index: 'blog'}, function (err, results) {","            if (err) { throw err; }","            console.log(results);","        });","","    @method stats","    @param {Object} [options] Stats options. Technically this argument is","        optional, but you'll almost always want to provide at least an index.","      @param {String|String[]} [options.index] Index name or array of index","          names to display stats on. By default global stats will be displayed.","      @param (String|String[]) [options.types] Comma separated list of types to provide document type level stats.","      @param {Boolean} [options.docs=true] The number of docs / deleted docs.","      @param {Boolean} [options.store=true] The size of the index.","      @param {Boolean} [options.indexing=true] Indexing statistics.","      @param {Boolean} [options.get=true] Get statistics, including missing stats.","      @param {Boolean} [options.search=true] Search statistics.","      @param {Boolean} [options.warmer=false] Warmer statistics.","      @param {Boolean} [options.merge=false] merge stats.","      @param {Boolean} [options.flush=false] flush stats.","      @param {Boolean} [options.refresh=false] refresh stats.","      @param {Boolean} [options.clear=false] Clears all the flags (first).","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    **/","    stats: function (options, callback) {","      var query = [],","          url = '',","          hasOptions;","","      if (typeof options === 'function') {","        callback = options;","        options = {};","      }","      //Create a copy of options so we can modify it.","      options = util.merge(options || {});","","      if (options.index) {","        url = '/' + encode(Array.isArray(options.index) ?","          options.index.join(',') : options.index);","","        delete options.index;","        //Look for types only if there is an index","        if (options.types) {","          query.push(encode('types') + '=' + encode(Array.isArray(options.types) ?","            options.types.join(',') : options.types));","        }","        delete options.types;","      }","","      url += '/_stats';  ","","      util.each(options, function (value, name) {","          if (value === true || value === false) {","              value = value ? '1' : '0';","          }","","          query.push(encode(name) + '=' + encode(value));","      });","      ","      if (query.length) {","        url += '?' + query.join('&');","      }","      ","      this._request(url, {","          method: 'GET'","      }, function (err, res) {","        if(err) { return callback(err, null, res), undefined; }","        callback(null, res);","      });","    },","    ","    // TODO: percolate, delete by query, more like this","    /**","    Registers a percolator for the given index or modifies the existing percolator","    if one with the name already exists","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/pecolator/)","","    @example","        var put =   {","                        \"query\" : {","                            \"text\" : {","                                \"hashtags\" : {","                                    \"query\" : 'blah blah blah ',","                                    \"operator\" : \"or\"","                                }","                            }","                        }","                    };","        client.percolator('tweets', 'mypercolator', query, function (err, res) {","            if (err) { throw err; }","            console.log(results);","        });","    @method setPercolator","    @param {String|String[]} index Index name or array of index","          names to register the percolator.","    @param {String} percolator The identifier string of the percolator.","            This identifier is returned when a document matches","            the query in the percolator, either through percolate operation or","            through index opertation.","    @param {Object|String} query Search query. Afull query object.","        See the [ElasticSearch Query DSL docs](http://www.elasticsearch.org/guide/reference/query-dsl/)","        for details.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res Full ElasticSearch response data.","    */","    setPercolator: wrapIndexMethod('setPercolator'),","","    /**","     * Retrieve the percolator doc","     *","     * @example","     *","     *  client.getPercolator('tweets', 'mypercolator', function (err, results) {","     *      if (err) { throw err; }","     *      console.log(results);","     *  });","     *","     *  @param {String} index  The index name to which the percolator is registered","     *  @param {String} percolator The name of the percolator","     *  @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.doc  Percolator document.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    getPercolator: wrapIndexMethod('getPercolator'),","","    /**","     * Test if a given doc matches a percolator for","     * the given index and document type","     * @example","     *      client.perolate('tweets', 'tweet', {}, function(err, res){","     *          if(err){ throw err; }","     *          console.log(res);","     *      });","     *  @param {String} index The index name to which the document should be","     *      checked for matching percolators","     *  @param {String} type The type name of the document","     *  @param {Object} doc The document object which the registered percolators","     *      are matched against","     *  @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    percolate: wrapIndexMethod('percolate'),","","    /**","     * Delete a registered percolator for the given index or indicies","     * @example","     *      client.deletePercolator('tweets', 'mypercolator', function(err, res){","     *          if(err){ throw err;}","     *          console.log(res);","     *      });","     * @param {String|String[]} index Index name or array of index names","     * @param {String} percolator Name of the percolator to delete","     * @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    deletePercolator: wrapIndexMethod('deletePercolator'),","","","    /**","    Registers a river with the cluster.","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method putRiver","    @param {String} name A name for this river.","    @param {Object} config The river configuration.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    putRiver: wrapStaticIndexMethod('putRiver'),","","    /**","    Gets river config from the cluster.","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method getRiver","    @param {Client} client Client instance.","    @param {String} name A name for this river.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    getRiver: wrapStaticIndexMethod('getRiver'),","","    /**","    Deletes a river config from the cluster.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method deleteRiver","    @param {Client} client Client instance.","    @param {String} name A name for this river.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    deleteRiver: wrapStaticIndexMethod('deleteRiver'),","","    // -- Protected Methods ----------------------------------------------------","","    /**","    Makes an HTTP request using the `request` module.","","    @method _request","    @param {String} path Request path.","    @param {Object} [options] Request options.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object|Buffer|String} callback.body Response body (parsed as JSON","          if possible).","    @protected","    **/","    _request: function (path, options, callback) {","        var url = this.baseUrl + path;","","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","","        // Callback is optional.","        callback || (callback = noop);","","        options = util.merge(options);","        options.uri = url;","","        [ 'timeout',","          'pool',","          'agent',","          'headers',","          'followRedirect',","          'followAllRedirects',","          'proxy',","          'oauth',","          'strictSSL',","          'jar'].forEach(function(key){","          if(this.options[key] == null) return","          options[key] || (options[key] = this.options[key]);","        }, this);","","        // Write executable curl commands to stderr for easier debugging when","        // this client's curlDebug option is true.","        if (this.options.curlDebug) {","            curlDebug(options);","        }","","        // Provide a testing hook to allow inspection of the request options","        // without actually sending a request.","        if (this._testHook) {","            return this._testHook(null, options), undefined;","        }","        request(url, options, function (err, res, body) {","            if (err) { return callback(err), undefined; }","","            // The request module will automatically try to parse the","            // response as JSON if `options.json` is truthy and the response","            // has an application/json content-type, but it currently fails","            // on content-types with charset suffixes, so it can't be relied","            // upon.","            //","            // See https://github.com/mikeal/request/commit/68c17f6c9a3d7217368b3b8bc61203e6a14eb4f0","            if (typeof body === 'string' || body instanceof Buffer) {","                body = body.toString('utf8');","","                try {","                    body = JSON.parse(body);","                } catch (ex) {}","            }","","            if (res.statusCode < 200 || res.statusCode > 299) {","                callback(Error((body && body.error) || 'HTTP ' + res.statusCode),","                    body || {});","                return;","            }","","            callback(null, body || {});","            return;","        });","    }","};","","/**","Alias for index().","","@method set","@see index","**/","Client.prototype.set = Client.prototype.index;","","module.exports = Client;","","// -- Private Functions --------------------------------------------------------","function noop() {}","","function curlDebug(options) {","    var command = 'curl -X' + (options.method || 'GET');","","    command += \" '\" + options.uri + \"'\";","","    if (options.body) {","        command += \" --data-binary '\" + options.body + \"'\";","    } else if (options.json) {","        command += \" -d '\" + JSON.stringify(options.json, null, 2) + \"'\";","    }","","    process.stdout.write(command + '\\n');","}","","function wrapIndexMethod(methodName) {","    return function (indexName) {","        var args  = Array.prototype.slice.call(arguments, 1),","            index = this.getIndex(indexName);","","        return index[methodName].apply(index, args);","    };","}","","function wrapStaticIndexMethod(methodName) {","    return function () {","        var args = Array.prototype.slice.call(arguments);","","        args.unshift(this);","        return Index[methodName].apply(Index, args);","    }","}",""],"l":{"8":1,"45":1,"47":0,"48":0,"49":0,"52":0,"53":0,"55":0,"56":0,"58":0,"59":0,"61":0,"62":0,"63":0,"65":0,"68":1,"93":9,"97":0,"98":0,"101":0,"102":0,"105":0,"115":9,"173":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"182":0,"186":0,"189":0,"190":0,"193":0,"198":0,"199":0,"202":0,"203":0,"204":0,"207":0,"210":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"224":0,"225":0,"227":0,"334":0,"647":0,"651":0,"652":0,"653":0,"655":0,"657":0,"661":0,"662":0,"664":0,"665":0,"666":0,"668":0,"671":0,"675":0,"676":0,"680":0,"681":0,"684":0,"689":0,"690":0,"693":0,"694":0,"695":0,"698":0,"701":0,"704":0,"706":0,"708":0,"709":0,"712":0,"713":0,"716":0,"720":0,"721":0,"761":0,"765":0,"766":0,"767":0,"770":0,"772":0,"773":0,"776":0,"778":0,"779":0,"782":0,"785":0,"787":0,"788":0,"789":0,"792":0,"795":0,"796":0,"799":0,"802":0,"803":0,"957":0,"959":0,"960":0,"961":0,"965":0,"967":0,"968":0,"970":0,"980":0,"981":0,"986":0,"987":0,"992":0,"993":0,"995":0,"996":0,"1005":0,"1006":0,"1008":0,"1009":0,"1013":0,"1014":0,"1016":0,"1019":0,"1020":0,"1031":1,"1033":1,"1036":1,"1038":1,"1039":0,"1041":0,"1043":0,"1044":0,"1045":0,"1046":0,"1049":0,"1052":1,"1053":7,"1054":0,"1057":0,"1061":1,"1062":16,"1063":0,"1065":0,"1066":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/main.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":1,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":1,"382":0,"383":0,"384":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":1,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":1,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":1,"480":0,"481":0,"482":0,"483":1,"484":0,"485":0,"486":0,"487":0,"488":0,"489":1,"490":0,"491":0,"492":0,"493":1,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":1,"525":1,"526":1,"527":8,"528":0,"529":0,"530":0,"531":0,"532":0,"533":8,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":1,"553":1,"554":0,"555":0,"556":0,"557":1,"558":0,"559":0,"560":0,"561":1,"562":0,"563":0,"564":0,"565":0,"566":0,"567":1,"568":0,"569":0,"570":0,"571":1,"572":0,"573":1,"574":0,"575":0,"576":0,"577":0,"578":0,"579":1,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":1,"601":0,"602":1},"b":{"1":[0,1],"2":[0,0],"3":[0,1],"4":[1,1],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0,0,0,0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0,0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0,0],"209":[0,0],"210":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":8,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"fnMap":{"1":{"name":"toBase64","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":24}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":16},"end":{"line":50,"column":35}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":41},"end":{"line":54,"column":66}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":50},"end":{"line":55,"column":61}}},"5":{"name":"isReadStream","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":27}}},"6":{"name":"copy","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":20}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":27},"end":{"line":71,"column":40}}},"8":{"name":"Request","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":27}}},"9":{"name":"(anonymous_9)","line":105,"loc":{"start":{"line":105,"column":25},"end":{"line":105,"column":44}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":20},"end":{"line":117,"column":32}}},"11":{"name":"(anonymous_11)","line":192,"loc":{"start":{"line":192,"column":28},"end":{"line":192,"column":45}}},"12":{"name":"(anonymous_12)","line":219,"loc":{"start":{"line":219,"column":82},"end":{"line":219,"column":96}}},"13":{"name":"(anonymous_13)","line":222,"loc":{"start":{"line":222,"column":93},"end":{"line":222,"column":107}}},"14":{"name":"(anonymous_14)","line":300,"loc":{"start":{"line":300,"column":20},"end":{"line":300,"column":35}}},"15":{"name":"(anonymous_15)","line":319,"loc":{"start":{"line":319,"column":20},"end":{"line":319,"column":32}}},"16":{"name":"(anonymous_16)","line":324,"loc":{"start":{"line":324,"column":19},"end":{"line":324,"column":31}}},"17":{"name":"(anonymous_17)","line":329,"loc":{"start":{"line":329,"column":26},"end":{"line":329,"column":41}}},"18":{"name":"(anonymous_18)","line":347,"loc":{"start":{"line":347,"column":29},"end":{"line":347,"column":41}}},"19":{"name":"(anonymous_19)","line":388,"loc":{"start":{"line":388,"column":26},"end":{"line":388,"column":38}}},"20":{"name":"(anonymous_20)","line":397,"loc":{"start":{"line":397,"column":43},"end":{"line":397,"column":63}}},"21":{"name":"(anonymous_21)","line":420,"loc":{"start":{"line":420,"column":45},"end":{"line":420,"column":62}}},"22":{"name":"(anonymous_22)","line":461,"loc":{"start":{"line":461,"column":27},"end":{"line":461,"column":39}}},"23":{"name":"(anonymous_23)","line":473,"loc":{"start":{"line":473,"column":25},"end":{"line":473,"column":41}}},"24":{"name":"(anonymous_24)","line":477,"loc":{"start":{"line":477,"column":26},"end":{"line":477,"column":43}}},"25":{"name":"(anonymous_25)","line":481,"loc":{"start":{"line":481,"column":25},"end":{"line":481,"column":42}}},"26":{"name":"(anonymous_26)","line":485,"loc":{"start":{"line":485,"column":27},"end":{"line":485,"column":39}}},"27":{"name":"(anonymous_27)","line":492,"loc":{"start":{"line":492,"column":24},"end":{"line":492,"column":41}}},"28":{"name":"(anonymous_28)","line":496,"loc":{"start":{"line":496,"column":23},"end":{"line":496,"column":35}}},"29":{"name":"(anonymous_29)","line":502,"loc":{"start":{"line":502,"column":27},"end":{"line":502,"column":44}}},"30":{"name":"(anonymous_30)","line":528,"loc":{"start":{"line":528,"column":35},"end":{"line":528,"column":46}}},"31":{"name":"(anonymous_31)","line":538,"loc":{"start":{"line":538,"column":40},"end":{"line":538,"column":50}}},"32":{"name":"(anonymous_32)","line":554,"loc":{"start":{"line":554,"column":26},"end":{"line":554,"column":37}}},"33":{"name":"(anonymous_33)","line":567,"loc":{"start":{"line":567,"column":29},"end":{"line":567,"column":45}}},"34":{"name":"(anonymous_34)","line":586,"loc":{"start":{"line":586,"column":30},"end":{"line":586,"column":62}}},"35":{"name":"(anonymous_35)","line":592,"loc":{"start":{"line":592,"column":31},"end":{"line":592,"column":50}}},"36":{"name":"(anonymous_36)","line":596,"loc":{"start":{"line":596,"column":23},"end":{"line":596,"column":45}}},"37":{"name":"(anonymous_37)","line":610,"loc":{"start":{"line":610,"column":25},"end":{"line":610,"column":41}}},"38":{"name":"(anonymous_38)","line":615,"loc":{"start":{"line":615,"column":30},"end":{"line":615,"column":51}}},"39":{"name":"(anonymous_39)","line":627,"loc":{"start":{"line":627,"column":20},"end":{"line":627,"column":36}}},"40":{"name":"(anonymous_40)","line":632,"loc":{"start":{"line":632,"column":30},"end":{"line":632,"column":43}}},"41":{"name":"(anonymous_41)","line":643,"loc":{"start":{"line":643,"column":25},"end":{"line":643,"column":40}}},"42":{"name":"(anonymous_42)","line":654,"loc":{"start":{"line":654,"column":26},"end":{"line":654,"column":44}}},"43":{"name":"(anonymous_43)","line":692,"loc":{"start":{"line":692,"column":40},"end":{"line":692,"column":53}}},"44":{"name":"(anonymous_44)","line":696,"loc":{"start":{"line":696,"column":24},"end":{"line":696,"column":39}}},"45":{"name":"(anonymous_45)","line":716,"loc":{"start":{"line":716,"column":35},"end":{"line":716,"column":48}}},"46":{"name":"(anonymous_46)","line":733,"loc":{"start":{"line":733,"column":25},"end":{"line":733,"column":47}}},"47":{"name":"(anonymous_47)","line":750,"loc":{"start":{"line":750,"column":26},"end":{"line":750,"column":38}}},"48":{"name":"(anonymous_48)","line":754,"loc":{"start":{"line":754,"column":24},"end":{"line":754,"column":41}}},"49":{"name":"(anonymous_49)","line":759,"loc":{"start":{"line":759,"column":26},"end":{"line":759,"column":38}}},"50":{"name":"(anonymous_50)","line":763,"loc":{"start":{"line":763,"column":27},"end":{"line":763,"column":39}}},"51":{"name":"(anonymous_51)","line":767,"loc":{"start":{"line":767,"column":28},"end":{"line":767,"column":40}}},"52":{"name":"initParams","line":772,"loc":{"start":{"line":772,"column":0},"end":{"line":772,"column":44}}},"53":{"name":"request","line":785,"loc":{"start":{"line":785,"column":0},"end":{"line":785,"column":42}}},"54":{"name":"(anonymous_54)","line":803,"loc":{"start":{"line":803,"column":19},"end":{"line":803,"column":38}}},"55":{"name":"(anonymous_55)","line":804,"loc":{"start":{"line":804,"column":12},"end":{"line":804,"column":30}}},"56":{"name":"(anonymous_56)","line":805,"loc":{"start":{"line":805,"column":12},"end":{"line":805,"column":43}}},"57":{"name":"(anonymous_57)","line":825,"loc":{"start":{"line":825,"column":18},"end":{"line":825,"column":54}}},"58":{"name":"(anonymous_58)","line":838,"loc":{"start":{"line":838,"column":15},"end":{"line":838,"column":49}}},"59":{"name":"(anonymous_59)","line":843,"loc":{"start":{"line":843,"column":14},"end":{"line":843,"column":48}}},"60":{"name":"(anonymous_60)","line":848,"loc":{"start":{"line":848,"column":15},"end":{"line":848,"column":49}}},"61":{"name":"(anonymous_61)","line":859,"loc":{"start":{"line":859,"column":14},"end":{"line":859,"column":48}}},"62":{"name":"(anonymous_62)","line":864,"loc":{"start":{"line":864,"column":14},"end":{"line":864,"column":26}}},"63":{"name":"(anonymous_63)","line":867,"loc":{"start":{"line":867,"column":17},"end":{"line":867,"column":32}}},"64":{"name":"getSafe","line":875,"loc":{"start":{"line":875,"column":0},"end":{"line":875,"column":30}}},"65":{"name":"(anonymous_65)","line":883,"loc":{"start":{"line":883,"column":39},"end":{"line":883,"column":52}}},"66":{"name":"toJSON","line":908,"loc":{"start":{"line":908,"column":0},"end":{"line":908,"column":19}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"3":{"start":{"line":33,"column":2},"end":{"line":33,"column":38}},"4":{"start":{"line":36,"column":0},"end":{"line":38,"column":14}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":26}},"6":{"start":{"line":40,"column":0},"end":{"line":42,"column":14}},"7":{"start":{"line":41,"column":2},"end":{"line":41,"column":22}},"8":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":60}},"10":{"start":{"line":49,"column":0},"end":{"line":61,"column":1}},"11":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"12":{"start":{"line":51,"column":4},"end":{"line":51,"column":34}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":40}},"14":{"start":{"line":54,"column":2},"end":{"line":60,"column":3}},"15":{"start":{"line":55,"column":4},"end":{"line":58,"column":6}},"16":{"start":{"line":57,"column":6},"end":{"line":57,"column":18}},"17":{"start":{"line":57,"column":14},"end":{"line":57,"column":18}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":12}},"19":{"start":{"line":63,"column":0},"end":{"line":67,"column":1}},"20":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":15}},"22":{"start":{"line":69,"column":0},"end":{"line":75,"column":1}},"23":{"start":{"line":70,"column":2},"end":{"line":70,"column":12}},"24":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":17}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":10}},"27":{"start":{"line":77,"column":0},"end":{"line":77,"column":22}},"28":{"start":{"line":79,"column":0},"end":{"line":79,"column":19}},"29":{"start":{"line":81,"column":0},"end":{"line":103,"column":1}},"30":{"start":{"line":82,"column":2},"end":{"line":82,"column":26}},"31":{"start":{"line":83,"column":2},"end":{"line":83,"column":22}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":22}},"33":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"34":{"start":{"line":87,"column":4},"end":{"line":87,"column":27}},"35":{"start":{"line":90,"column":2},"end":{"line":90,"column":47}},"36":{"start":{"line":91,"column":2},"end":{"line":99,"column":3}},"37":{"start":{"line":92,"column":4},"end":{"line":98,"column":5}},"38":{"start":{"line":93,"column":6},"end":{"line":93,"column":26}},"39":{"start":{"line":95,"column":6},"end":{"line":97,"column":7}},"40":{"start":{"line":96,"column":8},"end":{"line":96,"column":25}},"41":{"start":{"line":100,"column":2},"end":{"line":100,"column":25}},"42":{"start":{"line":102,"column":2},"end":{"line":102,"column":20}},"43":{"start":{"line":104,"column":0},"end":{"line":104,"column":37}},"44":{"start":{"line":105,"column":0},"end":{"line":345,"column":1}},"45":{"start":{"line":106,"column":2},"end":{"line":106,"column":17}},"46":{"start":{"line":108,"column":2},"end":{"line":108,"column":28}},"47":{"start":{"line":108,"column":16},"end":{"line":108,"column":28}},"48":{"start":{"line":110,"column":2},"end":{"line":110,"column":40}},"49":{"start":{"line":110,"column":18},"end":{"line":110,"column":40}},"50":{"start":{"line":111,"column":2},"end":{"line":111,"column":17}},"51":{"start":{"line":112,"column":2},"end":{"line":112,"column":32}},"52":{"start":{"line":115,"column":2},"end":{"line":124,"column":3}},"53":{"start":{"line":116,"column":4},"end":{"line":116,"column":34}},"54":{"start":{"line":117,"column":4},"end":{"line":121,"column":5}},"55":{"start":{"line":118,"column":6},"end":{"line":118,"column":38}},"56":{"start":{"line":118,"column":32},"end":{"line":118,"column":38}},"57":{"start":{"line":119,"column":6},"end":{"line":119,"column":43}},"58":{"start":{"line":120,"column":6},"end":{"line":120,"column":33}},"59":{"start":{"line":122,"column":4},"end":{"line":122,"column":42}},"60":{"start":{"line":123,"column":4},"end":{"line":123,"column":55}},"61":{"start":{"line":126,"column":2},"end":{"line":130,"column":3}},"62":{"start":{"line":128,"column":4},"end":{"line":128,"column":23}},"63":{"start":{"line":129,"column":4},"end":{"line":129,"column":19}},"64":{"start":{"line":132,"column":2},"end":{"line":136,"column":3}},"65":{"start":{"line":133,"column":4},"end":{"line":133,"column":57}},"66":{"start":{"line":135,"column":4},"end":{"line":135,"column":67}},"67":{"start":{"line":135,"column":37},"end":{"line":135,"column":67}},"68":{"start":{"line":137,"column":2},"end":{"line":154,"column":3}},"69":{"start":{"line":138,"column":4},"end":{"line":138,"column":73}},"70":{"start":{"line":138,"column":39},"end":{"line":138,"column":73}},"71":{"start":{"line":141,"column":4},"end":{"line":153,"column":5}},"72":{"start":{"line":142,"column":6},"end":{"line":142,"column":24}},"73":{"start":{"line":143,"column":6},"end":{"line":144,"column":65}},"74":{"start":{"line":146,"column":6},"end":{"line":149,"column":41}},"75":{"start":{"line":151,"column":6},"end":{"line":151,"column":42}},"76":{"start":{"line":152,"column":6},"end":{"line":152,"column":24}},"77":{"start":{"line":156,"column":2},"end":{"line":156,"column":56}},"78":{"start":{"line":157,"column":2},"end":{"line":157,"column":80}},"79":{"start":{"line":158,"column":2},"end":{"line":158,"column":88}},"80":{"start":{"line":159,"column":2},"end":{"line":159,"column":102}},"81":{"start":{"line":160,"column":2},"end":{"line":161,"column":41}},"82":{"start":{"line":161,"column":4},"end":{"line":161,"column":41}},"83":{"start":{"line":163,"column":2},"end":{"line":163,"column":55}},"84":{"start":{"line":165,"column":2},"end":{"line":165,"column":22}},"85":{"start":{"line":166,"column":2},"end":{"line":174,"column":3}},"86":{"start":{"line":167,"column":4},"end":{"line":167,"column":41}},"87":{"start":{"line":168,"column":4},"end":{"line":172,"column":5}},"88":{"start":{"line":169,"column":6},"end":{"line":171,"column":46}},"89":{"start":{"line":171,"column":6},"end":{"line":171,"column":46}},"90":{"start":{"line":173,"column":4},"end":{"line":173,"column":23}},"91":{"start":{"line":176,"column":2},"end":{"line":176,"column":36}},"92":{"start":{"line":178,"column":2},"end":{"line":178,"column":51}},"93":{"start":{"line":178,"column":27},"end":{"line":178,"column":50}},"94":{"start":{"line":179,"column":2},"end":{"line":182,"column":3}},"95":{"start":{"line":180,"column":4},"end":{"line":181,"column":65}},"96":{"start":{"line":180,"column":39},"end":{"line":180,"column":57}},"97":{"start":{"line":181,"column":9},"end":{"line":181,"column":65}},"98":{"start":{"line":181,"column":45},"end":{"line":181,"column":64}},"99":{"start":{"line":184,"column":2},"end":{"line":190,"column":3}},"100":{"start":{"line":185,"column":4},"end":{"line":185,"column":31}},"101":{"start":{"line":186,"column":4},"end":{"line":186,"column":35}},"102":{"start":{"line":188,"column":4},"end":{"line":188,"column":29}},"103":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}},"104":{"start":{"line":192,"column":2},"end":{"line":208,"column":3}},"105":{"start":{"line":193,"column":4},"end":{"line":193,"column":29}},"106":{"start":{"line":193,"column":23},"end":{"line":193,"column":29}},"107":{"start":{"line":195,"column":4},"end":{"line":195,"column":46}},"108":{"start":{"line":195,"column":22},"end":{"line":195,"column":46}},"109":{"start":{"line":196,"column":4},"end":{"line":202,"column":5}},"110":{"start":{"line":198,"column":6},"end":{"line":198,"column":80}},"111":{"start":{"line":199,"column":6},"end":{"line":199,"column":18}},"112":{"start":{"line":200,"column":6},"end":{"line":200,"column":20}},"113":{"start":{"line":201,"column":6},"end":{"line":201,"column":12}},"114":{"start":{"line":203,"column":4},"end":{"line":206,"column":5}},"115":{"start":{"line":204,"column":6},"end":{"line":204,"column":37}},"116":{"start":{"line":205,"column":6},"end":{"line":205,"column":30}},"117":{"start":{"line":207,"column":4},"end":{"line":207,"column":29}},"118":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"119":{"start":{"line":211,"column":4},"end":{"line":211,"column":27}},"120":{"start":{"line":214,"column":2},"end":{"line":216,"column":3}},"121":{"start":{"line":215,"column":4},"end":{"line":215,"column":29}},"122":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"123":{"start":{"line":219,"column":4},"end":{"line":219,"column":135}},"124":{"start":{"line":219,"column":98},"end":{"line":219,"column":122}},"125":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"126":{"start":{"line":222,"column":4},"end":{"line":222,"column":146}},"127":{"start":{"line":222,"column":109},"end":{"line":222,"column":133}},"128":{"start":{"line":225,"column":2},"end":{"line":225,"column":37}},"129":{"start":{"line":225,"column":18},"end":{"line":225,"column":37}},"130":{"start":{"line":227,"column":2},"end":{"line":231,"column":3}},"131":{"start":{"line":228,"column":4},"end":{"line":228,"column":29}},"132":{"start":{"line":230,"column":4},"end":{"line":230,"column":59}},"133":{"start":{"line":233,"column":2},"end":{"line":233,"column":45}},"134":{"start":{"line":233,"column":30},"end":{"line":233,"column":45}},"135":{"start":{"line":235,"column":2},"end":{"line":235,"column":100}},"136":{"start":{"line":235,"column":34},"end":{"line":235,"column":100}},"137":{"start":{"line":237,"column":2},"end":{"line":241,"column":3}},"138":{"start":{"line":238,"column":4},"end":{"line":238,"column":27}},"139":{"start":{"line":239,"column":9},"end":{"line":241,"column":3}},"140":{"start":{"line":240,"column":4},"end":{"line":240,"column":37}},"141":{"start":{"line":243,"column":2},"end":{"line":262,"column":3}},"142":{"start":{"line":244,"column":4},"end":{"line":244,"column":18}},"143":{"start":{"line":245,"column":4},"end":{"line":256,"column":5}},"144":{"start":{"line":246,"column":6},"end":{"line":253,"column":7}},"145":{"start":{"line":247,"column":8},"end":{"line":249,"column":9}},"146":{"start":{"line":248,"column":10},"end":{"line":248,"column":39}},"147":{"start":{"line":251,"column":8},"end":{"line":251,"column":41}},"148":{"start":{"line":252,"column":8},"end":{"line":252,"column":33}},"149":{"start":{"line":255,"column":6},"end":{"line":255,"column":31}},"150":{"start":{"line":257,"column":4},"end":{"line":261,"column":5}},"151":{"start":{"line":258,"column":6},"end":{"line":258,"column":45}},"152":{"start":{"line":260,"column":6},"end":{"line":260,"column":54}},"153":{"start":{"line":264,"column":2},"end":{"line":267,"column":5}},"154":{"start":{"line":268,"column":2},"end":{"line":268,"column":69}},"155":{"start":{"line":270,"column":2},"end":{"line":270,"column":59}},"156":{"start":{"line":270,"column":24},"end":{"line":270,"column":59}},"157":{"start":{"line":272,"column":2},"end":{"line":272,"column":38}},"158":{"start":{"line":272,"column":18},"end":{"line":272,"column":38}},"159":{"start":{"line":274,"column":2},"end":{"line":284,"column":3}},"160":{"start":{"line":275,"column":4},"end":{"line":275,"column":70}},"161":{"start":{"line":275,"column":30},"end":{"line":275,"column":70}},"162":{"start":{"line":277,"column":4},"end":{"line":283,"column":5}},"163":{"start":{"line":278,"column":6},"end":{"line":278,"column":42}},"164":{"start":{"line":279,"column":11},"end":{"line":283,"column":5}},"165":{"start":{"line":280,"column":6},"end":{"line":280,"column":78}},"166":{"start":{"line":282,"column":6},"end":{"line":282,"column":45}},"167":{"start":{"line":286,"column":2},"end":{"line":298,"column":3}},"168":{"start":{"line":287,"column":4},"end":{"line":287,"column":22}},"169":{"start":{"line":289,"column":4},"end":{"line":289,"column":46}},"170":{"start":{"line":290,"column":4},"end":{"line":293,"column":5}},"171":{"start":{"line":292,"column":6},"end":{"line":292,"column":45}},"172":{"start":{"line":294,"column":4},"end":{"line":297,"column":5}},"173":{"start":{"line":296,"column":6},"end":{"line":296,"column":50}},"174":{"start":{"line":300,"column":2},"end":{"line":322,"column":4}},"175":{"start":{"line":301,"column":4},"end":{"line":301,"column":134}},"176":{"start":{"line":301,"column":20},"end":{"line":301,"column":134}},"177":{"start":{"line":302,"column":4},"end":{"line":302,"column":18}},"178":{"start":{"line":303,"column":4},"end":{"line":317,"column":5}},"179":{"start":{"line":304,"column":6},"end":{"line":305,"column":100}},"180":{"start":{"line":305,"column":8},"end":{"line":305,"column":100}},"181":{"start":{"line":307,"column":6},"end":{"line":313,"column":7}},"182":{"start":{"line":308,"column":8},"end":{"line":312,"column":9}},"183":{"start":{"line":309,"column":10},"end":{"line":311,"column":11}},"184":{"start":{"line":310,"column":12},"end":{"line":310,"column":44}},"185":{"start":{"line":314,"column":6},"end":{"line":316,"column":7}},"186":{"start":{"line":315,"column":8},"end":{"line":315,"column":32}},"187":{"start":{"line":319,"column":4},"end":{"line":321,"column":6}},"188":{"start":{"line":320,"column":6},"end":{"line":320,"column":107}},"189":{"start":{"line":324,"column":2},"end":{"line":344,"column":4}},"190":{"start":{"line":325,"column":4},"end":{"line":325,"column":29}},"191":{"start":{"line":325,"column":23},"end":{"line":325,"column":29}},"192":{"start":{"line":327,"column":4},"end":{"line":342,"column":5}},"193":{"start":{"line":328,"column":6},"end":{"line":334,"column":7}},"194":{"start":{"line":329,"column":8},"end":{"line":331,"column":10}},"195":{"start":{"line":330,"column":10},"end":{"line":330,"column":26}},"196":{"start":{"line":333,"column":8},"end":{"line":333,"column":29}},"197":{"start":{"line":335,"column":6},"end":{"line":335,"column":16}},"198":{"start":{"line":336,"column":11},"end":{"line":342,"column":5}},"199":{"start":{"line":337,"column":6},"end":{"line":337,"column":109}},"200":{"start":{"line":338,"column":6},"end":{"line":338,"column":39}},"201":{"start":{"line":339,"column":11},"end":{"line":342,"column":5}},"202":{"start":{"line":340,"column":6},"end":{"line":340,"column":40}},"203":{"start":{"line":341,"column":6},"end":{"line":341,"column":16}},"204":{"start":{"line":343,"column":4},"end":{"line":343,"column":21}},"205":{"start":{"line":347,"column":0},"end":{"line":386,"column":1}},"206":{"start":{"line":348,"column":2},"end":{"line":348,"column":29}},"207":{"start":{"line":349,"column":2},"end":{"line":349,"column":18}},"208":{"start":{"line":350,"column":2},"end":{"line":354,"column":3}},"209":{"start":{"line":351,"column":4},"end":{"line":353,"column":5}},"210":{"start":{"line":352,"column":6},"end":{"line":352,"column":39}},"211":{"start":{"line":355,"column":2},"end":{"line":355,"column":35}},"212":{"start":{"line":355,"column":15},"end":{"line":355,"column":35}},"213":{"start":{"line":357,"column":2},"end":{"line":357,"column":18}},"214":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"215":{"start":{"line":361,"column":4},"end":{"line":361,"column":25}},"216":{"start":{"line":364,"column":2},"end":{"line":370,"column":3}},"217":{"start":{"line":366,"column":4},"end":{"line":366,"column":28}},"218":{"start":{"line":367,"column":4},"end":{"line":367,"column":28}},"219":{"start":{"line":368,"column":4},"end":{"line":368,"column":31}},"220":{"start":{"line":368,"column":17},"end":{"line":368,"column":31}},"221":{"start":{"line":369,"column":4},"end":{"line":369,"column":42}},"222":{"start":{"line":372,"column":2},"end":{"line":375,"column":3}},"223":{"start":{"line":373,"column":4},"end":{"line":373,"column":31}},"224":{"start":{"line":373,"column":17},"end":{"line":373,"column":31}},"225":{"start":{"line":374,"column":4},"end":{"line":374,"column":25}},"226":{"start":{"line":377,"column":2},"end":{"line":380,"column":3}},"227":{"start":{"line":379,"column":4},"end":{"line":379,"column":38}},"228":{"start":{"line":383,"column":2},"end":{"line":383,"column":51}},"229":{"start":{"line":383,"column":26},"end":{"line":383,"column":51}},"230":{"start":{"line":385,"column":2},"end":{"line":385,"column":48}},"231":{"start":{"line":388,"column":0},"end":{"line":552,"column":1}},"232":{"start":{"line":389,"column":2},"end":{"line":389,"column":17}},"233":{"start":{"line":391,"column":2},"end":{"line":391,"column":27}},"234":{"start":{"line":391,"column":21},"end":{"line":391,"column":27}},"235":{"start":{"line":393,"column":2},"end":{"line":393,"column":22}},"236":{"start":{"line":394,"column":2},"end":{"line":394,"column":36}},"237":{"start":{"line":395,"column":2},"end":{"line":395,"column":27}},"238":{"start":{"line":396,"column":2},"end":{"line":396,"column":37}},"239":{"start":{"line":396,"column":11},"end":{"line":396,"column":37}},"240":{"start":{"line":397,"column":2},"end":{"line":525,"column":4}},"241":{"start":{"line":398,"column":4},"end":{"line":398,"column":29}},"242":{"start":{"line":398,"column":23},"end":{"line":398,"column":29}},"243":{"start":{"line":399,"column":4},"end":{"line":399,"column":38}},"244":{"start":{"line":399,"column":22},"end":{"line":399,"column":38}},"245":{"start":{"line":401,"column":4},"end":{"line":401,"column":28}},"246":{"start":{"line":402,"column":4},"end":{"line":402,"column":27}},"247":{"start":{"line":403,"column":4},"end":{"line":403,"column":28}},"248":{"start":{"line":405,"column":4},"end":{"line":411,"column":5}},"249":{"start":{"line":408,"column":6},"end":{"line":408,"column":53}},"250":{"start":{"line":409,"column":6},"end":{"line":409,"column":58}},"251":{"start":{"line":410,"column":6},"end":{"line":410,"column":12}},"252":{"start":{"line":413,"column":4},"end":{"line":413,"column":46}},"253":{"start":{"line":413,"column":22},"end":{"line":413,"column":46}},"254":{"start":{"line":414,"column":4},"end":{"line":417,"column":5}},"255":{"start":{"line":415,"column":6},"end":{"line":415,"column":37}},"256":{"start":{"line":416,"column":6},"end":{"line":416,"column":30}},"257":{"start":{"line":419,"column":4},"end":{"line":424,"column":5}},"258":{"start":{"line":420,"column":6},"end":{"line":423,"column":8}},"259":{"start":{"line":421,"column":8},"end":{"line":422,"column":46}},"260":{"start":{"line":421,"column":23},"end":{"line":421,"column":56}},"261":{"start":{"line":422,"column":13},"end":{"line":422,"column":46}},"262":{"start":{"line":426,"column":4},"end":{"line":524,"column":5}},"263":{"start":{"line":430,"column":6},"end":{"line":433,"column":7}},"264":{"start":{"line":431,"column":8},"end":{"line":431,"column":98}},"265":{"start":{"line":432,"column":8},"end":{"line":432,"column":14}},"266":{"start":{"line":434,"column":6},"end":{"line":434,"column":34}},"267":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"268":{"start":{"line":437,"column":8},"end":{"line":437,"column":89}},"269":{"start":{"line":439,"column":6},"end":{"line":439,"column":42}},"270":{"start":{"line":440,"column":6},"end":{"line":444,"column":7}},"271":{"start":{"line":445,"column":6},"end":{"line":445,"column":54}},"272":{"start":{"line":445,"column":35},"end":{"line":445,"column":54}},"273":{"start":{"line":447,"column":6},"end":{"line":447,"column":21}},"274":{"start":{"line":448,"column":6},"end":{"line":448,"column":23}},"275":{"start":{"line":449,"column":6},"end":{"line":449,"column":26}},"276":{"start":{"line":450,"column":6},"end":{"line":450,"column":22}},"277":{"start":{"line":451,"column":6},"end":{"line":453,"column":7}},"278":{"start":{"line":452,"column":8},"end":{"line":452,"column":32}},"279":{"start":{"line":454,"column":6},"end":{"line":454,"column":44}},"280":{"start":{"line":454,"column":15},"end":{"line":454,"column":44}},"281":{"start":{"line":455,"column":6},"end":{"line":455,"column":17}},"282":{"start":{"line":456,"column":6},"end":{"line":456,"column":12}},"283":{"start":{"line":458,"column":6},"end":{"line":458,"column":60}},"284":{"start":{"line":461,"column":6},"end":{"line":463,"column":8}},"285":{"start":{"line":462,"column":8},"end":{"line":462,"column":51}},"286":{"start":{"line":462,"column":26},"end":{"line":462,"column":51}},"287":{"start":{"line":465,"column":6},"end":{"line":471,"column":7}},"288":{"start":{"line":466,"column":8},"end":{"line":470,"column":9}},"289":{"start":{"line":467,"column":10},"end":{"line":467,"column":143}},"290":{"start":{"line":469,"column":10},"end":{"line":469,"column":45}},"291":{"start":{"line":473,"column":6},"end":{"line":475,"column":8}},"292":{"start":{"line":474,"column":8},"end":{"line":474,"column":27}},"293":{"start":{"line":477,"column":6},"end":{"line":480,"column":8}},"294":{"start":{"line":478,"column":8},"end":{"line":478,"column":29}},"295":{"start":{"line":479,"column":8},"end":{"line":479,"column":32}},"296":{"start":{"line":481,"column":6},"end":{"line":484,"column":8}},"297":{"start":{"line":482,"column":8},"end":{"line":482,"column":26}},"298":{"start":{"line":483,"column":8},"end":{"line":483,"column":31}},"299":{"start":{"line":485,"column":6},"end":{"line":485,"column":60}},"300":{"start":{"line":485,"column":40},"end":{"line":485,"column":58}},"301":{"start":{"line":487,"column":6},"end":{"line":487,"column":37}},"302":{"start":{"line":489,"column":6},"end":{"line":523,"column":7}},"303":{"start":{"line":490,"column":8},"end":{"line":490,"column":23}},"304":{"start":{"line":491,"column":8},"end":{"line":491,"column":23}},"305":{"start":{"line":492,"column":8},"end":{"line":495,"column":10}},"306":{"start":{"line":493,"column":10},"end":{"line":493,"column":28}},"307":{"start":{"line":494,"column":10},"end":{"line":494,"column":33}},"308":{"start":{"line":496,"column":8},"end":{"line":522,"column":10}},"309":{"start":{"line":497,"column":10},"end":{"line":497,"column":35}},"310":{"start":{"line":497,"column":29},"end":{"line":497,"column":35}},"311":{"start":{"line":499,"column":10},"end":{"line":513,"column":11}},"312":{"start":{"line":500,"column":12},"end":{"line":500,"column":42}},"313":{"start":{"line":501,"column":12},"end":{"line":501,"column":21}},"314":{"start":{"line":502,"column":12},"end":{"line":505,"column":14}},"315":{"start":{"line":503,"column":14},"end":{"line":503,"column":50}},"316":{"start":{"line":504,"column":14},"end":{"line":504,"column":31}},"317":{"start":{"line":506,"column":12},"end":{"line":510,"column":13}},"318":{"start":{"line":507,"column":14},"end":{"line":507,"column":34}},"319":{"start":{"line":509,"column":14},"end":{"line":509,"column":45}},"320":{"start":{"line":511,"column":17},"end":{"line":513,"column":11}},"321":{"start":{"line":512,"column":12},"end":{"line":512,"column":43}},"322":{"start":{"line":515,"column":10},"end":{"line":519,"column":11}},"323":{"start":{"line":516,"column":12},"end":{"line":518,"column":26}},"324":{"start":{"line":517,"column":14},"end":{"line":517,"column":55}},"325":{"start":{"line":521,"column":10},"end":{"line":521,"column":56}},"326":{"start":{"line":527,"column":2},"end":{"line":547,"column":3}},"327":{"start":{"line":528,"column":4},"end":{"line":533,"column":20}},"328":{"start":{"line":529,"column":6},"end":{"line":529,"column":22}},"329":{"start":{"line":530,"column":6},"end":{"line":530,"column":36}},"330":{"start":{"line":531,"column":6},"end":{"line":531,"column":26}},"331":{"start":{"line":532,"column":6},"end":{"line":532,"column":27}},"332":{"start":{"line":537,"column":4},"end":{"line":546,"column":5}},"333":{"start":{"line":538,"column":6},"end":{"line":545,"column":8}},"334":{"start":{"line":539,"column":8},"end":{"line":544,"column":9}},"335":{"start":{"line":540,"column":10},"end":{"line":540,"column":26}},"336":{"start":{"line":541,"column":10},"end":{"line":541,"column":46}},"337":{"start":{"line":542,"column":10},"end":{"line":542,"column":36}},"338":{"start":{"line":543,"column":10},"end":{"line":543,"column":31}},"339":{"start":{"line":549,"column":2},"end":{"line":549,"column":47}},"340":{"start":{"line":551,"column":2},"end":{"line":551,"column":32}},"341":{"start":{"line":554,"column":0},"end":{"line":565,"column":1}},"342":{"start":{"line":555,"column":2},"end":{"line":555,"column":23}},"343":{"start":{"line":557,"column":2},"end":{"line":562,"column":3}},"344":{"start":{"line":558,"column":4},"end":{"line":558,"column":20}},"345":{"start":{"line":560,"column":7},"end":{"line":562,"column":3}},"346":{"start":{"line":561,"column":4},"end":{"line":561,"column":25}},"347":{"start":{"line":564,"column":2},"end":{"line":564,"column":20}},"348":{"start":{"line":567,"column":0},"end":{"line":583,"column":1}},"349":{"start":{"line":568,"column":2},"end":{"line":568,"column":30}},"350":{"start":{"line":570,"column":2},"end":{"line":575,"column":3}},"351":{"start":{"line":571,"column":4},"end":{"line":571,"column":67}},"352":{"start":{"line":572,"column":4},"end":{"line":574,"column":5}},"353":{"start":{"line":573,"column":6},"end":{"line":573,"column":73}},"354":{"start":{"line":576,"column":2},"end":{"line":581,"column":3}},"355":{"start":{"line":577,"column":4},"end":{"line":579,"column":5}},"356":{"start":{"line":578,"column":6},"end":{"line":578,"column":44}},"357":{"start":{"line":580,"column":4},"end":{"line":580,"column":41}},"358":{"start":{"line":582,"column":2},"end":{"line":582,"column":54}},"359":{"start":{"line":582,"column":23},"end":{"line":582,"column":54}},"360":{"start":{"line":586,"column":0},"end":{"line":591,"column":1}},"361":{"start":{"line":587,"column":2},"end":{"line":587,"column":43}},"362":{"start":{"line":587,"column":29},"end":{"line":587,"column":43}},"363":{"start":{"line":588,"column":2},"end":{"line":589,"column":40}},"364":{"start":{"line":588,"column":53},"end":{"line":588,"column":79}},"365":{"start":{"line":589,"column":7},"end":{"line":589,"column":40}},"366":{"start":{"line":590,"column":2},"end":{"line":590,"column":13}},"367":{"start":{"line":592,"column":0},"end":{"line":595,"column":1}},"368":{"start":{"line":593,"column":2},"end":{"line":593,"column":52}},"369":{"start":{"line":593,"column":22},"end":{"line":593,"column":51}},"370":{"start":{"line":594,"column":2},"end":{"line":594,"column":13}},"371":{"start":{"line":596,"column":0},"end":{"line":609,"column":1}},"372":{"start":{"line":597,"column":2},"end":{"line":597,"column":10}},"373":{"start":{"line":598,"column":2},"end":{"line":599,"column":16}},"374":{"start":{"line":598,"column":34},"end":{"line":598,"column":65}},"375":{"start":{"line":599,"column":7},"end":{"line":599,"column":16}},"376":{"start":{"line":601,"column":2},"end":{"line":603,"column":3}},"377":{"start":{"line":602,"column":4},"end":{"line":602,"column":18}},"378":{"start":{"line":605,"column":2},"end":{"line":605,"column":78}},"379":{"start":{"line":606,"column":2},"end":{"line":606,"column":21}},"380":{"start":{"line":608,"column":2},"end":{"line":608,"column":13}},"381":{"start":{"line":610,"column":0},"end":{"line":614,"column":1}},"382":{"start":{"line":611,"column":2},"end":{"line":611,"column":83}},"383":{"start":{"line":612,"column":2},"end":{"line":612,"column":49}},"384":{"start":{"line":613,"column":2},"end":{"line":613,"column":13}},"385":{"start":{"line":615,"column":0},"end":{"line":642,"column":1}},"386":{"start":{"line":616,"column":2},"end":{"line":616,"column":17}},"387":{"start":{"line":617,"column":2},"end":{"line":617,"column":16}},"388":{"start":{"line":619,"column":2},"end":{"line":623,"column":3}},"389":{"start":{"line":620,"column":4},"end":{"line":620,"column":74}},"390":{"start":{"line":622,"column":4},"end":{"line":622,"column":102}},"391":{"start":{"line":625,"column":2},"end":{"line":625,"column":79}},"392":{"start":{"line":625,"column":26},"end":{"line":625,"column":79}},"393":{"start":{"line":627,"column":2},"end":{"line":639,"column":4}},"394":{"start":{"line":628,"column":4},"end":{"line":628,"column":24}},"395":{"start":{"line":629,"column":4},"end":{"line":629,"column":65}},"396":{"start":{"line":629,"column":14},"end":{"line":629,"column":65}},"397":{"start":{"line":630,"column":4},"end":{"line":630,"column":20}},"398":{"start":{"line":631,"column":4},"end":{"line":631,"column":35}},"399":{"start":{"line":632,"column":4},"end":{"line":634,"column":6}},"400":{"start":{"line":633,"column":6},"end":{"line":633,"column":49}},"401":{"start":{"line":635,"column":4},"end":{"line":635,"column":22}},"402":{"start":{"line":636,"column":4},"end":{"line":636,"column":40}},"403":{"start":{"line":637,"column":4},"end":{"line":637,"column":36}},"404":{"start":{"line":638,"column":4},"end":{"line":638,"column":38}},"405":{"start":{"line":640,"column":2},"end":{"line":640,"column":44}},"406":{"start":{"line":641,"column":2},"end":{"line":641,"column":13}},"407":{"start":{"line":643,"column":0},"end":{"line":653,"column":1}},"408":{"start":{"line":644,"column":2},"end":{"line":644,"column":52}},"409":{"start":{"line":645,"column":2},"end":{"line":645,"column":46}},"410":{"start":{"line":646,"column":2},"end":{"line":646,"column":19}},"411":{"start":{"line":647,"column":2},"end":{"line":651,"column":3}},"412":{"start":{"line":648,"column":4},"end":{"line":648,"column":76}},"413":{"start":{"line":648,"column":39},"end":{"line":648,"column":76}},"414":{"start":{"line":650,"column":4},"end":{"line":650,"column":35}},"415":{"start":{"line":652,"column":2},"end":{"line":652,"column":13}},"416":{"start":{"line":654,"column":0},"end":{"line":695,"column":1}},"417":{"start":{"line":655,"column":2},"end":{"line":655,"column":10}},"418":{"start":{"line":656,"column":2},"end":{"line":661,"column":3}},"419":{"start":{"line":660,"column":4},"end":{"line":660,"column":30}},"420":{"start":{"line":662,"column":2},"end":{"line":664,"column":3}},"421":{"start":{"line":663,"column":4},"end":{"line":663,"column":35}},"422":{"start":{"line":665,"column":2},"end":{"line":665,"column":22}},"423":{"start":{"line":665,"column":13},"end":{"line":665,"column":22}},"424":{"start":{"line":666,"column":2},"end":{"line":666,"column":13}},"425":{"start":{"line":667,"column":2},"end":{"line":667,"column":37}},"426":{"start":{"line":667,"column":22},"end":{"line":667,"column":37}},"427":{"start":{"line":668,"column":2},"end":{"line":668,"column":50}},"428":{"start":{"line":668,"column":24},"end":{"line":668,"column":50}},"429":{"start":{"line":669,"column":2},"end":{"line":669,"column":49}},"430":{"start":{"line":669,"column":25},"end":{"line":669,"column":49}},"431":{"start":{"line":670,"column":2},"end":{"line":670,"column":102}},"432":{"start":{"line":670,"column":27},"end":{"line":670,"column":102}},"433":{"start":{"line":671,"column":2},"end":{"line":671,"column":64}},"434":{"start":{"line":671,"column":23},"end":{"line":671,"column":64}},"435":{"start":{"line":673,"column":2},"end":{"line":673,"column":41}},"436":{"start":{"line":675,"column":2},"end":{"line":675,"column":48}},"437":{"start":{"line":676,"column":2},"end":{"line":676,"column":33}},"438":{"start":{"line":677,"column":2},"end":{"line":677,"column":42}},"439":{"start":{"line":678,"column":2},"end":{"line":678,"column":30}},"440":{"start":{"line":680,"column":2},"end":{"line":680,"column":76}},"441":{"start":{"line":681,"column":2},"end":{"line":681,"column":89}},"442":{"start":{"line":684,"column":2},"end":{"line":690,"column":3}},"443":{"start":{"line":685,"column":4},"end":{"line":689,"column":5}},"444":{"start":{"line":688,"column":6},"end":{"line":688,"column":27}},"445":{"start":{"line":691,"column":2},"end":{"line":692,"column":104}},"446":{"start":{"line":692,"column":54},"end":{"line":692,"column":92}},"447":{"start":{"line":693,"column":2},"end":{"line":693,"column":81}},"448":{"start":{"line":694,"column":2},"end":{"line":694,"column":13}},"449":{"start":{"line":696,"column":0},"end":{"line":729,"column":1}},"450":{"start":{"line":697,"column":2},"end":{"line":697,"column":13}},"451":{"start":{"line":699,"column":2},"end":{"line":701,"column":3}},"452":{"start":{"line":700,"column":4},"end":{"line":700,"column":51}},"453":{"start":{"line":703,"column":2},"end":{"line":713,"column":3}},"454":{"start":{"line":705,"column":4},"end":{"line":705,"column":20}},"455":{"start":{"line":706,"column":4},"end":{"line":706,"column":32}},"456":{"start":{"line":707,"column":9},"end":{"line":713,"column":3}},"457":{"start":{"line":709,"column":4},"end":{"line":709,"column":45}},"458":{"start":{"line":712,"column":4},"end":{"line":712,"column":51}},"459":{"start":{"line":715,"column":2},"end":{"line":726,"column":3}},"460":{"start":{"line":716,"column":4},"end":{"line":718,"column":17}},"461":{"start":{"line":717,"column":6},"end":{"line":717,"column":35}},"462":{"start":{"line":720,"column":4},"end":{"line":725,"column":5}},"463":{"start":{"line":722,"column":6},"end":{"line":722,"column":75}},"464":{"start":{"line":724,"column":6},"end":{"line":724,"column":40}},"465":{"start":{"line":727,"column":2},"end":{"line":727,"column":17}},"466":{"start":{"line":728,"column":2},"end":{"line":728,"column":13}},"467":{"start":{"line":733,"column":0},"end":{"line":749,"column":1}},"468":{"start":{"line":734,"column":2},"end":{"line":748,"column":3}},"469":{"start":{"line":735,"column":4},"end":{"line":743,"column":5}},"470":{"start":{"line":736,"column":6},"end":{"line":736,"column":87}},"471":{"start":{"line":737,"column":11},"end":{"line":743,"column":5}},"472":{"start":{"line":738,"column":6},"end":{"line":738,"column":75}},"473":{"start":{"line":740,"column":6},"end":{"line":740,"column":57}},"474":{"start":{"line":741,"column":6},"end":{"line":741,"column":25}},"475":{"start":{"line":742,"column":6},"end":{"line":742,"column":17}},"476":{"start":{"line":745,"column":4},"end":{"line":745,"column":25}},"477":{"start":{"line":746,"column":4},"end":{"line":746,"column":55}},"478":{"start":{"line":747,"column":4},"end":{"line":747,"column":15}},"479":{"start":{"line":750,"column":0},"end":{"line":753,"column":1}},"480":{"start":{"line":751,"column":2},"end":{"line":751,"column":34}},"481":{"start":{"line":751,"column":22},"end":{"line":751,"column":34}},"482":{"start":{"line":752,"column":2},"end":{"line":752,"column":43}},"483":{"start":{"line":754,"column":0},"end":{"line":758,"column":1}},"484":{"start":{"line":755,"column":2},"end":{"line":755,"column":30}},"485":{"start":{"line":755,"column":13},"end":{"line":755,"column":30}},"486":{"start":{"line":756,"column":2},"end":{"line":756,"column":34}},"487":{"start":{"line":756,"column":22},"end":{"line":756,"column":34}},"488":{"start":{"line":757,"column":2},"end":{"line":757,"column":16}},"489":{"start":{"line":759,"column":0},"end":{"line":762,"column":1}},"490":{"start":{"line":760,"column":2},"end":{"line":761,"column":58}},"491":{"start":{"line":760,"column":22},"end":{"line":760,"column":41}},"492":{"start":{"line":761,"column":7},"end":{"line":761,"column":58}},"493":{"start":{"line":763,"column":0},"end":{"line":766,"column":1}},"494":{"start":{"line":764,"column":2},"end":{"line":765,"column":59}},"495":{"start":{"line":764,"column":22},"end":{"line":764,"column":42}},"496":{"start":{"line":765,"column":7},"end":{"line":765,"column":59}},"497":{"start":{"line":767,"column":0},"end":{"line":769,"column":1}},"498":{"start":{"line":768,"column":2},"end":{"line":768,"column":30}},"499":{"start":{"line":768,"column":20},"end":{"line":768,"column":30}},"500":{"start":{"line":772,"column":0},"end":{"line":783,"column":1}},"501":{"start":{"line":773,"column":2},"end":{"line":773,"column":71}},"502":{"start":{"line":773,"column":52},"end":{"line":773,"column":71}},"503":{"start":{"line":774,"column":2},"end":{"line":781,"column":3}},"504":{"start":{"line":775,"column":4},"end":{"line":775,"column":22}},"505":{"start":{"line":776,"column":9},"end":{"line":781,"column":3}},"506":{"start":{"line":777,"column":4},"end":{"line":777,"column":24}},"507":{"start":{"line":779,"column":4},"end":{"line":779,"column":18}},"508":{"start":{"line":780,"column":4},"end":{"line":780,"column":22}},"509":{"start":{"line":782,"column":2},"end":{"line":782,"column":60}},"510":{"start":{"line":785,"column":0},"end":{"line":799,"column":1}},"511":{"start":{"line":786,"column":2},"end":{"line":786,"column":100}},"512":{"start":{"line":786,"column":34},"end":{"line":786,"column":100}},"513":{"start":{"line":787,"column":2},"end":{"line":787,"column":71}},"514":{"start":{"line":787,"column":52},"end":{"line":787,"column":71}},"515":{"start":{"line":788,"column":2},"end":{"line":794,"column":3}},"516":{"start":{"line":789,"column":4},"end":{"line":789,"column":22}},"517":{"start":{"line":790,"column":9},"end":{"line":794,"column":3}},"518":{"start":{"line":791,"column":4},"end":{"line":791,"column":24}},"519":{"start":{"line":793,"column":4},"end":{"line":793,"column":18}},"520":{"start":{"line":796,"column":2},"end":{"line":796,"column":44}},"521":{"start":{"line":796,"column":16},"end":{"line":796,"column":44}},"522":{"start":{"line":797,"column":2},"end":{"line":797,"column":30}},"523":{"start":{"line":798,"column":2},"end":{"line":798,"column":10}},"524":{"start":{"line":801,"column":0},"end":{"line":801,"column":24}},"525":{"start":{"line":803,"column":0},"end":{"line":823,"column":1}},"526":{"start":{"line":804,"column":2},"end":{"line":813,"column":3}},"527":{"start":{"line":805,"column":4},"end":{"line":811,"column":5}},"528":{"start":{"line":806,"column":6},"end":{"line":806,"column":51}},"529":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"530":{"start":{"line":808,"column":8},"end":{"line":808,"column":75}},"531":{"start":{"line":808,"column":45},"end":{"line":808,"column":75}},"532":{"start":{"line":810,"column":6},"end":{"line":810,"column":64}},"533":{"start":{"line":812,"column":4},"end":{"line":812,"column":12}},"534":{"start":{"line":814,"column":2},"end":{"line":814,"column":23}},"535":{"start":{"line":815,"column":2},"end":{"line":815,"column":27}},"536":{"start":{"line":816,"column":2},"end":{"line":816,"column":29}},"537":{"start":{"line":817,"column":2},"end":{"line":817,"column":27}},"538":{"start":{"line":818,"column":2},"end":{"line":818,"column":29}},"539":{"start":{"line":819,"column":2},"end":{"line":819,"column":27}},"540":{"start":{"line":820,"column":2},"end":{"line":820,"column":33}},"541":{"start":{"line":821,"column":2},"end":{"line":821,"column":27}},"542":{"start":{"line":822,"column":2},"end":{"line":822,"column":11}},"543":{"start":{"line":825,"column":0},"end":{"line":835,"column":1}},"544":{"start":{"line":826,"column":2},"end":{"line":826,"column":18}},"545":{"start":{"line":827,"column":2},"end":{"line":831,"column":3}},"546":{"start":{"line":828,"column":4},"end":{"line":830,"column":5}},"547":{"start":{"line":829,"column":6},"end":{"line":829,"column":42}},"548":{"start":{"line":832,"column":2},"end":{"line":832,"column":55}},"549":{"start":{"line":832,"column":20},"end":{"line":832,"column":55}},"550":{"start":{"line":833,"column":2},"end":{"line":833,"column":24}},"551":{"start":{"line":834,"column":2},"end":{"line":834,"column":34}},"552":{"start":{"line":837,"column":0},"end":{"line":837,"column":21}},"553":{"start":{"line":838,"column":0},"end":{"line":842,"column":1}},"554":{"start":{"line":839,"column":2},"end":{"line":839,"column":50}},"555":{"start":{"line":840,"column":2},"end":{"line":840,"column":33}},"556":{"start":{"line":841,"column":2},"end":{"line":841,"column":69}},"557":{"start":{"line":843,"column":0},"end":{"line":847,"column":1}},"558":{"start":{"line":844,"column":2},"end":{"line":844,"column":50}},"559":{"start":{"line":845,"column":2},"end":{"line":845,"column":31}},"560":{"start":{"line":846,"column":2},"end":{"line":846,"column":69}},"561":{"start":{"line":848,"column":0},"end":{"line":858,"column":1}},"562":{"start":{"line":849,"column":2},"end":{"line":849,"column":50}},"563":{"start":{"line":850,"column":2},"end":{"line":850,"column":32}},"564":{"start":{"line":851,"column":2},"end":{"line":856,"column":3}},"565":{"start":{"line":855,"column":4},"end":{"line":855,"column":74}},"566":{"start":{"line":857,"column":2},"end":{"line":857,"column":69}},"567":{"start":{"line":859,"column":0},"end":{"line":863,"column":1}},"568":{"start":{"line":860,"column":2},"end":{"line":860,"column":50}},"569":{"start":{"line":861,"column":2},"end":{"line":861,"column":34}},"570":{"start":{"line":862,"column":2},"end":{"line":862,"column":69}},"571":{"start":{"line":864,"column":0},"end":{"line":866,"column":1}},"572":{"start":{"line":865,"column":2},"end":{"line":865,"column":22}},"573":{"start":{"line":867,"column":0},"end":{"line":871,"column":1}},"574":{"start":{"line":868,"column":2},"end":{"line":868,"column":35}},"575":{"start":{"line":868,"column":22},"end":{"line":868,"column":35}},"576":{"start":{"line":869,"column":2},"end":{"line":869,"column":98}},"577":{"start":{"line":869,"column":31},"end":{"line":869,"column":98}},"578":{"start":{"line":870,"column":2},"end":{"line":870,"column":24}},"579":{"start":{"line":875,"column":0},"end":{"line":906,"column":1}},"580":{"start":{"line":876,"column":2},"end":{"line":876,"column":75}},"581":{"start":{"line":876,"column":62},"end":{"line":876,"column":75}},"582":{"start":{"line":877,"column":2},"end":{"line":877,"column":40}},"583":{"start":{"line":877,"column":27},"end":{"line":877,"column":40}},"584":{"start":{"line":879,"column":2},"end":{"line":879,"column":18}},"585":{"start":{"line":881,"column":2},"end":{"line":881,"column":39}},"586":{"start":{"line":883,"column":2},"end":{"line":887,"column":4}},"587":{"start":{"line":884,"column":4},"end":{"line":884,"column":32}},"588":{"start":{"line":884,"column":20},"end":{"line":884,"column":32}},"589":{"start":{"line":885,"column":4},"end":{"line":885,"column":104}},"590":{"start":{"line":885,"column":93},"end":{"line":885,"column":104}},"591":{"start":{"line":886,"column":4},"end":{"line":886,"column":60}},"592":{"start":{"line":890,"column":2},"end":{"line":899,"column":3}},"593":{"start":{"line":891,"column":4},"end":{"line":898,"column":5}},"594":{"start":{"line":894,"column":6},"end":{"line":894,"column":37}},"595":{"start":{"line":896,"column":6},"end":{"line":896,"column":28}},"596":{"start":{"line":897,"column":6},"end":{"line":897,"column":53}},"597":{"start":{"line":901,"column":2},"end":{"line":903,"column":3}},"598":{"start":{"line":902,"column":4},"end":{"line":902,"column":54}},"599":{"start":{"line":905,"column":2},"end":{"line":905,"column":13}},"600":{"start":{"line":908,"column":0},"end":{"line":910,"column":1}},"601":{"start":{"line":909,"column":2},"end":{"line":909,"column":68}},"602":{"start":{"line":912,"column":0},"end":{"line":912,"column":33}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":0},"end":{"line":32,"column":0}},{"start":{"line":32,"column":0},"end":{"line":32,"column":0}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":21},"end":{"line":45,"column":24}},{"start":{"line":45,"column":28},"end":{"line":45,"column":30}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":0},"end":{"line":49,"column":0}},{"start":{"line":49,"column":0},"end":{"line":49,"column":0}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":9}},{"start":{"line":49,"column":13},"end":{"line":49,"column":25}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":17}},{"start":{"line":64,"column":21},"end":{"line":64,"column":28}},{"start":{"line":64,"column":32},"end":{"line":64,"column":39}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"9":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"10":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"12":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"14":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":21}},{"start":{"line":115,"column":25},"end":{"line":115,"column":38}}]},"15":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":6}},{"start":{"line":118,"column":6},"end":{"line":118,"column":6}}]},"16":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"17":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"18":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"19":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"20":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"21":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"22":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":24}},{"start":{"line":141,"column":28},"end":{"line":141,"column":58}}]},"23":{"line":143,"type":"cond-expr","locations":[{"start":{"line":144,"column":21},"end":{"line":144,"column":41}},{"start":{"line":144,"column":44},"end":{"line":144,"column":65}}]},"24":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":28},"end":{"line":156,"column":51}},{"start":{"line":156,"column":55},"end":{"line":156,"column":56}}]},"25":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":58},"end":{"line":157,"column":75}},{"start":{"line":157,"column":78},"end":{"line":157,"column":80}}]},"26":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":62},"end":{"line":158,"column":81}},{"start":{"line":158,"column":84},"end":{"line":158,"column":88}}]},"27":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":70},"end":{"line":159,"column":93}},{"start":{"line":159,"column":96},"end":{"line":159,"column":101}}]},"28":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"29":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":25}},{"start":{"line":160,"column":29},"end":{"line":160,"column":52}}]},"30":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":21},"end":{"line":161,"column":35}},{"start":{"line":161,"column":39},"end":{"line":161,"column":41}}]},"31":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":32},"end":{"line":163,"column":50}},{"start":{"line":163,"column":53},"end":{"line":163,"column":55}}]},"32":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"33":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"34":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"35":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":11},"end":{"line":169,"column":67}},{"start":{"line":170,"column":11},"end":{"line":170,"column":69}}]},"36":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":13},"end":{"line":169,"column":33}},{"start":{"line":169,"column":37},"end":{"line":169,"column":66}}]},"37":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":13},"end":{"line":170,"column":34}},{"start":{"line":170,"column":38},"end":{"line":170,"column":68}}]},"38":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":11},"end":{"line":176,"column":20}},{"start":{"line":176,"column":24},"end":{"line":176,"column":35}}]},"39":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"40":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"41":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"42":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":9},"end":{"line":181,"column":9}},{"start":{"line":181,"column":9},"end":{"line":181,"column":9}}]},"43":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"44":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":16}},{"start":{"line":184,"column":20},"end":{"line":184,"column":32}}]},"45":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"46":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"47":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"48":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":30}},{"start":{"line":196,"column":34},"end":{"line":196,"column":61}},{"start":{"line":197,"column":11},"end":{"line":197,"column":39}}]},"49":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"50":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":20}},{"start":{"line":203,"column":24},"end":{"line":203,"column":41}}]},"51":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"52":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"53":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"54":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":19}},{"start":{"line":218,"column":23},"end":{"line":218,"column":50}}]},"55":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"56":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":16}},{"start":{"line":221,"column":20},"end":{"line":221,"column":35}},{"start":{"line":221,"column":39},"end":{"line":221,"column":75}},{"start":{"line":221,"column":79},"end":{"line":221,"column":91}}]},"57":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"58":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"59":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":37},"end":{"line":230,"column":52}},{"start":{"line":230,"column":56},"end":{"line":230,"column":58}}]},"60":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"61":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"62":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":16}},{"start":{"line":235,"column":20},"end":{"line":235,"column":32}}]},"63":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"64":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":9},"end":{"line":239,"column":9}},{"start":{"line":239,"column":9},"end":{"line":239,"column":9}}]},"65":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"66":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"67":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":6}},{"start":{"line":246,"column":6},"end":{"line":246,"column":6}}]},"68":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":4}},{"start":{"line":257,"column":4},"end":{"line":257,"column":4}}]},"69":{"line":264,"type":"cond-expr","locations":[{"start":{"line":264,"column":46},"end":{"line":264,"column":65}},{"start":{"line":264,"column":68},"end":{"line":264,"column":85}}]},"70":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":17},"end":{"line":264,"column":27}},{"start":{"line":264,"column":31},"end":{"line":264,"column":43}}]},"71":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":20},"end":{"line":266,"column":36}},{"start":{"line":266,"column":40},"end":{"line":266,"column":42}}]},"72":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":20},"end":{"line":268,"column":41}},{"start":{"line":268,"column":45},"end":{"line":268,"column":69}}]},"73":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"74":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"75":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"76":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"77":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"78":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":11},"end":{"line":279,"column":11}},{"start":{"line":279,"column":11},"end":{"line":279,"column":11}}]},"79":{"line":280,"type":"cond-expr","locations":[{"start":{"line":280,"column":47},"end":{"line":280,"column":59}},{"start":{"line":280,"column":62},"end":{"line":280,"column":78}}]},"80":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"81":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":17},"end":{"line":289,"column":27}},{"start":{"line":289,"column":31},"end":{"line":289,"column":46}}]},"82":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"83":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"84":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"85":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"86":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":6}},{"start":{"line":304,"column":6},"end":{"line":304,"column":6}}]},"87":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":10},"end":{"line":304,"column":39}},{"start":{"line":304,"column":43},"end":{"line":304,"column":72}}]},"88":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":6},"end":{"line":307,"column":6}},{"start":{"line":307,"column":6},"end":{"line":307,"column":6}}]},"89":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":10},"end":{"line":309,"column":10}},{"start":{"line":309,"column":10},"end":{"line":309,"column":10}}]},"90":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":6},"end":{"line":314,"column":6}},{"start":{"line":314,"column":6},"end":{"line":314,"column":6}}]},"91":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":10},"end":{"line":314,"column":20}},{"start":{"line":314,"column":24},"end":{"line":314,"column":36}}]},"92":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":325,"column":4}},{"start":{"line":325,"column":4},"end":{"line":325,"column":4}}]},"93":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"94":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":6},"end":{"line":328,"column":6}},{"start":{"line":328,"column":6},"end":{"line":328,"column":6}}]},"95":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":11},"end":{"line":336,"column":11}},{"start":{"line":336,"column":11},"end":{"line":336,"column":11}}]},"96":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":11},"end":{"line":339,"column":11}},{"start":{"line":339,"column":11},"end":{"line":339,"column":11}}]},"97":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"98":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"99":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"100":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"101":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"102":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"103":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"104":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"105":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":6},"end":{"line":377,"column":14}},{"start":{"line":377,"column":18},"end":{"line":377,"column":49}},{"start":{"line":377,"column":53},"end":{"line":377,"column":80}}]},"106":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"107":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"108":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":16},"end":{"line":394,"column":27}},{"start":{"line":394,"column":31},"end":{"line":394,"column":36}}]},"109":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"110":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":4}},{"start":{"line":398,"column":4},"end":{"line":398,"column":4}}]},"111":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":4},"end":{"line":399,"column":4}},{"start":{"line":399,"column":4},"end":{"line":399,"column":4}}]},"112":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"113":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":8},"end":{"line":405,"column":33}},{"start":{"line":406,"column":8},"end":{"line":406,"column":22}},{"start":{"line":407,"column":8},"end":{"line":407,"column":35}}]},"114":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":413,"column":4}},{"start":{"line":413,"column":4},"end":{"line":413,"column":4}}]},"115":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"116":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":20}},{"start":{"line":414,"column":24},"end":{"line":414,"column":41}}]},"117":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":419,"column":4}},{"start":{"line":419,"column":4},"end":{"line":419,"column":4}}]},"118":{"line":419,"type":"binary-expr","locations":[{"start":{"line":419,"column":8},"end":{"line":419,"column":38}},{"start":{"line":419,"column":43},"end":{"line":419,"column":64}}]},"119":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":8},"end":{"line":421,"column":8}},{"start":{"line":421,"column":8},"end":{"line":421,"column":8}}]},"120":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]},"121":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":8},"end":{"line":426,"column":34}},{"start":{"line":426,"column":38},"end":{"line":426,"column":63}},{"start":{"line":427,"column":9},"end":{"line":427,"column":32}},{"start":{"line":428,"column":10},"end":{"line":428,"column":29}},{"start":{"line":428,"column":34},"end":{"line":428,"column":55}},{"start":{"line":428,"column":59},"end":{"line":428,"column":81}},{"start":{"line":428,"column":85},"end":{"line":428,"column":109}},{"start":{"line":429,"column":8},"end":{"line":429,"column":33}}]},"122":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":6},"end":{"line":430,"column":6}},{"start":{"line":430,"column":6},"end":{"line":430,"column":6}}]},"123":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":436,"column":6}},{"start":{"line":436,"column":6},"end":{"line":436,"column":6}}]},"124":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":6}},{"start":{"line":445,"column":6},"end":{"line":445,"column":6}}]},"125":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":6}},{"start":{"line":451,"column":6},"end":{"line":451,"column":6}}]},"126":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":6},"end":{"line":454,"column":6}},{"start":{"line":454,"column":6},"end":{"line":454,"column":6}}]},"127":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":32},"end":{"line":458,"column":55}},{"start":{"line":458,"column":59},"end":{"line":458,"column":60}}]},"128":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":8},"end":{"line":462,"column":8}},{"start":{"line":462,"column":8},"end":{"line":462,"column":8}}]},"129":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"130":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":8},"end":{"line":466,"column":8}},{"start":{"line":466,"column":8},"end":{"line":466,"column":8}}]},"131":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":6},"end":{"line":489,"column":6}},{"start":{"line":489,"column":6},"end":{"line":489,"column":6}}]},"132":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":10},"end":{"line":497,"column":10}},{"start":{"line":497,"column":10},"end":{"line":497,"column":10}}]},"133":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":10},"end":{"line":499,"column":10}},{"start":{"line":499,"column":10},"end":{"line":499,"column":10}}]},"134":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":14},"end":{"line":499,"column":27}},{"start":{"line":499,"column":31},"end":{"line":499,"column":57}}]},"135":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":12},"end":{"line":506,"column":12}},{"start":{"line":506,"column":12},"end":{"line":506,"column":12}}]},"136":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":17},"end":{"line":511,"column":17}},{"start":{"line":511,"column":17},"end":{"line":511,"column":17}}]},"137":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":10},"end":{"line":515,"column":10}},{"start":{"line":515,"column":10},"end":{"line":515,"column":10}}]},"138":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":527,"column":2}},{"start":{"line":527,"column":2},"end":{"line":527,"column":2}}]},"139":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":18}},{"start":{"line":527,"column":22},"end":{"line":527,"column":40}}]},"140":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":4},"end":{"line":537,"column":4}},{"start":{"line":537,"column":4},"end":{"line":537,"column":4}}]},"141":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":8},"end":{"line":539,"column":8}},{"start":{"line":539,"column":8},"end":{"line":539,"column":8}}]},"142":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":2},"end":{"line":557,"column":2}},{"start":{"line":557,"column":2},"end":{"line":557,"column":2}}]},"143":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":7},"end":{"line":560,"column":7}},{"start":{"line":560,"column":7},"end":{"line":560,"column":7}}]},"144":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":2},"end":{"line":570,"column":2}},{"start":{"line":570,"column":2},"end":{"line":570,"column":2}}]},"145":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":4},"end":{"line":572,"column":4}},{"start":{"line":572,"column":4},"end":{"line":572,"column":4}}]},"146":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":2},"end":{"line":576,"column":2}},{"start":{"line":576,"column":2},"end":{"line":576,"column":2}}]},"147":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":2},"end":{"line":582,"column":2}},{"start":{"line":582,"column":2},"end":{"line":582,"column":2}}]},"148":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":2},"end":{"line":587,"column":2}},{"start":{"line":587,"column":2},"end":{"line":587,"column":2}}]},"149":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":2},"end":{"line":588,"column":2}},{"start":{"line":588,"column":2},"end":{"line":588,"column":2}}]},"150":{"line":588,"type":"binary-expr","locations":[{"start":{"line":588,"column":6},"end":{"line":588,"column":13}},{"start":{"line":588,"column":17},"end":{"line":588,"column":51}}]},"151":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":2},"end":{"line":598,"column":2}},{"start":{"line":598,"column":2},"end":{"line":598,"column":2}}]},"152":{"line":598,"type":"binary-expr","locations":[{"start":{"line":598,"column":6},"end":{"line":598,"column":14}},{"start":{"line":598,"column":18},"end":{"line":598,"column":32}}]},"153":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":2},"end":{"line":619,"column":2}},{"start":{"line":619,"column":2},"end":{"line":619,"column":2}}]},"154":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":2},"end":{"line":625,"column":2}},{"start":{"line":625,"column":2},"end":{"line":625,"column":2}}]},"155":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":629,"column":4}},{"start":{"line":629,"column":4},"end":{"line":629,"column":4}}]},"156":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":2},"end":{"line":647,"column":2}},{"start":{"line":647,"column":2},"end":{"line":647,"column":2}}]},"157":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":4},"end":{"line":648,"column":4}},{"start":{"line":648,"column":4},"end":{"line":648,"column":4}}]},"158":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":2},"end":{"line":656,"column":2}},{"start":{"line":656,"column":2},"end":{"line":656,"column":2}}]},"159":{"line":656,"type":"binary-expr","locations":[{"start":{"line":656,"column":6},"end":{"line":656,"column":34}},{"start":{"line":657,"column":6},"end":{"line":658,"column":43}}]},"160":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":2},"end":{"line":662,"column":2}},{"start":{"line":662,"column":2},"end":{"line":662,"column":2}}]},"161":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":2},"end":{"line":665,"column":2}},{"start":{"line":665,"column":2},"end":{"line":665,"column":2}}]},"162":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":2},"end":{"line":669,"column":2}},{"start":{"line":669,"column":2},"end":{"line":669,"column":2}}]},"163":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":2},"end":{"line":670,"column":2}},{"start":{"line":670,"column":2},"end":{"line":670,"column":2}}]},"164":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":2},"end":{"line":671,"column":2}},{"start":{"line":671,"column":2},"end":{"line":671,"column":2}}]},"165":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":4},"end":{"line":685,"column":4}},{"start":{"line":685,"column":4},"end":{"line":685,"column":4}}]},"166":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":2},"end":{"line":699,"column":2}},{"start":{"line":699,"column":2},"end":{"line":699,"column":2}}]},"167":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":2},"end":{"line":703,"column":2}},{"start":{"line":703,"column":2},"end":{"line":703,"column":2}}]},"168":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":9},"end":{"line":707,"column":9}},{"start":{"line":707,"column":9},"end":{"line":707,"column":9}}]},"169":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":2},"end":{"line":715,"column":2}},{"start":{"line":715,"column":2},"end":{"line":715,"column":2}}]},"170":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":6},"end":{"line":715,"column":13}},{"start":{"line":715,"column":17},"end":{"line":715,"column":31}}]},"171":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":4},"end":{"line":720,"column":4}},{"start":{"line":720,"column":4},"end":{"line":720,"column":4}}]},"172":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":2},"end":{"line":734,"column":2}},{"start":{"line":734,"column":2},"end":{"line":734,"column":2}}]},"173":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":4},"end":{"line":735,"column":4}},{"start":{"line":735,"column":4},"end":{"line":735,"column":4}}]},"174":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":11},"end":{"line":737,"column":11}},{"start":{"line":737,"column":11},"end":{"line":737,"column":11}}]},"175":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":2},"end":{"line":751,"column":2}},{"start":{"line":751,"column":2},"end":{"line":751,"column":2}}]},"176":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":2},"end":{"line":755,"column":2}},{"start":{"line":755,"column":2},"end":{"line":755,"column":2}}]},"177":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":2},"end":{"line":756,"column":2}},{"start":{"line":756,"column":2},"end":{"line":756,"column":2}}]},"178":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":2},"end":{"line":760,"column":2}},{"start":{"line":760,"column":2},"end":{"line":760,"column":2}}]},"179":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":2},"end":{"line":764,"column":2}},{"start":{"line":764,"column":2},"end":{"line":764,"column":2}}]},"180":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":2},"end":{"line":768,"column":2}},{"start":{"line":768,"column":2},"end":{"line":768,"column":2}}]},"181":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":2},"end":{"line":773,"column":2}},{"start":{"line":773,"column":2},"end":{"line":773,"column":2}}]},"182":{"line":773,"type":"binary-expr","locations":[{"start":{"line":773,"column":7},"end":{"line":773,"column":36}},{"start":{"line":773,"column":41},"end":{"line":773,"column":50}}]},"183":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":2},"end":{"line":774,"column":2}},{"start":{"line":774,"column":2},"end":{"line":774,"column":2}}]},"184":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":9},"end":{"line":776,"column":9}},{"start":{"line":776,"column":9},"end":{"line":776,"column":9}}]},"185":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":2},"end":{"line":786,"column":2}},{"start":{"line":786,"column":2},"end":{"line":786,"column":2}}]},"186":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":2},"end":{"line":787,"column":2}},{"start":{"line":787,"column":2},"end":{"line":787,"column":2}}]},"187":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":7},"end":{"line":787,"column":36}},{"start":{"line":787,"column":41},"end":{"line":787,"column":50}}]},"188":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":2},"end":{"line":788,"column":2}},{"start":{"line":788,"column":2},"end":{"line":788,"column":2}}]},"189":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":9},"end":{"line":790,"column":9}},{"start":{"line":790,"column":9},"end":{"line":790,"column":9}}]},"190":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":2},"end":{"line":796,"column":2}},{"start":{"line":796,"column":2},"end":{"line":796,"column":2}}]},"191":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":8},"end":{"line":808,"column":8}},{"start":{"line":808,"column":8},"end":{"line":808,"column":8}}]},"192":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":2},"end":{"line":827,"column":2}},{"start":{"line":827,"column":2},"end":{"line":827,"column":2}}]},"193":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"194":{"line":841,"type":"binary-expr","locations":[{"start":{"line":841,"column":17},"end":{"line":841,"column":27}},{"start":{"line":841,"column":31},"end":{"line":841,"column":35}}]},"195":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":17},"end":{"line":846,"column":27}},{"start":{"line":846,"column":31},"end":{"line":846,"column":35}}]},"196":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":2},"end":{"line":851,"column":2}},{"start":{"line":851,"column":2},"end":{"line":851,"column":2}}]},"197":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":6},"end":{"line":851,"column":25}},{"start":{"line":852,"column":6},"end":{"line":852,"column":38}},{"start":{"line":853,"column":7},"end":{"line":853,"column":26}},{"start":{"line":853,"column":30},"end":{"line":853,"column":70}},{"start":{"line":854,"column":6},"end":{"line":854,"column":30}}]},"198":{"line":857,"type":"binary-expr","locations":[{"start":{"line":857,"column":17},"end":{"line":857,"column":27}},{"start":{"line":857,"column":31},"end":{"line":857,"column":35}}]},"199":{"line":862,"type":"binary-expr","locations":[{"start":{"line":862,"column":17},"end":{"line":862,"column":27}},{"start":{"line":862,"column":31},"end":{"line":862,"column":35}}]},"200":{"line":868,"type":"if","locations":[{"start":{"line":868,"column":2},"end":{"line":868,"column":2}},{"start":{"line":868,"column":2},"end":{"line":868,"column":2}}]},"201":{"line":868,"type":"binary-expr","locations":[{"start":{"line":868,"column":6},"end":{"line":868,"column":9}},{"start":{"line":868,"column":13},"end":{"line":868,"column":20}}]},"202":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":2},"end":{"line":869,"column":2}},{"start":{"line":869,"column":2},"end":{"line":869,"column":2}}]},"203":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":2},"end":{"line":876,"column":2}},{"start":{"line":876,"column":2},"end":{"line":876,"column":2}}]},"204":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":6},"end":{"line":876,"column":30}},{"start":{"line":876,"column":34},"end":{"line":876,"column":60}}]},"205":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":2},"end":{"line":877,"column":2}},{"start":{"line":877,"column":2},"end":{"line":877,"column":2}}]},"206":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":4},"end":{"line":884,"column":4}},{"start":{"line":884,"column":4},"end":{"line":884,"column":4}}]},"207":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":4},"end":{"line":885,"column":4}},{"start":{"line":885,"column":4},"end":{"line":885,"column":4}}]},"208":{"line":885,"type":"binary-expr","locations":[{"start":{"line":885,"column":10},"end":{"line":885,"column":37}},{"start":{"line":885,"column":41},"end":{"line":885,"column":70}},{"start":{"line":885,"column":75},"end":{"line":885,"column":91}}]},"209":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":891,"column":4}},{"start":{"line":891,"column":4},"end":{"line":891,"column":4}}]},"210":{"line":891,"type":"binary-expr","locations":[{"start":{"line":891,"column":10},"end":{"line":891,"column":44}},{"start":{"line":891,"column":48},"end":{"line":891,"column":84}},{"start":{"line":892,"column":10},"end":{"line":892,"column":33}}]}},"code":["// Copyright 2010-2012 Mikeal Rogers","//","//    Licensed under the Apache License, Version 2.0 (the \"License\");","//    you may not use this file except in compliance with the License.","//    You may obtain a copy of the License at","//","//        http://www.apache.org/licenses/LICENSE-2.0","//","//    Unless required by applicable law or agreed to in writing, software","//    distributed under the License is distributed on an \"AS IS\" BASIS,","//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","//    See the License for the specific language governing permissions and","//    limitations under the License.","","var http = require('http')","  , https = false","  , tls = false","  , url = require('url')","  , util = require('util')","  , stream = require('stream')","  , qs = require('querystring')","  , mimetypes = require('./mimetypes')","  , oauth = require('./oauth')","  , uuid = require('./uuid')","  , ForeverAgent = require('./forever')","  , Cookie = require('./vendor/cookie')","  , CookieJar = require('./vendor/cookie/jar')","  , cookieJar = new CookieJar","  , tunnel = require('./tunnel')","  ;","  ","if (process.logging) {","  var log = process.logging('request')","}","","try {","  https = require('https')","} catch (e) {}","","try {","  tls = require('tls')","} catch (e) {}","","function toBase64 (str) {","  return (new Buffer(str || \"\", \"ascii\")).toString(\"base64\")","}","","// Hacky fix for pre-0.4.4 https","if (https && !https.Agent) {","  https.Agent = function (options) {","    http.Agent.call(this, options)","  }","  util.inherits(https.Agent, http.Agent)","  https.Agent.prototype._getConnection = function(host, port, cb) {","    var s = tls.connect(port, host, this.options, function() {","      // do other checks here?","      if (cb) cb()","    })","    return s","  }","}","","function isReadStream (rs) {","  if (rs.readable && rs.path && rs.mode) {","    return true","  }","}","","function copy (obj) {","  var o = {}","  Object.keys(obj).forEach(function (i) {","    o[i] = obj[i]","  })","  return o","}","","var isUrl = /^https?:/","","var globalPool = {}","","function Request (options) {","  stream.Stream.call(this)","  this.readable = true","  this.writable = true","","  if (typeof options === 'string') {","    options = {uri:options}","  }","  ","  var reserved = Object.keys(Request.prototype)","  for (var i in options) {","    if (reserved.indexOf(i) === -1) {","      this[i] = options[i]","    } else {","      if (typeof options[i] === 'function') {","        delete options[i]","      }","    }","  }","  options = copy(options)","  ","  this.init(options)","}","util.inherits(Request, stream.Stream)","Request.prototype.init = function (options) {","  var self = this","  ","  if (!options) options = {}","  ","  if (!self.pool) self.pool = globalPool","  self.dests = []","  self.__isRequestRequest = true","  ","  // Protect against double callback","  if (!self._callback && self.callback) {","    self._callback = self.callback","    self.callback = function () {","      if (self._callbackCalled) return // Print a warning maybe?","      self._callback.apply(self, arguments)","      self._callbackCalled = true","    }","    self.on('error', self.callback.bind())","    self.on('complete', self.callback.bind(self, null))","  }","","  if (self.url) {","    // People use this property instead all the time so why not just support it.","    self.uri = self.url","    delete self.url","  }","","  if (!self.uri) {","    throw new Error(\"options.uri is a required argument\")","  } else {","    if (typeof self.uri == \"string\") self.uri = url.parse(self.uri)","  }","  if (self.proxy) {","    if (typeof self.proxy == 'string') self.proxy = url.parse(self.proxy)","","    // do the HTTP CONNECT dance using koichik/node-tunnel","    if (http.globalAgent && self.uri.protocol === \"https:\") {","      self.tunnel = true","      var tunnelFn = self.proxy.protocol === \"http:\"","                   ? tunnel.httpsOverHttp : tunnel.httpsOverHttps","","      var tunnelOptions = { proxy: { host: self.proxy.hostname","                                   , port: +self.proxy.port ","                                   , proxyAuth: self.proxy.auth }","                          , ca: this.ca }","","      self.agent = tunnelFn(tunnelOptions)","      self.tunnel = true","    }","  }","","  self._redirectsFollowed = self._redirectsFollowed || 0","  self.maxRedirects = (self.maxRedirects !== undefined) ? self.maxRedirects : 10","  self.followRedirect = (self.followRedirect !== undefined) ? self.followRedirect : true","  self.followAllRedirects = (self.followAllRedirects !== undefined) ? self.followAllRedirects : false;","  if (self.followRedirect || self.followAllRedirects)","    self.redirects = self.redirects || []","","  self.headers = self.headers ? copy(self.headers) : {}","","  self.setHost = false","  if (!self.headers.host) {","    self.headers.host = self.uri.hostname","    if (self.uri.port) {","      if ( !(self.uri.port === 80 && self.uri.protocol === 'http:') &&","           !(self.uri.port === 443 && self.uri.protocol === 'https:') )","      self.headers.host += (':'+self.uri.port)","    }","    self.setHost = true","  }","  ","  self.jar(self._jar || options.jar)","","  if (!self.uri.pathname) {self.uri.pathname = '/'}","  if (!self.uri.port) {","    if (self.uri.protocol == 'http:') {self.uri.port = 80}","    else if (self.uri.protocol == 'https:') {self.uri.port = 443}","  }","","  if (self.proxy && !self.tunnel) {","    self.port = self.proxy.port","    self.host = self.proxy.hostname","  } else {","    self.port = self.uri.port","    self.host = self.uri.hostname","  }","","  self.clientErrorHandler = function (error) {","    if (self._aborted) return","    ","    if (self.setHost) delete self.headers.host","    if (self.req._reusedSocket && error.code === 'ECONNRESET'","        && self.agent.addRequestNoreuse) {","      self.agent = { addRequest: self.agent.addRequestNoreuse.bind(self.agent) }","      self.start()","      self.req.end()","      return","    }","    if (self.timeout && self.timeoutTimer) {","      clearTimeout(self.timeoutTimer)","      self.timeoutTimer = null","    }","    self.emit('error', error)","  }","","  if (options.form) {","    self.form(options.form)","  }","","  if (options.oauth) {","    self.oauth(options.oauth)","  }","","  if (self.uri.auth && !self.headers.authorization) {","    self.headers.authorization = \"Basic \" + toBase64(self.uri.auth.split(':').map(function(item){ return qs.unescape(item)}).join(':'))","  }","  if (self.proxy && self.proxy.auth && !self.headers['proxy-authorization'] && !self.tunnel) {","    self.headers['proxy-authorization'] = \"Basic \" + toBase64(self.proxy.auth.split(':').map(function(item){ return qs.unescape(item)}).join(':'))","  }","","  if (options.qs) self.qs(options.qs)","","  if (self.uri.path) {","    self.path = self.uri.path","  } else {","    self.path = self.uri.pathname + (self.uri.search || \"\")","  }","","  if (self.path.length === 0) self.path = '/'","","  if (self.proxy && !self.tunnel) self.path = (self.uri.protocol + '//' + self.uri.host + self.path)","","  if (options.json) {","    self.json(options.json)","  } else if (options.multipart) {","    self.multipart(options.multipart)","  }","","  if (self.body) {","    var length = 0","    if (!Buffer.isBuffer(self.body)) {","      if (Array.isArray(self.body)) {","        for (var i = 0; i < self.body.length; i++) {","          length += self.body[i].length","        }","      } else {","        self.body = new Buffer(self.body)","        length = self.body.length","      }","    } else {","      length = self.body.length","    }","    if (length) {","      self.headers['content-length'] = length","    } else {","      throw new Error('Argument error, options.body.')","    }","  }","","  var protocol = self.proxy && !self.tunnel ? self.proxy.protocol : self.uri.protocol","    , defaultModules = {'http:':http, 'https:':https}","    , httpModules = self.httpModules || {}","    ;","  self.httpModule = httpModules[protocol] || defaultModules[protocol]","","  if (!self.httpModule) throw new Error(\"Invalid protocol\")","","  if (options.ca) self.ca = options.ca","","  if (!self.agent) {","    if (options.agentOptions) self.agentOptions = options.agentOptions","","    if (options.agentClass) {","      self.agentClass = options.agentClass","    } else if (options.forever) {","      self.agentClass = protocol === 'http:' ? ForeverAgent : ForeverAgent.SSL","    } else {","      self.agentClass = self.httpModule.Agent","    }","  }","","  if (self.pool === false) {","    self.agent = false","  } else {","    self.agent = self.agent || self.getAgent()","    if (self.maxSockets) {","      // Don't use our pooling if node has the refactored client","      self.agent.maxSockets = self.maxSockets","    }","    if (self.pool.maxSockets) {","      // Don't use our pooling if node has the refactored client","      self.agent.maxSockets = self.pool.maxSockets","    }","  }","","  self.once('pipe', function (src) {","    if (self.ntick) throw new Error(\"You cannot pipe to this stream after the first nextTick() after creation of the request stream.\")","    self.src = src","    if (isReadStream(src)) {","      if (!self.headers['content-type'] && !self.headers['Content-Type'])","        self.headers['content-type'] = mimetypes.lookup(src.path.slice(src.path.lastIndexOf('.')+1))","    } else {","      if (src.headers) {","        for (var i in src.headers) {","          if (!self.headers[i]) {","            self.headers[i] = src.headers[i]","          }","        }","      }","      if (src.method && !self.method) {","        self.method = src.method","      }","    }","","    self.on('pipe', function () {","      console.error(\"You have already piped to this stream. Pipeing twice is likely to break the request.\")","    })","  })","","  process.nextTick(function () {","    if (self._aborted) return","    ","    if (self.body) {","      if (Array.isArray(self.body)) {","        self.body.forEach(function(part) {","          self.write(part)","        })","      } else {","        self.write(self.body)","      }","      self.end()","    } else if (self.requestBodyStream) {","      console.warn(\"options.requestBodyStream is deprecated, please pass the request object to stream.pipe.\")","      self.requestBodyStream.pipe(self)","    } else if (!self.src) {","      self.headers['content-length'] = 0","      self.end()","    }","    self.ntick = true","  })","}","","Request.prototype.getAgent = function () {","  var Agent = this.agentClass","  var options = {}","  if (this.agentOptions) {","    for (var i in this.agentOptions) {","      options[i] = this.agentOptions[i]","    }","  }","  if (this.ca) options.ca = this.ca","","  var poolKey = ''","","  // different types of agents are in different pools","  if (Agent !== this.httpModule.Agent) {","    poolKey += Agent.name","  }","","  if (!this.httpModule.globalAgent) {","    // node 0.4.x","    options.host = this.host","    options.port = this.port","    if (poolKey) poolKey += ':'","    poolKey += this.host + ':' + this.port","  }","","  if (options.ca) {","    if (poolKey) poolKey += ':'","    poolKey += options.ca","  }","","  if (!poolKey && Agent === this.httpModule.Agent && this.httpModule.globalAgent) {","    // not doing anything special.  Use the globalAgent","    return this.httpModule.globalAgent","  }","","  // already generated an agent for this setting","  if (this.pool[poolKey]) return this.pool[poolKey]","","  return this.pool[poolKey] = new Agent(options)","}","","Request.prototype.start = function () {","  var self = this","  ","  if (self._aborted) return","  ","  self._started = true","  self.method = self.method || 'GET'","  self.href = self.uri.href","  if (log) log('%method %href', self)","  self.req = self.httpModule.request(self, function (response) {","    if (self._aborted) return","    if (self._paused) response.pause()","    ","    self.response = response","    response.request = self","    response.toJSON = toJSON","","    if (self.httpModule === https &&","        self.strictSSL &&","        !response.client.authorized) {","      var sslErr = response.client.authorizationError","      self.emit('error', new Error('SSL Error: '+ sslErr))","      return","    }","","    if (self.setHost) delete self.headers.host","    if (self.timeout && self.timeoutTimer) {","      clearTimeout(self.timeoutTimer)","      self.timeoutTimer = null","    }  ","    ","    if (response.headers['set-cookie'] && (!self._disableCookies)) {","      response.headers['set-cookie'].forEach(function(cookie) {","        if (self._jar) self._jar.add(new Cookie(cookie))","        else cookieJar.add(new Cookie(cookie))","      })","    }","","    if (response.statusCode >= 300 && response.statusCode < 400  &&","        (self.followAllRedirects ||","         (self.followRedirect && (self.method !== 'PUT' && self.method !== 'POST' && self.method !== 'DELETE'))) &&","        response.headers.location) {","      if (self._redirectsFollowed >= self.maxRedirects) {","        self.emit('error', new Error(\"Exceeded maxRedirects. Probably stuck in a redirect loop.\"))","        return","      }","      self._redirectsFollowed += 1","","      if (!isUrl.test(response.headers.location)) {","        response.headers.location = url.resolve(self.uri.href, response.headers.location)","      }","      self.uri = response.headers.location","      self.redirects.push(","        { statusCode : response.statusCode","        , redirectUri: response.headers.location ","        }","      )","      if (self.followAllRedirects) self.method = 'GET'","      // self.method = 'GET'; // Force all redirects to use GET || commented out fixes #215","      delete self.req","      delete self.agent","      delete self._started","      delete self.body","      if (self.headers) {","        delete self.headers.host","      }","      if (log) log('Redirect to %uri', self)","      self.init()","      return // Ignore the rest of the response","    } else {","      self._redirectsFollowed = self._redirectsFollowed || 0","      // Be a good stream and emit end when the response is finished.","      // Hack to emit end on close because of a core bug that never fires end","      response.on('close', function () {","        if (!self._ended) self.response.emit('end')","      })","","      if (self.encoding) {","        if (self.dests.length !== 0) {","          console.error(\"Ingoring encoding parameter as this stream is being piped to another stream which makes the encoding option invalid.\")","        } else {","          response.setEncoding(self.encoding)","        }","      }","","      self.dests.forEach(function (dest) {","        self.pipeDest(dest)","      })","","      response.on(\"data\", function (chunk) {","        self._destdata = true","        self.emit(\"data\", chunk)","      })","      response.on(\"end\", function (chunk) {","        self._ended = true","        self.emit(\"end\", chunk)","      })","      response.on(\"close\", function () {self.emit(\"close\")})","","      self.emit('response', response)","","      if (self.callback) {","        var buffer = []","        var bodyLen = 0","        self.on(\"data\", function (chunk) {","          buffer.push(chunk)","          bodyLen += chunk.length","        })","        self.on(\"end\", function () {","          if (self._aborted) return","          ","          if (buffer.length && Buffer.isBuffer(buffer[0])) {","            var body = new Buffer(bodyLen)","            var i = 0","            buffer.forEach(function (chunk) {","              chunk.copy(body, i, 0, chunk.length)","              i += chunk.length","            })","            if (self.encoding === null) {","              response.body = body","            } else {","              response.body = body.toString()","            }","          } else if (buffer.length) {","            response.body = buffer.join('')","          }","","          if (self._json) {","            try {","              response.body = JSON.parse(response.body)","            } catch (e) {}","          }","          ","          self.emit('complete', response, response.body)","        })","      }","    }","  })","","  if (self.timeout && !self.timeoutTimer) {","    self.timeoutTimer = setTimeout(function() {","      self.req.abort()","      var e = new Error(\"ETIMEDOUT\")","      e.code = \"ETIMEDOUT\"","      self.emit(\"error\", e)","    }, self.timeout)","    ","    // Set additional timeout on socket - in case if remote","    // server freeze after sending headers","    if (self.req.setTimeout) { // only works on node 0.6+","      self.req.setTimeout(self.timeout, function(){","        if (self.req) {","          self.req.abort()","          var e = new Error(\"ESOCKETTIMEDOUT\")","          e.code = \"ESOCKETTIMEDOUT\"","          self.emit(\"error\", e)","        }","      })","    }","  }","  ","  self.req.on('error', self.clientErrorHandler)","  ","  self.emit('request', self.req)","}","","Request.prototype.abort = function() {","  this._aborted = true;","  ","  if (this.req) {","    this.req.abort()","  }","  else if (this.response) {","    this.response.abort()","  }","  ","  this.emit(\"abort\")","}","","Request.prototype.pipeDest = function (dest) {","  var response = this.response","  // Called after the response is received","  if (dest.headers) {","    dest.headers['content-type'] = response.headers['content-type']","    if (response.headers['content-length']) {","      dest.headers['content-length'] = response.headers['content-length']","    }","  }","  if (dest.setHeader) {","    for (var i in response.headers) {","      dest.setHeader(i, response.headers[i])","    }","    dest.statusCode = response.statusCode","  }","  if (this.pipefilter) this.pipefilter(response, dest)","}","","// Composable API","Request.prototype.setHeader = function (name, value, clobber) {","  if (clobber === undefined) clobber = true","  if (clobber || !this.headers.hasOwnProperty(name)) this.headers[name] = value","  else this.headers[name] += ',' + value","  return this","}","Request.prototype.setHeaders = function (headers) {","  for (i in headers) {this.setHeader(i, headers[i])}","  return this","}","Request.prototype.qs = function (q, clobber) {","  var base","  if (!clobber && this.uri.query) base = qs.parse(this.uri.query)","  else base = {}","  ","  for (var i in q) {","    base[i] = q[i]","  }","  ","  this.uri = url.parse(this.uri.href.split('?')[0] + '?' + qs.stringify(base))","  this.url = this.uri","  ","  return this","}","Request.prototype.form = function (form) {","  this.headers['content-type'] = 'application/x-www-form-urlencoded; charset=utf-8'","  this.body = qs.stringify(form).toString('utf8')","  return this","}","Request.prototype.multipart = function (multipart) {","  var self = this","  self.body = []","","  if (!self.headers['content-type']) {","    self.headers['content-type'] = 'multipart/related; boundary=frontier';","  } else {","    self.headers['content-type'] = self.headers['content-type'].split(';')[0] + '; boundary=frontier';","  }","","  if (!multipart.forEach) throw new Error('Argument error, options.multipart.')","","  multipart.forEach(function (part) {","    var body = part.body","    if(!body) throw Error('Body attribute missing in multipart.')","    delete part.body","    var preamble = '--frontier\\r\\n'","    Object.keys(part).forEach(function(key){","      preamble += key + ': ' + part[key] + '\\r\\n'","    })","    preamble += '\\r\\n'","    self.body.push(new Buffer(preamble))","    self.body.push(new Buffer(body))","    self.body.push(new Buffer('\\r\\n'))","  })","  self.body.push(new Buffer('--frontier--'))","  return self","}","Request.prototype.json = function (val) {","  this.setHeader('content-type', 'application/json')","  this.setHeader('accept', 'application/json')","  this._json = true","  if (typeof val === 'boolean') {","    if (typeof this.body === 'object') this.body = JSON.stringify(this.body)","  } else {","    this.body = JSON.stringify(val)","  }","  return this","}","Request.prototype.oauth = function (_oauth) {","  var form","  if (this.headers['content-type'] && ","      this.headers['content-type'].slice(0, 'application/x-www-form-urlencoded'.length) ===","        'application/x-www-form-urlencoded' ","     ) {","    form = qs.parse(this.body)","  }","  if (this.uri.query) {","    form = qs.parse(this.uri.query)","  } ","  if (!form) form = {}","  var oa = {}","  for (var i in form) oa[i] = form[i]","  for (var i in _oauth) oa['oauth_'+i] = _oauth[i]","  if (!oa.oauth_version) oa.oauth_version = '1.0'","  if (!oa.oauth_timestamp) oa.oauth_timestamp = Math.floor( (new Date()).getTime() / 1000 ).toString()","  if (!oa.oauth_nonce) oa.oauth_nonce = uuid().replace(/-/g, '')","  ","  oa.oauth_signature_method = 'HMAC-SHA1'","  ","  var consumer_secret = oa.oauth_consumer_secret","  delete oa.oauth_consumer_secret","  var token_secret = oa.oauth_token_secret","  delete oa.oauth_token_secret","  ","  var baseurl = this.uri.protocol + '//' + this.uri.host + this.uri.pathname","  var signature = oauth.hmacsign(this.method, baseurl, oa, consumer_secret, token_secret)","  ","  // oa.oauth_signature = signature","  for (var i in form) {","    if ( i.slice(0, 'oauth_') in _oauth) {","      // skip ","    } else {","      delete oa['oauth_'+i]","    }","  }","  this.headers.Authorization = ","    'OAuth '+Object.keys(oa).sort().map(function (i) {return i+'=\"'+oauth.rfc3986(oa[i])+'\"'}).join(',')","  this.headers.Authorization += ',oauth_signature=\"'+oauth.rfc3986(signature)+'\"'","  return this","}","Request.prototype.jar = function (jar) {","  var cookies","  ","  if (this._redirectsFollowed === 0) {","    this.originalCookieHeader = this.headers.cookie","  }","  ","  if (jar === false) {","    // disable cookies","    cookies = false;","    this._disableCookies = true;","  } else if (jar) {","    // fetch cookie from the user defined cookie jar","    cookies = jar.get({ url: this.uri.href })","  } else {","    // fetch cookie from the global cookie jar","    cookies = cookieJar.get({ url: this.uri.href })","  }","  ","  if (cookies && cookies.length) {","    var cookieString = cookies.map(function (c) {","      return c.name + \"=\" + c.value","    }).join(\"; \")","","    if (this.originalCookieHeader) {","      // Don't overwrite existing Cookie header","      this.headers.cookie = this.originalCookieHeader + '; ' + cookieString","    } else {","      this.headers.cookie = cookieString","    }","  }","  this._jar = jar","  return this","}","","","// Stream API","Request.prototype.pipe = function (dest, opts) {","  if (this.response) {","    if (this._destdata) {","      throw new Error(\"You cannot pipe after data has been emitted from the response.\")","    } else if (this._ended) {","      throw new Error(\"You cannot pipe after the response has been ended.\")","    } else {","      stream.Stream.prototype.pipe.call(this, dest, opts)","      this.pipeDest(dest)","      return dest","    }","  } else {","    this.dests.push(dest)","    stream.Stream.prototype.pipe.call(this, dest, opts)","    return dest","  }","}","Request.prototype.write = function () {","  if (!this._started) this.start()","  this.req.write.apply(this.req, arguments)","}","Request.prototype.end = function (chunk) {","  if (chunk) this.write(chunk)","  if (!this._started) this.start()","  this.req.end()","}","Request.prototype.pause = function () {","  if (!this.response) this._paused = true","  else this.response.pause.apply(this.response, arguments)","}","Request.prototype.resume = function () {","  if (!this.response) this._paused = false","  else this.response.resume.apply(this.response, arguments)","}","Request.prototype.destroy = function () {","  if (!this._ended) this.end()","}","","// organize params for post, put, head, del","function initParams(uri, options, callback) {","  if ((typeof options === 'function') && !callback) callback = options;","  if (typeof options === 'object') {","    options.uri = uri;","  } else if (typeof uri === 'string') {","    options = {uri:uri};","  } else {","    options = uri;","    uri = options.uri;","  }","  return { uri: uri, options: options, callback: callback };","}","","function request (uri, options, callback) {","  if (typeof uri === 'undefined') throw new Error('undefined is not a valid uri or options object.')","  if ((typeof options === 'function') && !callback) callback = options;","  if (typeof options === 'object') {","    options.uri = uri;","  } else if (typeof uri === 'string') {","    options = {uri:uri};","  } else {","    options = uri;","  }","","  if (callback) options.callback = callback;","  var r = new Request(options)","  return r","}","","module.exports = request","","request.defaults = function (options) {","  var def = function (method) {","    var d = function (uri, opts, callback) {","      var params = initParams(uri, opts, callback);","      for (var i in options) {","        if (params.options[i] === undefined) params.options[i] = options[i]","      }","      return method(params.uri, params.options, params.callback)","    }","    return d","  }","  var de = def(request)","  de.get = def(request.get)","  de.post = def(request.post)","  de.put = def(request.put)","  de.head = def(request.head)","  de.del = def(request.del)","  de.cookie = def(request.cookie)","  de.jar = def(request.jar)","  return de","}","","request.forever = function (agentOptions, optionsArg) {","  var options = {}","  if (optionsArg) {","    for (option in optionsArg) {","      options[option] = optionsArg[option]","    }","  }","  if (agentOptions) options.agentOptions = agentOptions","  options.forever = true","  return request.defaults(options)","}","","request.get = request","request.post = function (uri, options, callback) {","  var params = initParams(uri, options, callback);","  params.options.method = 'POST';","  return request(params.uri || null, params.options, params.callback)","}","request.put = function (uri, options, callback) {","  var params = initParams(uri, options, callback);","  params.options.method = 'PUT'","  return request(params.uri || null, params.options, params.callback)","}","request.head = function (uri, options, callback) {","  var params = initParams(uri, options, callback);","  params.options.method = 'HEAD'","  if (params.options.body || ","      params.options.requestBodyStream || ","      (params.options.json && typeof params.options.json !== 'boolean') || ","      params.options.multipart) {","    throw new Error(\"HTTP HEAD requests MUST NOT include a request body.\")","  }","  return request(params.uri || null, params.options, params.callback)","}","request.del = function (uri, options, callback) {","  var params = initParams(uri, options, callback);","  params.options.method = 'DELETE'","  return request(params.uri || null, params.options, params.callback)","}","request.jar = function () {","  return new CookieJar","}","request.cookie = function (str) {","  if (str && str.uri) str = str.uri","  if (typeof str !== 'string') throw new Error(\"The cookie function only accepts STRING as param\")","  return new Cookie(str)","}","","// Safe toJSON","","function getSafe (self, uuid) {  ","  if (typeof self === 'object' || typeof self === 'function') var safe = {}","  if (Array.isArray(self)) var safe = []","","  var recurse = []","  ","  Object.defineProperty(self, uuid, {})","  ","  var attrs = Object.keys(self).filter(function (i) {","    if (i === uuid) return false ","    if ( (typeof self[i] !== 'object' && typeof self[i] !== 'function') || self[i] === null) return true","    return !(Object.getOwnPropertyDescriptor(self[i], uuid))","  })","  ","  ","  for (var i=0;i<attrs.length;i++) {","    if ( (typeof self[attrs[i]] !== 'object' && typeof self[attrs[i]] !== 'function') || ","          self[attrs[i]] === null","        ) {","      safe[attrs[i]] = self[attrs[i]]","    } else {","      recurse.push(attrs[i])","      Object.defineProperty(self[attrs[i]], uuid, {})","    }","  }","","  for (var i=0;i<recurse.length;i++) {","    safe[recurse[i]] = getSafe(self[recurse[i]], uuid)","  }","  ","  return safe","}","","function toJSON () {","  return getSafe(this, (((1+Math.random())*0x10000)|0).toString(16))","}","","Request.prototype.toJSON = toJSON","",""],"l":{"15":1,"32":1,"33":0,"36":1,"37":1,"40":1,"41":1,"44":1,"45":0,"49":1,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"59":0,"63":1,"64":0,"65":0,"69":1,"70":0,"71":0,"72":0,"74":0,"77":1,"79":1,"81":1,"82":0,"83":0,"84":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"100":0,"102":0,"104":1,"105":1,"106":0,"108":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"122":0,"123":0,"126":0,"128":0,"129":0,"132":0,"133":0,"135":0,"137":0,"138":0,"141":0,"142":0,"143":0,"146":0,"151":0,"152":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"163":0,"165":0,"166":0,"167":0,"168":0,"169":0,"171":0,"173":0,"176":0,"178":0,"179":0,"180":0,"181":0,"184":0,"185":0,"186":0,"188":0,"189":0,"192":0,"193":0,"195":0,"196":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"207":0,"210":0,"211":0,"214":0,"215":0,"218":0,"219":0,"221":0,"222":0,"225":0,"227":0,"228":0,"230":0,"233":0,"235":0,"237":0,"238":0,"239":0,"240":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"251":0,"252":0,"255":0,"257":0,"258":0,"260":0,"264":0,"268":0,"270":0,"272":0,"274":0,"275":0,"277":0,"278":0,"279":0,"280":0,"282":0,"286":0,"287":0,"289":0,"290":0,"292":0,"294":0,"296":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"307":0,"308":0,"309":0,"310":0,"314":0,"315":0,"319":0,"320":0,"324":0,"325":0,"327":0,"328":0,"329":0,"330":0,"333":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"343":0,"347":1,"348":0,"349":0,"350":0,"351":0,"352":0,"355":0,"357":0,"360":0,"361":0,"364":0,"366":0,"367":0,"368":0,"369":0,"372":0,"373":0,"374":0,"377":0,"379":0,"383":0,"385":0,"388":1,"389":0,"391":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"401":0,"402":0,"403":0,"405":0,"408":0,"409":0,"410":0,"413":0,"414":0,"415":0,"416":0,"419":0,"420":0,"421":0,"422":0,"426":0,"430":0,"431":0,"432":0,"434":0,"436":0,"437":0,"439":0,"440":0,"445":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"454":0,"455":0,"456":0,"458":0,"461":0,"462":0,"465":0,"466":0,"467":0,"469":0,"473":0,"474":0,"477":0,"478":0,"479":0,"481":0,"482":0,"483":0,"485":0,"487":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"496":0,"497":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"506":0,"507":0,"509":0,"511":0,"512":0,"515":0,"516":0,"517":0,"521":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"549":0,"551":0,"554":1,"555":0,"557":0,"558":0,"560":0,"561":0,"564":0,"567":1,"568":0,"570":0,"571":0,"572":0,"573":0,"576":0,"577":0,"578":0,"580":0,"582":0,"586":1,"587":0,"588":0,"589":0,"590":0,"592":1,"593":0,"594":0,"596":1,"597":0,"598":0,"599":0,"601":0,"602":0,"605":0,"606":0,"608":0,"610":1,"611":0,"612":0,"613":0,"615":1,"616":0,"617":0,"619":0,"620":0,"622":0,"625":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"635":0,"636":0,"637":0,"638":0,"640":0,"641":0,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"650":0,"652":0,"654":1,"655":0,"656":0,"660":0,"662":0,"663":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"673":0,"675":0,"676":0,"677":0,"678":0,"680":0,"681":0,"684":0,"685":0,"688":0,"691":0,"692":0,"693":0,"694":0,"696":1,"697":0,"699":0,"700":0,"703":0,"705":0,"706":0,"707":0,"709":0,"712":0,"715":0,"716":0,"717":0,"720":0,"722":0,"724":0,"727":0,"728":0,"733":1,"734":0,"735":0,"736":0,"737":0,"738":0,"740":0,"741":0,"742":0,"745":0,"746":0,"747":0,"750":1,"751":0,"752":0,"754":1,"755":0,"756":0,"757":0,"759":1,"760":0,"761":0,"763":1,"764":0,"765":0,"767":1,"768":0,"772":1,"773":0,"774":0,"775":0,"776":0,"777":0,"779":0,"780":0,"782":0,"785":1,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"793":0,"796":0,"797":0,"798":0,"801":1,"803":1,"804":1,"805":8,"806":0,"807":0,"808":0,"810":0,"812":8,"814":1,"815":1,"816":1,"817":1,"818":1,"819":1,"820":1,"821":1,"822":1,"825":1,"826":0,"827":0,"828":0,"829":0,"832":0,"833":0,"834":0,"837":1,"838":1,"839":0,"840":0,"841":0,"843":1,"844":0,"845":0,"846":0,"848":1,"849":0,"850":0,"851":0,"855":0,"857":0,"859":1,"860":0,"861":0,"862":0,"864":1,"865":0,"867":1,"868":0,"869":0,"870":0,"875":1,"876":0,"877":0,"879":0,"881":0,"883":0,"884":0,"885":0,"886":0,"890":0,"891":0,"894":0,"896":0,"897":0,"901":0,"902":0,"905":0,"908":1,"909":0,"912":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/mimetypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/mimetypes.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":146,"loc":{"start":{"line":146,"column":17},"end":{"line":146,"column":44}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":144,"column":2}},"2":{"start":{"line":146,"column":0},"end":{"line":152,"column":2}},"3":{"start":{"line":147,"column":2},"end":{"line":147,"column":58}},"4":{"start":{"line":149,"column":2},"end":{"line":151,"column":18}}},"branchMap":{"1":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":27}},{"start":{"line":147,"column":31},"end":{"line":147,"column":57}}]},"2":{"line":149,"type":"cond-expr","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":24}},{"start":{"line":151,"column":6},"end":{"line":151,"column":17}}]}},"code":["// from http://github.com/felixge/node-paperboy","exports.types = {","  \"3gp\":\"video/3gpp\",","  \"aiff\":\"audio/x-aiff\",","  \"arj\":\"application/x-arj-compressed\",","  \"asf\":\"video/x-ms-asf\",","  \"asx\":\"video/x-ms-asx\",","  \"au\":\"audio/ulaw\",","  \"avi\":\"video/x-msvideo\",","  \"bcpio\":\"application/x-bcpio\",","  \"ccad\":\"application/clariscad\",","  \"cod\":\"application/vnd.rim.cod\",","  \"com\":\"application/x-msdos-program\",","  \"cpio\":\"application/x-cpio\",","  \"cpt\":\"application/mac-compactpro\",","  \"csh\":\"application/x-csh\",","  \"css\":\"text/css\",","  \"deb\":\"application/x-debian-package\",","  \"dl\":\"video/dl\",","  \"doc\":\"application/msword\",","  \"drw\":\"application/drafting\",","  \"dvi\":\"application/x-dvi\",","  \"dwg\":\"application/acad\",","  \"dxf\":\"application/dxf\",","  \"dxr\":\"application/x-director\",","  \"etx\":\"text/x-setext\",","  \"ez\":\"application/andrew-inset\",","  \"fli\":\"video/x-fli\",","  \"flv\":\"video/x-flv\",","  \"gif\":\"image/gif\",","  \"gl\":\"video/gl\",","  \"gtar\":\"application/x-gtar\",","  \"gz\":\"application/x-gzip\",","  \"hdf\":\"application/x-hdf\",","  \"hqx\":\"application/mac-binhex40\",","  \"html\":\"text/html\",","  \"ice\":\"x-conference/x-cooltalk\",","  \"ico\":\"image/x-icon\",","  \"ief\":\"image/ief\",","  \"igs\":\"model/iges\",","  \"ips\":\"application/x-ipscript\",","  \"ipx\":\"application/x-ipix\",","  \"jad\":\"text/vnd.sun.j2me.app-descriptor\",","  \"jar\":\"application/java-archive\",","  \"jpeg\":\"image/jpeg\",","  \"jpg\":\"image/jpeg\",","  \"js\":\"text/javascript\",","  \"json\":\"application/json\",","  \"latex\":\"application/x-latex\",","  \"lsp\":\"application/x-lisp\",","  \"lzh\":\"application/octet-stream\",","  \"m\":\"text/plain\",","  \"m3u\":\"audio/x-mpegurl\",","  \"m4v\":\"video/mp4\",","  \"man\":\"application/x-troff-man\",","  \"me\":\"application/x-troff-me\",","  \"midi\":\"audio/midi\",","  \"mif\":\"application/x-mif\",","  \"mime\":\"www/mime\",","  \"mkv\":\"  video/x-matrosk\",","  \"movie\":\"video/x-sgi-movie\",","  \"mp4\":\"video/mp4\",","  \"mp41\":\"video/mp4\",","  \"mp42\":\"video/mp4\",","  \"mpg\":\"video/mpeg\",","  \"mpga\":\"audio/mpeg\",","  \"ms\":\"application/x-troff-ms\",","  \"mustache\":\"text/plain\",","  \"nc\":\"application/x-netcdf\",","  \"oda\":\"application/oda\",","  \"ogm\":\"application/ogg\",","  \"pbm\":\"image/x-portable-bitmap\",","  \"pdf\":\"application/pdf\",","  \"pgm\":\"image/x-portable-graymap\",","  \"pgn\":\"application/x-chess-pgn\",","  \"pgp\":\"application/pgp\",","  \"pm\":\"application/x-perl\",","  \"png\":\"image/png\",","  \"pnm\":\"image/x-portable-anymap\",","  \"ppm\":\"image/x-portable-pixmap\",","  \"ppz\":\"application/vnd.ms-powerpoint\",","  \"pre\":\"application/x-freelance\",","  \"prt\":\"application/pro_eng\",","  \"ps\":\"application/postscript\",","  \"qt\":\"video/quicktime\",","  \"ra\":\"audio/x-realaudio\",","  \"rar\":\"application/x-rar-compressed\",","  \"ras\":\"image/x-cmu-raster\",","  \"rgb\":\"image/x-rgb\",","  \"rm\":\"audio/x-pn-realaudio\",","  \"rpm\":\"audio/x-pn-realaudio-plugin\",","  \"rtf\":\"text/rtf\",","  \"rtx\":\"text/richtext\",","  \"scm\":\"application/x-lotusscreencam\",","  \"set\":\"application/set\",","  \"sgml\":\"text/sgml\",","  \"sh\":\"application/x-sh\",","  \"shar\":\"application/x-shar\",","  \"silo\":\"model/mesh\",","  \"sit\":\"application/x-stuffit\",","  \"skt\":\"application/x-koan\",","  \"smil\":\"application/smil\",","  \"snd\":\"audio/basic\",","  \"sol\":\"application/solids\",","  \"spl\":\"application/x-futuresplash\",","  \"src\":\"application/x-wais-source\",","  \"stl\":\"application/SLA\",","  \"stp\":\"application/STEP\",","  \"sv4cpio\":\"application/x-sv4cpio\",","  \"sv4crc\":\"application/x-sv4crc\",","  \"svg\":\"image/svg+xml\",","  \"swf\":\"application/x-shockwave-flash\",","  \"tar\":\"application/x-tar\",","  \"tcl\":\"application/x-tcl\",","  \"tex\":\"application/x-tex\",","  \"texinfo\":\"application/x-texinfo\",","  \"tgz\":\"application/x-tar-gz\",","  \"tiff\":\"image/tiff\",","  \"tr\":\"application/x-troff\",","  \"tsi\":\"audio/TSP-audio\",","  \"tsp\":\"application/dsptype\",","  \"tsv\":\"text/tab-separated-values\",","  \"unv\":\"application/i-deas\",","  \"ustar\":\"application/x-ustar\",","  \"vcd\":\"application/x-cdlink\",","  \"vda\":\"application/vda\",","  \"vivo\":\"video/vnd.vivo\",","  \"vrm\":\"x-world/x-vrml\",","  \"wav\":\"audio/x-wav\",","  \"wax\":\"audio/x-ms-wax\",","  \"webm\":\"video/webm\",","  \"wma\":\"audio/x-ms-wma\",","  \"wmv\":\"video/x-ms-wmv\",","  \"wmx\":\"video/x-ms-wmx\",","  \"wrl\":\"model/vrml\",","  \"wvx\":\"video/x-ms-wvx\",","  \"xbm\":\"image/x-xbitmap\",","  \"xlw\":\"application/vnd.ms-excel\",","  \"xml\":\"text/xml\",","  \"xpm\":\"image/x-xpixmap\",","  \"xwd\":\"image/x-xwindowdump\",","  \"xyz\":\"chemical/x-pdb\",","  \"zip\":\"application/zip\"","};","","exports.lookup = function(ext, defaultType) {","  defaultType = defaultType || 'application/octet-stream';","","  return (ext in exports.types)","    ? exports.types[ext]","    : defaultType;","};"],"l":{"2":1,"146":1,"147":0,"149":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/oauth.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/oauth.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"sha1","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}}},"2":{"name":"rfc3986","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}}},"3":{"name":"hmacsign","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":86}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":35},"end":{"line":24,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":69}},"4":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"5":{"start":{"line":10,"column":2},"end":{"line":16,"column":5}},"6":{"start":{"line":19,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":21,"column":2},"end":{"line":27,"column":18}},"8":{"start":{"line":26,"column":6},"end":{"line":26,"column":68}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":39}},"11":{"start":{"line":29,"column":20},"end":{"line":29,"column":39}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"14":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":5},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":24}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["var crypto = require('crypto')","  , qs = require('querystring')","  ;","","function sha1 (key, body) {","  return crypto.createHmac('sha1', key).update(body).digest('base64')","}","","function rfc3986 (str) {","  return encodeURIComponent(str)","    .replace(/!/g,'%21')","    .replace(/\\*/g,'%2A')","    .replace(/\\(/g,'%28')","    .replace(/\\)/g,'%29')","    .replace(/'/g,'%27')","    ;","}","","function hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret, body) {","  // adapted from https://dev.twitter.com/docs/auth/oauth","  var base = ","    (httpMethod || 'GET') + \"&\" +","    encodeURIComponent(  base_uri ) + \"&\" +","    Object.keys(params).sort().map(function (i) {","      // big WTF here with the escape + encoding but it's what twitter wants","      return escape(rfc3986(i)) + \"%3D\" + escape(rfc3986(params[i]))","    }).join(\"%26\")","  var key = consumer_secret + '&'","  if (token_secret) key += token_secret","  return sha1(key, base)","}","","exports.hmacsign = hmacsign","exports.rfc3986 = rfc3986"],"l":{"1":1,"5":1,"6":0,"9":1,"10":0,"19":1,"21":0,"26":0,"28":0,"29":0,"30":0,"33":1,"34":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/uuid.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/uuid.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":1}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":40}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":68}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":68}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":12}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":30}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":48}},"8":{"start":{"line":13,"column":30},"end":{"line":13,"column":48}},"9":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":20}}},"branchMap":{},"code":["module.exports = function () {","  var s = [], itoh = '0123456789ABCDEF';"," ","  // Make array of random hex digits. The UUID only has 32 digits in it, but we","  // allocate an extra items to make room for the '-'s we'll be inserting.","  for (var i = 0; i <36; i++) s[i] = Math.floor(Math.random()*0x10);"," ","  // Conform to RFC-4122, section 4.4","  s[14] = 4;  // Set 4 high bits of time_high field to version","  s[19] = (s[19] & 0x3) | 0x8;  // Specify 2 high bits of clock sequence"," ","  // Convert to hex chars","  for (var i = 0; i <36; i++) s[i] = itoh[s[i]];"," ","  // Insert '-'s","  s[8] = s[13] = s[18] = s[23] = '-';"," ","  return s.join('');","}",""],"l":{"1":1,"2":0,"6":0,"9":0,"10":0,"13":0,"16":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/forever.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/forever.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"ForeverAgent","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":47}}},"3":{"name":"onIdleError","line":27,"loc":{"start":{"line":27,"column":6},"end":{"line":27,"column":29}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":62}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":38},"end":{"line":62,"column":68}}},"6":{"name":"ForeverAgentSSL","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":35}}},"7":{"name":"createConnectionSSL","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":4,"column":0},"end":{"line":8,"column":37}},"4":{"start":{"line":10,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":17}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":20}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":19}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":23}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":70}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":77}},"12":{"start":{"line":18,"column":2},"end":{"line":39,"column":4}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"14":{"start":{"line":20,"column":4},"end":{"line":38,"column":5}},"15":{"start":{"line":21,"column":6},"end":{"line":21,"column":50}},"16":{"start":{"line":22,"column":11},"end":{"line":38,"column":5}},"17":{"start":{"line":23,"column":6},"end":{"line":23,"column":62}},"18":{"start":{"line":23,"column":35},"end":{"line":23,"column":62}},"19":{"start":{"line":24,"column":6},"end":{"line":24,"column":41}},"20":{"start":{"line":27,"column":6},"end":{"line":29,"column":7}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":24}},"22":{"start":{"line":30,"column":6},"end":{"line":30,"column":39}},"23":{"start":{"line":31,"column":6},"end":{"line":31,"column":37}},"24":{"start":{"line":37,"column":6},"end":{"line":37,"column":23}},"25":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}},"27":{"start":{"line":47,"column":0},"end":{"line":47,"column":62}},"28":{"start":{"line":48,"column":0},"end":{"line":48,"column":69}},"29":{"start":{"line":49,"column":0},"end":{"line":60,"column":1}},"30":{"start":{"line":50,"column":2},"end":{"line":50,"column":30}},"31":{"start":{"line":51,"column":2},"end":{"line":59,"column":3}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":49}},"33":{"start":{"line":53,"column":4},"end":{"line":53,"column":63}},"34":{"start":{"line":54,"column":4},"end":{"line":54,"column":34}},"35":{"start":{"line":55,"column":4},"end":{"line":55,"column":28}},"36":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"37":{"start":{"line":58,"column":4},"end":{"line":58,"column":43}},"38":{"start":{"line":62,"column":0},"end":{"line":89,"column":1}},"39":{"start":{"line":63,"column":2},"end":{"line":72,"column":3}},"40":{"start":{"line":64,"column":4},"end":{"line":64,"column":46}},"41":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"42":{"start":{"line":66,"column":6},"end":{"line":66,"column":42}},"43":{"start":{"line":68,"column":9},"end":{"line":72,"column":3}},"44":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"45":{"start":{"line":71,"column":4},"end":{"line":71,"column":31}},"46":{"start":{"line":74,"column":2},"end":{"line":82,"column":3}},"47":{"start":{"line":75,"column":4},"end":{"line":75,"column":49}},"48":{"start":{"line":76,"column":4},"end":{"line":81,"column":5}},"49":{"start":{"line":77,"column":6},"end":{"line":77,"column":45}},"50":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"51":{"start":{"line":79,"column":8},"end":{"line":79,"column":37}},"52":{"start":{"line":84,"column":2},"end":{"line":88,"column":3}},"53":{"start":{"line":87,"column":4},"end":{"line":87,"column":53}},"54":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"55":{"start":{"line":92,"column":2},"end":{"line":92,"column":34}},"56":{"start":{"line":94,"column":0},"end":{"line":94,"column":44}},"57":{"start":{"line":96,"column":0},"end":{"line":96,"column":64}},"58":{"start":{"line":97,"column":0},"end":{"line":97,"column":75}},"59":{"start":{"line":99,"column":0},"end":{"line":103,"column":1}},"60":{"start":{"line":100,"column":2},"end":{"line":100,"column":21}},"61":{"start":{"line":101,"column":2},"end":{"line":101,"column":21}},"62":{"start":{"line":102,"column":2},"end":{"line":102,"column":29}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":24}},{"start":{"line":12,"column":28},"end":{"line":12,"column":30}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":20},"end":{"line":16,"column":43}},{"start":{"line":16,"column":47},"end":{"line":16,"column":70}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":20},"end":{"line":17,"column":43}},{"start":{"line":17,"column":47},"end":{"line":17,"column":77}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":57}}]},"6":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":11}},{"start":{"line":22,"column":11},"end":{"line":22,"column":11}}]},"7":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"9":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":65}},{"start":{"line":51,"column":69},"end":{"line":51,"column":101}}]},"10":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"12":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":9},"end":{"line":68,"column":9}},{"start":{"line":68,"column":9},"end":{"line":68,"column":9}}]},"13":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":13},"end":{"line":68,"column":31}},{"start":{"line":68,"column":35},"end":{"line":68,"column":66}}]},"14":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"15":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"16":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"17":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"18":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":25}},{"start":{"line":84,"column":29},"end":{"line":84,"column":55}}]}},"code":["module.exports = ForeverAgent","ForeverAgent.SSL = ForeverAgentSSL","","var util = require('util')","  , Agent = require('http').Agent","  , net = require('net')","  , tls = require('tls')","  , AgentSSL = require('https').Agent","","function ForeverAgent(options) {","  var self = this","  self.options = options || {}","  self.requests = {}","  self.sockets = {}","  self.freeSockets = {}","  self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets","  self.minSockets = self.options.minSockets || ForeverAgent.defaultMinSockets","  self.on('free', function(socket, host, port) {","    var name = host + ':' + port","    if (self.requests[name] && self.requests[name].length) {","      self.requests[name].shift().onSocket(socket)","    } else if (self.sockets[name].length < self.minSockets) {","      if (!self.freeSockets[name]) self.freeSockets[name] = []","      self.freeSockets[name].push(socket)","      ","      // if an error happens while we don't use the socket anyway, meh, throw the socket away","      function onIdleError() {","        socket.destroy()","      }","      socket._onIdleError = onIdleError","      socket.on('error', onIdleError)","    } else {","      // If there are no pending requests just destroy the","      // socket and it will get removed from the pool. This","      // gets us out of timeout issues and allows us to","      // default to Connection:keep-alive.","      socket.destroy();","    }","  })","","}","util.inherits(ForeverAgent, Agent)","","ForeverAgent.defaultMinSockets = 5","","","ForeverAgent.prototype.createConnection = net.createConnection","ForeverAgent.prototype.addRequestNoreuse = Agent.prototype.addRequest","ForeverAgent.prototype.addRequest = function(req, host, port) {","  var name = host + ':' + port","  if (this.freeSockets[name] && this.freeSockets[name].length > 0 && !req.useChunkedEncodingByDefault) {","    var idleSocket = this.freeSockets[name].pop()","    idleSocket.removeListener('error', idleSocket._onIdleError)","    delete idleSocket._onIdleError","    req._reusedSocket = true","    req.onSocket(idleSocket)","  } else {","    this.addRequestNoreuse(req, host, port)","  }","}","","ForeverAgent.prototype.removeSocket = function(s, name, host, port) {","  if (this.sockets[name]) {","    var index = this.sockets[name].indexOf(s);","    if (index !== -1) {","      this.sockets[name].splice(index, 1);","    }","  } else if (this.sockets[name] && this.sockets[name].length === 0) {","    // don't leak","    delete this.sockets[name];","    delete this.requests[name];","  }","  ","  if (this.freeSockets[name]) {","    var index = this.freeSockets[name].indexOf(s)","    if (index !== -1) {","      this.freeSockets[name].splice(index, 1)","      if (this.freeSockets[name].length === 0) {","        delete this.freeSockets[name]","      }","    }","  }","","  if (this.requests[name] && this.requests[name].length) {","    // If we have pending requests and a socket gets closed a new one","    // needs to be created to take over in the pool for the one that closed.","    this.createSocket(name, host, port).emit('free');","  }","}","","function ForeverAgentSSL (options) {","  ForeverAgent.call(this, options)","}","util.inherits(ForeverAgentSSL, ForeverAgent)","","ForeverAgentSSL.prototype.createConnection = createConnectionSSL","ForeverAgentSSL.prototype.addRequestNoreuse = AgentSSL.prototype.addRequest","","function createConnectionSSL (port, host, options) {","  options.port = port","  options.host = host","  return tls.connect(options)","}",""],"l":{"1":1,"2":1,"4":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"27":1,"28":0,"30":0,"31":0,"37":0,"42":1,"44":1,"47":1,"48":1,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"62":1,"63":0,"64":0,"65":0,"66":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"84":0,"87":0,"91":1,"92":0,"94":1,"96":1,"97":1,"99":1,"100":0,"101":0,"102":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/vendor/cookie/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/vendor/cookie/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Cookie","line":21,"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":66}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":28},"end":{"line":25,"column":47}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":28},"end":{"line":63,"column":38}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}},"2":{"start":{"line":21,"column":0},"end":{"line":54,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":17}},"4":{"start":{"line":25,"column":2},"end":{"line":43,"column":11}},"5":{"start":{"line":26,"column":3},"end":{"line":26,"column":29}},"6":{"start":{"line":27,"column":3},"end":{"line":27,"column":63}},"7":{"start":{"line":28,"column":3},"end":{"line":28,"column":41}},"8":{"start":{"line":29,"column":3},"end":{"line":29,"column":59}},"9":{"start":{"line":31,"column":3},"end":{"line":41,"column":4}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":22}},"12":{"start":{"line":36,"column":8},"end":{"line":41,"column":4}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":31}},"15":{"start":{"line":42,"column":3},"end":{"line":42,"column":14}},"16":{"start":{"line":46,"column":2},"end":{"line":48,"column":15}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":39}},"18":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"19":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":48}},{"start":{"line":27,"column":51},"end":{"line":27,"column":62}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":51}},{"start":{"line":29,"column":54},"end":{"line":29,"column":58}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":3},"end":{"line":31,"column":3}},{"start":{"line":31,"column":3},"end":{"line":31,"column":3}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"5":{"line":46,"type":"cond-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":28}},{"start":{"line":48,"column":6},"end":{"line":48,"column":14}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":22}},{"start":{"line":52,"column":24},"end":{"line":53,"column":38}}]},"7":{"line":52,"type":"cond-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":33}},{"start":{"line":53,"column":35},"end":{"line":53,"column":38}}]}},"code":["/*!"," * Tobi - Cookie"," * Copyright(c) 2010 LearnBoost <dev@learnboost.com>"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var url = require('url');","","/**"," * Initialize a new `Cookie` with the given cookie `str` and `req`."," *"," * @param {String} str"," * @param {IncomingRequest} req"," * @api private"," */","","var Cookie = exports = module.exports = function Cookie(str, req) {","  this.str = str;","","  // Map the key/val pairs","  str.split(/ *; */).reduce(function(obj, pair){","   var p = pair.indexOf('=');","   var key = p > 0 ? pair.substring(0, p).trim() : pair.trim();","   var lowerCasedKey = key.toLowerCase();","   var value = p > 0 ? pair.substring(p + 1).trim() : true;","","   if (!obj.name) {","    // First key is the name","    obj.name = key;","    obj.value = value;","   }","   else if (lowerCasedKey === 'httponly') {","    obj.httpOnly = value;","   }","   else {","    obj[lowerCasedKey] = value;","   }","   return obj;","  }, this);","","  // Expires","  this.expires = this.expires","    ? new Date(this.expires)","    : Infinity;","","  // Default or trim path","  this.path = this.path","    ? this.path.trim(): req ","    ? url.parse(req.url).pathname: '/';","};","","/**"," * Return the original cookie string."," *"," * @return {String}"," * @api public"," */","","Cookie.prototype.toString = function(){","  return this.str;","};",""],"l":{"11":1,"21":1,"22":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"40":0,"42":0,"46":0,"51":0,"63":1,"64":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/vendor/cookie/jar.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/vendor/cookie/jar.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"CookieJar","line":19,"loc":{"start":{"line":19,"column":43},"end":{"line":19,"column":64}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":42}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":48}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":26},"end":{"line":46,"column":39}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":45}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":35},"end":{"line":65,"column":48}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":23},"end":{"line":68,"column":39}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"4":{"start":{"line":30,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":31,"column":2},"end":{"line":34,"column":5}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":28}},"8":{"start":{"line":46,"column":0},"end":{"line":55,"column":2}},"9":{"start":{"line":47,"column":2},"end":{"line":49,"column":23}},"10":{"start":{"line":50,"column":2},"end":{"line":54,"column":5}},"11":{"start":{"line":51,"column":4},"end":{"line":53,"column":59}},"12":{"start":{"line":53,"column":6},"end":{"line":53,"column":59}},"13":{"start":{"line":65,"column":0},"end":{"line":72,"column":2}},"14":{"start":{"line":66,"column":2},"end":{"line":66,"column":30}},"15":{"start":{"line":67,"column":2},"end":{"line":71,"column":3}},"16":{"start":{"line":68,"column":4},"end":{"line":70,"column":18}},"17":{"start":{"line":69,"column":6},"end":{"line":69,"column":46}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":34}},{"start":{"line":33,"column":38},"end":{"line":33,"column":59}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":38}},{"start":{"line":51,"column":42},"end":{"line":51,"column":62}},{"start":{"line":52,"column":9},"end":{"line":52,"column":61}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":31},"end":{"line":52,"column":55}},{"start":{"line":52,"column":59},"end":{"line":52,"column":60}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]}},"code":["/*!","* Tobi - CookieJar","* Copyright(c) 2010 LearnBoost <dev@learnboost.com>","* MIT Licensed","*/","","/**","* Module dependencies.","*/","","var url = require('url');","","/**","* Initialize a new `CookieJar`.","*","* @api private","*/","","var CookieJar = exports = module.exports = function CookieJar() {","  this.cookies = [];","};","","/**","* Add the given `cookie` to the jar.","*","* @param {Cookie} cookie","* @api private","*/","","CookieJar.prototype.add = function(cookie){","  this.cookies = this.cookies.filter(function(c){","    // Avoid duplication (same path, same name)","    return !(c.name == cookie.name && c.path == cookie.path);","  });","  this.cookies.push(cookie);","};","","/**","* Get cookies for the given `req`.","*","* @param {IncomingRequest} req","* @return {Array}","* @api private","*/","","CookieJar.prototype.get = function(req){","  var path = url.parse(req.url).pathname","    , now = new Date","    , specificity = {};","  return this.cookies.filter(function(cookie){","    if (0 == path.indexOf(cookie.path) && now < cookie.expires","      && cookie.path.length > (specificity[cookie.name] || 0))","      return specificity[cookie.name] = cookie.path.length;","  });","};","","/**","* Return Cookie string for the given `req`.","*","* @param {IncomingRequest} req","* @return {String}","* @api private","*/","","CookieJar.prototype.cookieString = function(req){","  var cookies = this.get(req);","  if (cookies.length) {","    return cookies.map(function(cookie){","      return cookie.name + '=' + cookie.value;","    }).join('; ');","  }","};",""],"l":{"11":1,"19":1,"20":1,"30":1,"31":0,"33":0,"35":0,"46":1,"47":0,"50":0,"51":0,"53":0,"65":1,"66":0,"67":0,"68":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/tunnel.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/node_modules/request/tunnel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,1],"15":[1,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"httpOverHttp","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}}},"2":{"name":"httpsOverHttp","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":32}}},"3":{"name":"httpOverHttps","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}}},"4":{"name":"httpsOverHttps","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}}},"5":{"name":"TunnelingAgent","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":33}}},"6":{"name":"onFree","line":53,"loc":{"start":{"line":53,"column":18},"end":{"line":53,"column":54}}},"7":{"name":"addRequest","line":70,"loc":{"start":{"line":70,"column":38},"end":{"line":70,"column":75}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":60},"end":{"line":80,"column":77}}},"9":{"name":"onFree","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":22}}},"10":{"name":"onCloseOrRemove","line":90,"loc":{"start":{"line":90,"column":4},"end":{"line":90,"column":34}}},"11":{"name":"createSocket","line":99,"loc":{"start":{"line":99,"column":40},"end":{"line":99,"column":75}}},"12":{"name":"onResponse","line":124,"loc":{"start":{"line":124,"column":2},"end":{"line":124,"column":27}}},"13":{"name":"onUpgrade","line":129,"loc":{"start":{"line":129,"column":2},"end":{"line":129,"column":40}}},"14":{"name":"(anonymous_14)","line":131,"loc":{"start":{"line":131,"column":21},"end":{"line":131,"column":32}}},"15":{"name":"onConnect","line":136,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":40}}},"16":{"name":"onError","line":156,"loc":{"start":{"line":156,"column":2},"end":{"line":156,"column":26}}},"17":{"name":"removeSocket","line":169,"loc":{"start":{"line":169,"column":40},"end":{"line":169,"column":70}}},"18":{"name":"(anonymous_18)","line":180,"loc":{"start":{"line":180,"column":31},"end":{"line":180,"column":48}}},"19":{"name":"createSecureSocket","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":41}}},"20":{"name":"(anonymous_20)","line":188,"loc":{"start":{"line":188,"column":60},"end":{"line":188,"column":77}}},"21":{"name":"mergeOptions","line":198,"loc":{"start":{"line":198,"column":0},"end":{"line":198,"column":30}}},"22":{"name":"(anonymous_22)","line":217,"loc":{"start":{"line":217,"column":10},"end":{"line":217,"column":21}}},"23":{"name":"(anonymous_23)","line":227,"loc":{"start":{"line":227,"column":10},"end":{"line":227,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}},"12":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":42}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":15}},"16":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":42}},"20":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"21":{"start":{"line":31,"column":0},"end":{"line":35,"column":1}},"22":{"start":{"line":32,"column":2},"end":{"line":32,"column":42}},"23":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"24":{"start":{"line":34,"column":2},"end":{"line":34,"column":15}},"25":{"start":{"line":37,"column":0},"end":{"line":42,"column":1}},"26":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"27":{"start":{"line":39,"column":2},"end":{"line":39,"column":32}},"28":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":15}},"30":{"start":{"line":45,"column":0},"end":{"line":67,"column":1}},"31":{"start":{"line":46,"column":2},"end":{"line":46,"column":18}},"32":{"start":{"line":47,"column":2},"end":{"line":47,"column":31}},"33":{"start":{"line":48,"column":2},"end":{"line":48,"column":47}},"34":{"start":{"line":49,"column":2},"end":{"line":49,"column":76}},"35":{"start":{"line":50,"column":2},"end":{"line":50,"column":21}},"36":{"start":{"line":51,"column":2},"end":{"line":51,"column":20}},"37":{"start":{"line":53,"column":2},"end":{"line":66,"column":5}},"38":{"start":{"line":54,"column":4},"end":{"line":63,"column":5}},"39":{"start":{"line":55,"column":6},"end":{"line":55,"column":37}},"40":{"start":{"line":56,"column":6},"end":{"line":62,"column":7}},"41":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"42":{"start":{"line":60,"column":8},"end":{"line":60,"column":41}},"43":{"start":{"line":61,"column":8},"end":{"line":61,"column":15}},"44":{"start":{"line":64,"column":4},"end":{"line":64,"column":21}},"45":{"start":{"line":65,"column":4},"end":{"line":65,"column":30}},"46":{"start":{"line":68,"column":0},"end":{"line":68,"column":51}},"47":{"start":{"line":70,"column":0},"end":{"line":97,"column":2}},"48":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"49":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"50":{"start":{"line":75,"column":4},"end":{"line":75,"column":63}},"51":{"start":{"line":76,"column":4},"end":{"line":76,"column":11}},"52":{"start":{"line":80,"column":2},"end":{"line":96,"column":5}},"53":{"start":{"line":81,"column":4},"end":{"line":81,"column":30}},"54":{"start":{"line":82,"column":4},"end":{"line":82,"column":40}},"55":{"start":{"line":83,"column":4},"end":{"line":83,"column":46}},"56":{"start":{"line":84,"column":4},"end":{"line":84,"column":25}},"57":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"58":{"start":{"line":87,"column":6},"end":{"line":87,"column":44}},"59":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"60":{"start":{"line":91,"column":6},"end":{"line":91,"column":26}},"61":{"start":{"line":92,"column":6},"end":{"line":92,"column":44}},"62":{"start":{"line":93,"column":6},"end":{"line":93,"column":54}},"63":{"start":{"line":94,"column":6},"end":{"line":94,"column":60}},"64":{"start":{"line":99,"column":0},"end":{"line":167,"column":2}},"65":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"66":{"start":{"line":101,"column":2},"end":{"line":101,"column":23}},"67":{"start":{"line":102,"column":2},"end":{"line":102,"column":33}},"68":{"start":{"line":104,"column":2},"end":{"line":108,"column":5}},"69":{"start":{"line":109,"column":2},"end":{"line":113,"column":3}},"70":{"start":{"line":110,"column":4},"end":{"line":110,"column":58}},"71":{"start":{"line":111,"column":4},"end":{"line":112,"column":64}},"72":{"start":{"line":115,"column":2},"end":{"line":115,"column":34}},"73":{"start":{"line":116,"column":2},"end":{"line":116,"column":48}},"74":{"start":{"line":117,"column":2},"end":{"line":117,"column":49}},"75":{"start":{"line":118,"column":2},"end":{"line":118,"column":42}},"76":{"start":{"line":119,"column":2},"end":{"line":119,"column":40}},"77":{"start":{"line":120,"column":2},"end":{"line":120,"column":40}},"78":{"start":{"line":121,"column":2},"end":{"line":121,"column":36}},"79":{"start":{"line":122,"column":2},"end":{"line":122,"column":19}},"80":{"start":{"line":124,"column":2},"end":{"line":127,"column":3}},"81":{"start":{"line":126,"column":4},"end":{"line":126,"column":23}},"82":{"start":{"line":129,"column":2},"end":{"line":134,"column":3}},"83":{"start":{"line":131,"column":4},"end":{"line":133,"column":7}},"84":{"start":{"line":132,"column":6},"end":{"line":132,"column":35}},"85":{"start":{"line":136,"column":2},"end":{"line":154,"column":3}},"86":{"start":{"line":137,"column":4},"end":{"line":137,"column":36}},"87":{"start":{"line":138,"column":4},"end":{"line":138,"column":32}},"88":{"start":{"line":140,"column":4},"end":{"line":153,"column":5}},"89":{"start":{"line":141,"column":6},"end":{"line":141,"column":35}},"90":{"start":{"line":142,"column":6},"end":{"line":142,"column":52}},"91":{"start":{"line":143,"column":6},"end":{"line":143,"column":63}},"92":{"start":{"line":144,"column":6},"end":{"line":144,"column":17}},"93":{"start":{"line":146,"column":6},"end":{"line":147,"column":28}},"94":{"start":{"line":148,"column":6},"end":{"line":149,"column":61}},"95":{"start":{"line":150,"column":6},"end":{"line":150,"column":32}},"96":{"start":{"line":151,"column":6},"end":{"line":151,"column":43}},"97":{"start":{"line":152,"column":6},"end":{"line":152,"column":37}},"98":{"start":{"line":156,"column":2},"end":{"line":166,"column":3}},"99":{"start":{"line":157,"column":4},"end":{"line":157,"column":36}},"100":{"start":{"line":159,"column":4},"end":{"line":160,"column":38}},"101":{"start":{"line":161,"column":4},"end":{"line":162,"column":52}},"102":{"start":{"line":163,"column":4},"end":{"line":163,"column":30}},"103":{"start":{"line":164,"column":4},"end":{"line":164,"column":41}},"104":{"start":{"line":165,"column":4},"end":{"line":165,"column":35}},"105":{"start":{"line":169,"column":0},"end":{"line":184,"column":2}},"106":{"start":{"line":170,"column":2},"end":{"line":170,"column":40}},"107":{"start":{"line":171,"column":2},"end":{"line":173,"column":3}},"108":{"start":{"line":172,"column":4},"end":{"line":172,"column":11}},"109":{"start":{"line":174,"column":2},"end":{"line":174,"column":30}},"110":{"start":{"line":176,"column":2},"end":{"line":176,"column":38}},"111":{"start":{"line":177,"column":2},"end":{"line":183,"column":3}},"112":{"start":{"line":180,"column":4},"end":{"line":182,"column":7}},"113":{"start":{"line":181,"column":6},"end":{"line":181,"column":39}},"114":{"start":{"line":186,"column":0},"end":{"line":195,"column":1}},"115":{"start":{"line":187,"column":2},"end":{"line":187,"column":18}},"116":{"start":{"line":188,"column":2},"end":{"line":194,"column":5}},"117":{"start":{"line":190,"column":4},"end":{"line":192,"column":8}},"118":{"start":{"line":193,"column":4},"end":{"line":193,"column":21}},"119":{"start":{"line":198,"column":0},"end":{"line":212,"column":1}},"120":{"start":{"line":199,"column":2},"end":{"line":210,"column":3}},"121":{"start":{"line":200,"column":4},"end":{"line":200,"column":33}},"122":{"start":{"line":201,"column":4},"end":{"line":209,"column":5}},"123":{"start":{"line":202,"column":6},"end":{"line":202,"column":40}},"124":{"start":{"line":203,"column":6},"end":{"line":208,"column":7}},"125":{"start":{"line":204,"column":8},"end":{"line":204,"column":24}},"126":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"127":{"start":{"line":206,"column":10},"end":{"line":206,"column":35}},"128":{"start":{"line":211,"column":2},"end":{"line":211,"column":16}},"129":{"start":{"line":215,"column":0},"end":{"line":215,"column":10}},"130":{"start":{"line":216,"column":0},"end":{"line":228,"column":1}},"131":{"start":{"line":217,"column":2},"end":{"line":225,"column":3}},"132":{"start":{"line":218,"column":4},"end":{"line":218,"column":53}},"133":{"start":{"line":219,"column":4},"end":{"line":223,"column":5}},"134":{"start":{"line":220,"column":6},"end":{"line":220,"column":37}},"135":{"start":{"line":222,"column":6},"end":{"line":222,"column":30}},"136":{"start":{"line":224,"column":4},"end":{"line":224,"column":39}},"137":{"start":{"line":227,"column":2},"end":{"line":227,"column":24}},"138":{"start":{"line":229,"column":0},"end":{"line":229,"column":22}}},"branchMap":{"1":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":24}},{"start":{"line":47,"column":28},"end":{"line":47,"column":30}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":22},"end":{"line":48,"column":40}},{"start":{"line":48,"column":44},"end":{"line":48,"column":46}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":20},"end":{"line":49,"column":43}},{"start":{"line":49,"column":47},"end":{"line":49,"column":75}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":31}},{"start":{"line":56,"column":35},"end":{"line":56,"column":56}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"8":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":29},"end":{"line":110,"column":51}},{"start":{"line":110,"column":55},"end":{"line":110,"column":57}}]},"9":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"10":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"11":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"12":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"13":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"14":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":0},"end":{"line":216,"column":0}},{"start":{"line":216,"column":0},"end":{"line":216,"column":0}}]},"15":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":26}},{"start":{"line":216,"column":30},"end":{"line":216,"column":71}}]},"16":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]}},"code":["'use strict';","","var net = require('net');","var tls = require('tls');","var http = require('http');","var https = require('https');","var events = require('events');","var assert = require('assert');","var util = require('util');","","","exports.httpOverHttp = httpOverHttp;","exports.httpsOverHttp = httpsOverHttp;","exports.httpOverHttps = httpOverHttps;","exports.httpsOverHttps = httpsOverHttps;","","","function httpOverHttp(options) {","  var agent = new TunnelingAgent(options);","  agent.request = http.request;","  return agent;","}","","function httpsOverHttp(options) {","  var agent = new TunnelingAgent(options);","  agent.request = http.request;","  agent.createSocket = createSecureSocket;","  return agent;","}","","function httpOverHttps(options) {","  var agent = new TunnelingAgent(options);","  agent.request = https.request;","  return agent;","}","","function httpsOverHttps(options) {","  var agent = new TunnelingAgent(options);","  agent.request = https.request;","  agent.createSocket = createSecureSocket;","  return agent;","}","","","function TunnelingAgent(options) {","  var self = this;","  self.options = options || {};","  self.proxyOptions = self.options.proxy || {};","  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;","  self.requests = [];","  self.sockets = [];","","  self.on('free', function onFree(socket, host, port) {","    for (var i = 0, len = self.requests.length; i < len; ++i) {","      var pending = self.requests[i];","      if (pending.host === host && pending.port === port) {","        // Detect the request to connect same origin server,","        // reuse the connection.","        self.requests.splice(i, 1);","        pending.request.onSocket(socket);","        return;","      }","    }","    socket.destroy();","    self.removeSocket(socket);","  });","}","util.inherits(TunnelingAgent, events.EventEmitter);","","TunnelingAgent.prototype.addRequest = function addRequest(req, host, port) {","  var self = this;","","  if (self.sockets.length >= this.maxSockets) {","    // We are over limit so we'll add it to the queue.","    self.requests.push({host: host, port: port, request: req});","    return;","  }","","  // If we are under maxSockets create a new one.","  self.createSocket({host: host, port: port, request: req}, function(socket) {","    socket.on('free', onFree);","    socket.on('close', onCloseOrRemove);","    socket.on('agentRemove', onCloseOrRemove);","    req.onSocket(socket);","","    function onFree() {","      self.emit('free', socket, host, port);","    }","","    function onCloseOrRemove(err) {","      self.removeSocket();","      socket.removeListener('free', onFree);","      socket.removeListener('close', onCloseOrRemove);","      socket.removeListener('agentRemove', onCloseOrRemove);","    }","  });","};","","TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {","  var self = this;","  var placeholder = {};","  self.sockets.push(placeholder);","","  var connectOptions = mergeOptions({}, self.proxyOptions, {","    method: 'CONNECT',","    path: options.host + ':' + options.port,","    agent: false","  });","  if (connectOptions.proxyAuth) {","    connectOptions.headers = connectOptions.headers || {};","    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +","        new Buffer(connectOptions.proxyAuth).toString('base64');","  }","","  debug('making CONNECT request');","  var connectReq = self.request(connectOptions);","  connectReq.useChunkedEncodingByDefault = false; // for v0.6","  connectReq.once('response', onResponse); // for v0.6","  connectReq.once('upgrade', onUpgrade);   // for v0.6","  connectReq.once('connect', onConnect);   // for v0.7 or later","  connectReq.once('error', onError);","  connectReq.end();","","  function onResponse(res) {","    // Very hacky. This is necessary to avoid http-parser leaks.","    res.upgrade = true;","  }","","  function onUpgrade(res, socket, head) {","    // Hacky.","    process.nextTick(function() {","      onConnect(res, socket, head);","    });","  }","","  function onConnect(res, socket, head) {","    connectReq.removeAllListeners();","    socket.removeAllListeners();","","    if (res.statusCode === 200) {","      assert.equal(head.length, 0);","      debug('tunneling connection has established');","      self.sockets[self.sockets.indexOf(placeholder)] = socket;","      cb(socket);","    } else {","      debug('tunneling socket could not be established, statusCode=%d',","            res.statusCode);","      var error = new Error('tunneling socket could not be established, ' +","                            'sutatusCode=' + res.statusCode);","      error.code = 'ECONNRESET';","      options.request.emit('error', error);","      self.removeSocket(placeholder);","    }","  }","","  function onError(cause) {","    connectReq.removeAllListeners();","","    debug('tunneling socket could not be established, cause=%s\\n',","          cause.message, cause.stack);","    var error = new Error('tunneling socket could not be established, ' +","                          'cause=' + cause.message);","    error.code = 'ECONNRESET';","    options.request.emit('error', error);","    self.removeSocket(placeholder);","  }","};","","TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {","  var pos = this.sockets.indexOf(socket)","  if (pos === -1) {","    return;","  }","  this.sockets.splice(pos, 1);","","  var pending = this.requests.shift();","  if (pending) {","    // If we have pending requests and a socket gets closed a new one","    // needs to be created to take over in the pool for the one that closed.","    this.createSocket(pending, function(socket) {","      pending.request.onSocket(socket);","    });","  }","};","","function createSecureSocket(options, cb) {","  var self = this;","  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {","    // 0 is dummy port for v0.6","    var secureSocket = tls.connect(0, mergeOptions({}, self.options, {","      socket: socket","    }));","    cb(secureSocket);","  });","}","","","function mergeOptions(target) {","  for (var i = 1, len = arguments.length; i < len; ++i) {","    var overrides = arguments[i];","    if (typeof overrides === 'object') {","      var keys = Object.keys(overrides);","      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {","        var k = keys[j];","        if (overrides[k] !== undefined) {","          target[k] = overrides[k];","        }","      }","    }","  }","  return target;","}","","","var debug;","if (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {","  debug = function() {","    var args = Array.prototype.slice.call(arguments);","    if (typeof args[0] === 'string') {","      args[0] = 'TUNNEL: ' + args[0];","    } else {","      args.unshift('TUNNEL:');","    }","    console.error.apply(console, args);","  }","} else {","  debug = function() {};","}","exports.debug = debug; // for test",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"12":1,"13":1,"14":1,"15":1,"18":1,"19":0,"20":0,"21":0,"24":1,"25":0,"26":0,"27":0,"28":0,"31":1,"32":0,"33":0,"34":0,"37":1,"38":0,"39":0,"40":0,"41":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"59":0,"60":0,"61":0,"64":0,"65":0,"68":1,"70":1,"71":0,"73":0,"75":0,"76":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":1,"87":0,"90":1,"91":0,"92":0,"93":0,"94":0,"99":1,"100":0,"101":0,"102":0,"104":0,"109":0,"110":0,"111":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":1,"126":0,"129":1,"131":0,"132":0,"136":1,"137":0,"138":0,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"148":0,"150":0,"151":0,"152":0,"156":1,"157":0,"159":0,"161":0,"163":0,"164":0,"165":0,"169":1,"170":0,"171":0,"172":0,"174":0,"176":0,"177":0,"180":0,"181":0,"186":1,"187":0,"188":0,"190":0,"193":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"211":0,"215":1,"216":1,"217":0,"218":0,"219":0,"220":0,"222":0,"224":0,"227":1,"229":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/util.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"each","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":48}}},"3":{"name":"merge","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":17}}},"4":{"name":"mix","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":15}}},"5":{"name":"values","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":21}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":28,"column":1}},"2":{"start":{"line":21,"column":4},"end":{"line":27,"column":5}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":30}},"4":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"5":{"start":{"line":25,"column":12},"end":{"line":25,"column":36}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}},"7":{"start":{"line":42,"column":0},"end":{"line":50,"column":1}},"8":{"start":{"line":43,"column":4},"end":{"line":44,"column":20}},"9":{"start":{"line":46,"column":4},"end":{"line":46,"column":25}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"11":{"start":{"line":49,"column":4},"end":{"line":49,"column":18}},"12":{"start":{"line":51,"column":0},"end":{"line":51,"column":22}},"13":{"start":{"line":64,"column":0},"end":{"line":89,"column":1}},"14":{"start":{"line":65,"column":4},"end":{"line":67,"column":41}},"15":{"start":{"line":69,"column":4},"end":{"line":86,"column":5}},"16":{"start":{"line":70,"column":8},"end":{"line":70,"column":35}},"17":{"start":{"line":72,"column":8},"end":{"line":85,"column":9}},"18":{"start":{"line":73,"column":12},"end":{"line":73,"column":28}},"19":{"start":{"line":74,"column":12},"end":{"line":74,"column":32}},"20":{"start":{"line":76,"column":12},"end":{"line":84,"column":13}},"21":{"start":{"line":78,"column":16},"end":{"line":78,"column":36}},"22":{"start":{"line":79,"column":18},"end":{"line":84,"column":13}},"23":{"start":{"line":80,"column":16},"end":{"line":80,"column":70}},"24":{"start":{"line":81,"column":16},"end":{"line":81,"column":40}},"25":{"start":{"line":83,"column":16},"end":{"line":83,"column":36}},"26":{"start":{"line":88,"column":4},"end":{"line":88,"column":18}},"27":{"start":{"line":90,"column":0},"end":{"line":90,"column":18}},"28":{"start":{"line":101,"column":0},"end":{"line":116,"column":1}},"29":{"start":{"line":102,"column":4},"end":{"line":102,"column":28}},"30":{"start":{"line":104,"column":4},"end":{"line":113,"column":5}},"31":{"start":{"line":105,"column":8},"end":{"line":105,"column":29}},"32":{"start":{"line":107,"column":8},"end":{"line":107,"column":33}},"33":{"start":{"line":108,"column":8},"end":{"line":108,"column":19}},"34":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"35":{"start":{"line":111,"column":12},"end":{"line":111,"column":37}},"36":{"start":{"line":115,"column":4},"end":{"line":115,"column":17}},"37":{"start":{"line":117,"column":0},"end":{"line":117,"column":24}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":18},"end":{"line":79,"column":18}},{"start":{"line":79,"column":18},"end":{"line":79,"column":18}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":22},"end":{"line":79,"column":47}},{"start":{"line":79,"column":51},"end":{"line":79,"column":72}},{"start":{"line":79,"column":76},"end":{"line":79,"column":100}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":16},"end":{"line":80,"column":47}},{"start":{"line":80,"column":52},"end":{"line":80,"column":68}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]}},"code":["/**","Various utility methods.","","@module elastical","@submodule util","**/","","/**","Iterates over all items in _obj_ if _obj_ is an array, or over all enumerable","properties if _obj_ is an object, calling the _callback_ for each one.","","@method each","@param {Array|Object} obj Array or object to iterate over.","@param {callback}","  @param {mixed} value Value of the current array item or property.","  @param {Number|String} key Index (if _obj_ is an array) or key (if _obj_ is an","      object).","@static","**/","function each(obj, callback) {","    if (Array.isArray(obj)) {","        obj.forEach(callback);","    } else {","        Object.keys(obj).forEach(function (key) {","            callback(obj[key], key);","        });","    }","}","exports.each = each;","","/**","Returns a new object containing a deep merge of the enumerable properties of all","passed objects. Properties in later arguments take precedence over properties","with the same name in earlier arguments. Object values are deep-cloned. Array and Date","values are _not_ deep-cloned.","","@method merge","@param {object} obj* One or more objects to merge.","@return {object} New object with merged values from all other objects.","@static","**/","function merge() {","    var args   = Array.prototype.slice.call(arguments),","        target = {};","","    args.unshift(target);","    mix.apply(this, args);","","    return target;","}","exports.merge = merge;","","/**","Like `merge()`, but augments the first passed object with a deep merge of the","enumerable properties of all other passed objects, rather than returning a","brand new object.","","@method mix","@param {object} target Object to receive mixed-in properties.","@param {object} obj* One or more objects to mix into _target_.","@return {object} Reference to the same _target_ object that was passed in.","@static","**/","function mix() {","    var args   = Array.prototype.slice.call(arguments),","        target = args.shift(),","        i, key, keys, len, source, value;","","    while ((source = args.shift())) {","        keys = Object.keys(source);","","        for (i = 0, len = keys.length; i < len; ++i) {","            key   = keys[i];","            value = source[key];","","            if(value == null){","                // if value is null or undefined keep the value intact.","                target[key] = value;","            }else if (typeof value === 'object' && !Array.isArray(value) && !(value instanceof Date)) {","                typeof target[key] === 'object' || (target[key] = {});","                mix(target[key], value);","            } else {","                target[key] = value;","            }","        }","    }","","    return target;","}","exports.mix = mix;","","/**","Returns an array containing the values of all enumerable properties of _obj_. If","_obj_ is already an array, a copy of it will be returned.","","@method values","@param {Array|Object} obj","@return {Array} values","@static","**/","function values(obj) {","    var i, items, keys, len;","","    if (Array.isArray(obj)) {","        items = obj.concat();","    } else {","        keys  = Object.keys(obj);","        items = [];","","        for (i = 0, len = keys.length; i < len; ++i) {","            items.push(obj[keys[i]]);","        }","    }","","    return items;","}","exports.values = values;",""],"l":{"20":1,"21":0,"22":0,"24":0,"25":0,"29":1,"42":1,"43":0,"46":0,"47":0,"49":0,"51":1,"64":1,"65":0,"69":0,"70":0,"72":0,"73":0,"74":0,"76":0,"78":0,"79":0,"80":0,"81":0,"83":0,"88":0,"90":1,"101":1,"102":0,"104":0,"105":0,"107":0,"108":0,"110":0,"111":0,"115":0,"117":1}},"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-elastical/node_modules/elastical/lib/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":1,"158":0,"159":1,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":1,"290":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"fnMap":{"1":{"name":"Index","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}}},"2":{"name":"(anonymous_2)","line":126,"loc":{"start":{"line":126,"column":13},"end":{"line":126,"column":62}}},"3":{"name":"(anonymous_3)","line":144,"loc":{"start":{"line":144,"column":23},"end":{"line":144,"column":37}}},"4":{"name":"(anonymous_4)","line":177,"loc":{"start":{"line":177,"column":23},"end":{"line":177,"column":46}}},"5":{"name":"(anonymous_5)","line":211,"loc":{"start":{"line":211,"column":15},"end":{"line":211,"column":58}}},"6":{"name":"(anonymous_6)","line":220,"loc":{"start":{"line":220,"column":19},"end":{"line":220,"column":40}}},"7":{"name":"(anonymous_7)","line":243,"loc":{"start":{"line":243,"column":15},"end":{"line":243,"column":50}}},"8":{"name":"(anonymous_8)","line":271,"loc":{"start":{"line":271,"column":15},"end":{"line":271,"column":50}}},"9":{"name":"(anonymous_9)","line":276,"loc":{"start":{"line":276,"column":59},"end":{"line":276,"column":74}}},"10":{"name":"(anonymous_10)","line":297,"loc":{"start":{"line":297,"column":14},"end":{"line":297,"column":62}}},"11":{"name":"(anonymous_11)","line":348,"loc":{"start":{"line":348,"column":19},"end":{"line":348,"column":60}}},"12":{"name":"(anonymous_12)","line":386,"loc":{"start":{"line":386,"column":20},"end":{"line":386,"column":55}}},"13":{"name":"(anonymous_13)","line":417,"loc":{"start":{"line":417,"column":23},"end":{"line":417,"column":68}}},"14":{"name":"(anonymous_14)","line":459,"loc":{"start":{"line":459,"column":28},"end":{"line":459,"column":65}}},"15":{"name":"(anonymous_15)","line":480,"loc":{"start":{"line":480,"column":19},"end":{"line":480,"column":54}}},"16":{"name":"(anonymous_16)","line":517,"loc":{"start":{"line":517,"column":19},"end":{"line":517,"column":69}}},"17":{"name":"(anonymous_17)","line":552,"loc":{"start":{"line":552,"column":16},"end":{"line":552,"column":51}}},"18":{"name":"(anonymous_18)","line":590,"loc":{"start":{"line":590,"column":16},"end":{"line":590,"column":59}}},"19":{"name":"(anonymous_19)","line":606,"loc":{"start":{"line":606,"column":22},"end":{"line":606,"column":45}}},"20":{"name":"(anonymous_20)","line":631,"loc":{"start":{"line":631,"column":17},"end":{"line":631,"column":59}}},"21":{"name":"(anonymous_21)","line":651,"loc":{"start":{"line":651,"column":17},"end":{"line":651,"column":51}}},"22":{"name":"(anonymous_22)","line":668,"loc":{"start":{"line":668,"column":20},"end":{"line":668,"column":54}}},"23":{"name":"(anonymous_23)","line":689,"loc":{"start":{"line":689,"column":16},"end":{"line":689,"column":63}}},"24":{"name":"(anonymous_24)","line":704,"loc":{"start":{"line":704,"column":11},"end":{"line":704,"column":38}}},"25":{"name":"(anonymous_25)","line":740,"loc":{"start":{"line":740,"column":12},"end":{"line":740,"column":51}}},"26":{"name":"(anonymous_26)","line":764,"loc":{"start":{"line":764,"column":78},"end":{"line":764,"column":98}}},"27":{"name":"(anonymous_27)","line":775,"loc":{"start":{"line":775,"column":30},"end":{"line":775,"column":53}}},"28":{"name":"(anonymous_28)","line":789,"loc":{"start":{"line":789,"column":58},"end":{"line":789,"column":78}}},"29":{"name":"(anonymous_29)","line":813,"loc":{"start":{"line":813,"column":17},"end":{"line":813,"column":37}}},"30":{"name":"(anonymous_30)","line":818,"loc":{"start":{"line":818,"column":19},"end":{"line":818,"column":35}}},"31":{"name":"(anonymous_31)","line":833,"loc":{"start":{"line":833,"column":12},"end":{"line":833,"column":32}}},"32":{"name":"(anonymous_32)","line":873,"loc":{"start":{"line":873,"column":9},"end":{"line":873,"column":42}}},"33":{"name":"(anonymous_33)","line":900,"loc":{"start":{"line":900,"column":26},"end":{"line":900,"column":49}}},"34":{"name":"(anonymous_34)","line":914,"loc":{"start":{"line":914,"column":51},"end":{"line":914,"column":71}}},"35":{"name":"(anonymous_35)","line":940,"loc":{"start":{"line":940,"column":16},"end":{"line":940,"column":42}}},"36":{"name":"(anonymous_36)","line":1002,"loc":{"start":{"line":1002,"column":11},"end":{"line":1002,"column":51}}},"37":{"name":"(anonymous_37)","line":1027,"loc":{"start":{"line":1027,"column":26},"end":{"line":1027,"column":49}}},"38":{"name":"(anonymous_38)","line":1052,"loc":{"start":{"line":1052,"column":14},"end":{"line":1052,"column":33}}},"39":{"name":"(anonymous_39)","line":1071,"loc":{"start":{"line":1071,"column":16},"end":{"line":1071,"column":51}}},"40":{"name":"(anonymous_40)","line":1093,"loc":{"start":{"line":1093,"column":13},"end":{"line":1093,"column":48}}},"41":{"name":"(anonymous_41)","line":1114,"loc":{"start":{"line":1114,"column":14},"end":{"line":1114,"column":48}}},"42":{"name":"(anonymous_42)","line":1130,"loc":{"start":{"line":1130,"column":14},"end":{"line":1130,"column":40}}},"43":{"name":"(anonymous_43)","line":1147,"loc":{"start":{"line":1147,"column":17},"end":{"line":1147,"column":43}}},"44":{"name":"(anonymous_44)","line":1162,"loc":{"start":{"line":1162,"column":13},"end":{"line":1162,"column":33}}},"45":{"name":"(anonymous_45)","line":1181,"loc":{"start":{"line":1181,"column":12},"end":{"line":1181,"column":41}}},"46":{"name":"(anonymous_46)","line":1203,"loc":{"start":{"line":1203,"column":11},"end":{"line":1203,"column":40}}},"47":{"name":"(anonymous_47)","line":1246,"loc":{"start":{"line":1246,"column":19},"end":{"line":1246,"column":56}}},"48":{"name":"(anonymous_48)","line":1271,"loc":{"start":{"line":1271,"column":19},"end":{"line":1271,"column":49}}},"49":{"name":"(anonymous_49)","line":1275,"loc":{"start":{"line":1275,"column":11},"end":{"line":1275,"column":31}}},"50":{"name":"(anonymous_50)","line":1305,"loc":{"start":{"line":1305,"column":15},"end":{"line":1305,"column":44}}},"51":{"name":"(anonymous_51)","line":1332,"loc":{"start":{"line":1332,"column":22},"end":{"line":1332,"column":52}}},"52":{"name":"noop","line":1351,"loc":{"start":{"line":1351,"column":0},"end":{"line":1351,"column":16}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":14,"column":32}},"2":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":25}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"5":{"start":{"line":126,"column":0},"end":{"line":193,"column":2}},"6":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"7":{"start":{"line":128,"column":8},"end":{"line":128,"column":27}},"8":{"start":{"line":129,"column":8},"end":{"line":129,"column":22}},"9":{"start":{"line":132,"column":4},"end":{"line":132,"column":34}},"10":{"start":{"line":133,"column":4},"end":{"line":133,"column":30}},"11":{"start":{"line":135,"column":4},"end":{"line":137,"column":25}},"12":{"start":{"line":139,"column":4},"end":{"line":142,"column":5}},"13":{"start":{"line":140,"column":8},"end":{"line":140,"column":53}},"14":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"15":{"start":{"line":144,"column":4},"end":{"line":175,"column":7}},"16":{"start":{"line":145,"column":8},"end":{"line":148,"column":17}},"17":{"start":{"line":150,"column":8},"end":{"line":150,"column":26}},"18":{"start":{"line":152,"column":8},"end":{"line":168,"column":9}},"19":{"start":{"line":153,"column":12},"end":{"line":167,"column":13}},"20":{"start":{"line":156,"column":16},"end":{"line":166,"column":17}},"21":{"start":{"line":157,"column":20},"end":{"line":157,"column":53}},"22":{"start":{"line":161,"column":20},"end":{"line":165,"column":21}},"23":{"start":{"line":162,"column":24},"end":{"line":162,"column":57}},"24":{"start":{"line":164,"column":24},"end":{"line":164,"column":63}},"25":{"start":{"line":170,"column":8},"end":{"line":170,"column":40}},"26":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"27":{"start":{"line":173,"column":12},"end":{"line":173,"column":56}},"28":{"start":{"line":177,"column":4},"end":{"line":183,"column":7}},"29":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"30":{"start":{"line":179,"column":12},"end":{"line":179,"column":38}},"31":{"start":{"line":182,"column":8},"end":{"line":182,"column":55}},"32":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"33":{"start":{"line":186,"column":8},"end":{"line":186,"column":37}},"34":{"start":{"line":189,"column":4},"end":{"line":192,"column":17}},"35":{"start":{"line":211,"column":0},"end":{"line":224,"column":2}},"36":{"start":{"line":212,"column":4},"end":{"line":215,"column":5}},"37":{"start":{"line":213,"column":8},"end":{"line":213,"column":27}},"38":{"start":{"line":214,"column":8},"end":{"line":214,"column":22}},"39":{"start":{"line":217,"column":4},"end":{"line":223,"column":7}},"40":{"start":{"line":221,"column":8},"end":{"line":221,"column":59}},"41":{"start":{"line":221,"column":19},"end":{"line":221,"column":57}},"42":{"start":{"line":222,"column":8},"end":{"line":222,"column":52}},"43":{"start":{"line":243,"column":0},"end":{"line":254,"column":2}},"44":{"start":{"line":244,"column":4},"end":{"line":247,"column":5}},"45":{"start":{"line":245,"column":8},"end":{"line":245,"column":25}},"46":{"start":{"line":246,"column":8},"end":{"line":246,"column":29}},"47":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"48":{"start":{"line":250,"column":8},"end":{"line":250,"column":32}},"49":{"start":{"line":253,"column":4},"end":{"line":253,"column":77}},"50":{"start":{"line":271,"column":0},"end":{"line":279,"column":2}},"51":{"start":{"line":272,"column":4},"end":{"line":274,"column":5}},"52":{"start":{"line":273,"column":8},"end":{"line":273,"column":32}},"53":{"start":{"line":276,"column":4},"end":{"line":278,"column":7}},"54":{"start":{"line":277,"column":8},"end":{"line":277,"column":29}},"55":{"start":{"line":297,"column":0},"end":{"line":331,"column":1}},"56":{"start":{"line":298,"column":4},"end":{"line":298,"column":12}},"57":{"start":{"line":299,"column":4},"end":{"line":302,"column":5}},"58":{"start":{"line":300,"column":8},"end":{"line":300,"column":25}},"59":{"start":{"line":301,"column":8},"end":{"line":301,"column":25}},"60":{"start":{"line":303,"column":4},"end":{"line":307,"column":5}},"61":{"start":{"line":304,"column":8},"end":{"line":304,"column":24}},"62":{"start":{"line":305,"column":8},"end":{"line":305,"column":25}},"63":{"start":{"line":306,"column":8},"end":{"line":306,"column":24}},"64":{"start":{"line":309,"column":4},"end":{"line":311,"column":5}},"65":{"start":{"line":310,"column":8},"end":{"line":310,"column":32}},"66":{"start":{"line":313,"column":4},"end":{"line":313,"column":25}},"67":{"start":{"line":314,"column":4},"end":{"line":314,"column":32}},"68":{"start":{"line":316,"column":4},"end":{"line":318,"column":5}},"69":{"start":{"line":317,"column":8},"end":{"line":317,"column":34}},"70":{"start":{"line":320,"column":4},"end":{"line":320,"column":21}},"71":{"start":{"line":321,"column":4},"end":{"line":328,"column":5}},"72":{"start":{"line":322,"column":8},"end":{"line":322,"column":37}},"73":{"start":{"line":327,"column":6},"end":{"line":327,"column":20}},"74":{"start":{"line":330,"column":4},"end":{"line":330,"column":35}},"75":{"start":{"line":348,"column":0},"end":{"line":370,"column":1}},"76":{"start":{"line":349,"column":4},"end":{"line":349,"column":12}},"77":{"start":{"line":351,"column":4},"end":{"line":354,"column":5}},"78":{"start":{"line":352,"column":8},"end":{"line":352,"column":24}},"79":{"start":{"line":353,"column":8},"end":{"line":353,"column":24}},"80":{"start":{"line":356,"column":4},"end":{"line":358,"column":5}},"81":{"start":{"line":357,"column":8},"end":{"line":357,"column":32}},"82":{"start":{"line":360,"column":4},"end":{"line":360,"column":25}},"83":{"start":{"line":361,"column":4},"end":{"line":361,"column":32}},"84":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"85":{"start":{"line":364,"column":8},"end":{"line":364,"column":34}},"86":{"start":{"line":367,"column":4},"end":{"line":367,"column":23}},"87":{"start":{"line":369,"column":4},"end":{"line":369,"column":35}},"88":{"start":{"line":386,"column":0},"end":{"line":399,"column":1}},"89":{"start":{"line":387,"column":4},"end":{"line":387,"column":12}},"90":{"start":{"line":389,"column":4},"end":{"line":391,"column":5}},"91":{"start":{"line":390,"column":8},"end":{"line":390,"column":32}},"92":{"start":{"line":393,"column":4},"end":{"line":393,"column":25}},"93":{"start":{"line":394,"column":4},"end":{"line":394,"column":32}},"94":{"start":{"line":396,"column":4},"end":{"line":396,"column":24}},"95":{"start":{"line":398,"column":4},"end":{"line":398,"column":35}},"96":{"start":{"line":417,"column":0},"end":{"line":443,"column":1}},"97":{"start":{"line":418,"column":4},"end":{"line":418,"column":25}},"98":{"start":{"line":420,"column":4},"end":{"line":424,"column":5}},"99":{"start":{"line":421,"column":8},"end":{"line":421,"column":28}},"100":{"start":{"line":422,"column":8},"end":{"line":422,"column":25}},"101":{"start":{"line":423,"column":8},"end":{"line":423,"column":21}},"102":{"start":{"line":426,"column":4},"end":{"line":426,"column":34}},"103":{"start":{"line":428,"column":4},"end":{"line":435,"column":5}},"104":{"start":{"line":429,"column":8},"end":{"line":431,"column":9}},"105":{"start":{"line":430,"column":12},"end":{"line":430,"column":36}},"106":{"start":{"line":433,"column":8},"end":{"line":433,"column":29}},"107":{"start":{"line":434,"column":8},"end":{"line":434,"column":36}},"108":{"start":{"line":437,"column":4},"end":{"line":437,"column":24}},"109":{"start":{"line":439,"column":4},"end":{"line":442,"column":17}},"110":{"start":{"line":459,"column":0},"end":{"line":464,"column":1}},"111":{"start":{"line":460,"column":4},"end":{"line":463,"column":17}},"112":{"start":{"line":480,"column":0},"end":{"line":495,"column":1}},"113":{"start":{"line":481,"column":4},"end":{"line":481,"column":17}},"114":{"start":{"line":483,"column":4},"end":{"line":490,"column":5}},"115":{"start":{"line":484,"column":8},"end":{"line":486,"column":9}},"116":{"start":{"line":485,"column":12},"end":{"line":485,"column":36}},"117":{"start":{"line":488,"column":8},"end":{"line":488,"column":29}},"118":{"start":{"line":489,"column":8},"end":{"line":489,"column":34}},"119":{"start":{"line":492,"column":4},"end":{"line":492,"column":23}},"120":{"start":{"line":494,"column":4},"end":{"line":494,"column":35}},"121":{"start":{"line":517,"column":0},"end":{"line":535,"column":1}},"122":{"start":{"line":518,"column":4},"end":{"line":523,"column":5}},"123":{"start":{"line":519,"column":8},"end":{"line":519,"column":27}},"124":{"start":{"line":520,"column":8},"end":{"line":520,"column":24}},"125":{"start":{"line":521,"column":8},"end":{"line":521,"column":25}},"126":{"start":{"line":522,"column":8},"end":{"line":522,"column":29}},"127":{"start":{"line":525,"column":4},"end":{"line":527,"column":5}},"128":{"start":{"line":526,"column":8},"end":{"line":526,"column":32}},"129":{"start":{"line":529,"column":4},"end":{"line":529,"column":30}},"130":{"start":{"line":531,"column":4},"end":{"line":534,"column":17}},"131":{"start":{"line":552,"column":0},"end":{"line":566,"column":2}},"132":{"start":{"line":553,"column":4},"end":{"line":556,"column":5}},"133":{"start":{"line":554,"column":8},"end":{"line":554,"column":25}},"134":{"start":{"line":555,"column":8},"end":{"line":555,"column":29}},"135":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"136":{"start":{"line":559,"column":8},"end":{"line":559,"column":32}},"137":{"start":{"line":562,"column":4},"end":{"line":562,"column":30}},"138":{"start":{"line":564,"column":4},"end":{"line":565,"column":18}},"139":{"start":{"line":590,"column":0},"end":{"line":615,"column":2}},"140":{"start":{"line":591,"column":4},"end":{"line":591,"column":34}},"141":{"start":{"line":592,"column":4},"end":{"line":595,"column":5}},"142":{"start":{"line":593,"column":8},"end":{"line":593,"column":27}},"143":{"start":{"line":594,"column":8},"end":{"line":594,"column":22}},"144":{"start":{"line":597,"column":4},"end":{"line":597,"column":34}},"145":{"start":{"line":598,"column":4},"end":{"line":598,"column":33}},"146":{"start":{"line":600,"column":4},"end":{"line":603,"column":5}},"147":{"start":{"line":601,"column":8},"end":{"line":601,"column":55}},"148":{"start":{"line":602,"column":8},"end":{"line":602,"column":28}},"149":{"start":{"line":605,"column":4},"end":{"line":605,"column":43}},"150":{"start":{"line":606,"column":4},"end":{"line":608,"column":7}},"151":{"start":{"line":607,"column":8},"end":{"line":607,"column":55}},"152":{"start":{"line":610,"column":4},"end":{"line":612,"column":5}},"153":{"start":{"line":611,"column":8},"end":{"line":611,"column":37}},"154":{"start":{"line":614,"column":4},"end":{"line":614,"column":54}},"155":{"start":{"line":631,"column":0},"end":{"line":636,"column":2}},"156":{"start":{"line":632,"column":4},"end":{"line":635,"column":17}},"157":{"start":{"line":651,"column":0},"end":{"line":653,"column":2}},"158":{"start":{"line":652,"column":4},"end":{"line":652,"column":79}},"159":{"start":{"line":668,"column":0},"end":{"line":670,"column":2}},"160":{"start":{"line":669,"column":4},"end":{"line":669,"column":71}},"161":{"start":{"line":689,"column":0},"end":{"line":700,"column":2}},"162":{"start":{"line":690,"column":4},"end":{"line":690,"column":17}},"163":{"start":{"line":691,"column":4},"end":{"line":692,"column":35}},"164":{"start":{"line":692,"column":8},"end":{"line":692,"column":35}},"165":{"start":{"line":693,"column":4},"end":{"line":694,"column":34}},"166":{"start":{"line":694,"column":8},"end":{"line":694,"column":34}},"167":{"start":{"line":695,"column":4},"end":{"line":695,"column":20}},"168":{"start":{"line":696,"column":4},"end":{"line":699,"column":17}},"169":{"start":{"line":702,"column":0},"end":{"line":1338,"column":2}},"170":{"start":{"line":741,"column":8},"end":{"line":742,"column":39}},"171":{"start":{"line":744,"column":8},"end":{"line":747,"column":9}},"172":{"start":{"line":745,"column":12},"end":{"line":745,"column":31}},"173":{"start":{"line":746,"column":12},"end":{"line":746,"column":26}},"174":{"start":{"line":749,"column":8},"end":{"line":749,"column":38}},"175":{"start":{"line":750,"column":8},"end":{"line":750,"column":37}},"176":{"start":{"line":752,"column":8},"end":{"line":755,"column":9}},"177":{"start":{"line":753,"column":12},"end":{"line":753,"column":49}},"178":{"start":{"line":754,"column":12},"end":{"line":754,"column":40}},"179":{"start":{"line":757,"column":8},"end":{"line":800,"column":9}},"180":{"start":{"line":758,"column":12},"end":{"line":758,"column":42}},"181":{"start":{"line":759,"column":12},"end":{"line":761,"column":13}},"182":{"start":{"line":760,"column":16},"end":{"line":760,"column":81}},"183":{"start":{"line":762,"column":12},"end":{"line":762,"column":29}},"184":{"start":{"line":764,"column":12},"end":{"line":773,"column":15}},"185":{"start":{"line":765,"column":16},"end":{"line":771,"column":17}},"186":{"start":{"line":766,"column":20},"end":{"line":770,"column":21}},"187":{"start":{"line":767,"column":24},"end":{"line":767,"column":62}},"188":{"start":{"line":769,"column":24},"end":{"line":769,"column":61}},"189":{"start":{"line":772,"column":16},"end":{"line":772,"column":36}},"190":{"start":{"line":775,"column":12},"end":{"line":781,"column":15}},"191":{"start":{"line":776,"column":16},"end":{"line":778,"column":17}},"192":{"start":{"line":777,"column":20},"end":{"line":777,"column":46}},"193":{"start":{"line":780,"column":16},"end":{"line":780,"column":63}},"194":{"start":{"line":783,"column":12},"end":{"line":783,"column":82}},"195":{"start":{"line":785,"column":12},"end":{"line":787,"column":13}},"196":{"start":{"line":786,"column":16},"end":{"line":786,"column":45}},"197":{"start":{"line":789,"column":12},"end":{"line":799,"column":15}},"198":{"start":{"line":790,"column":16},"end":{"line":796,"column":17}},"199":{"start":{"line":791,"column":20},"end":{"line":795,"column":21}},"200":{"start":{"line":792,"column":24},"end":{"line":792,"column":62}},"201":{"start":{"line":794,"column":24},"end":{"line":794,"column":61}},"202":{"start":{"line":798,"column":16},"end":{"line":798,"column":36}},"203":{"start":{"line":814,"column":8},"end":{"line":814,"column":55}},"204":{"start":{"line":834,"column":8},"end":{"line":834,"column":55}},"205":{"start":{"line":874,"column":8},"end":{"line":876,"column":39}},"206":{"start":{"line":878,"column":8},"end":{"line":881,"column":9}},"207":{"start":{"line":879,"column":12},"end":{"line":879,"column":31}},"208":{"start":{"line":880,"column":12},"end":{"line":880,"column":26}},"209":{"start":{"line":883,"column":8},"end":{"line":883,"column":37}},"210":{"start":{"line":885,"column":8},"end":{"line":888,"column":9}},"211":{"start":{"line":886,"column":12},"end":{"line":887,"column":56}},"212":{"start":{"line":890,"column":8},"end":{"line":893,"column":9}},"213":{"start":{"line":891,"column":12},"end":{"line":891,"column":49}},"214":{"start":{"line":892,"column":12},"end":{"line":892,"column":40}},"215":{"start":{"line":895,"column":8},"end":{"line":898,"column":9}},"216":{"start":{"line":896,"column":12},"end":{"line":896,"column":31}},"217":{"start":{"line":897,"column":12},"end":{"line":897,"column":31}},"218":{"start":{"line":900,"column":8},"end":{"line":906,"column":11}},"219":{"start":{"line":901,"column":12},"end":{"line":903,"column":13}},"220":{"start":{"line":902,"column":16},"end":{"line":902,"column":42}},"221":{"start":{"line":905,"column":12},"end":{"line":905,"column":59}},"222":{"start":{"line":908,"column":8},"end":{"line":908,"column":78}},"223":{"start":{"line":910,"column":8},"end":{"line":912,"column":9}},"224":{"start":{"line":911,"column":12},"end":{"line":911,"column":41}},"225":{"start":{"line":914,"column":8},"end":{"line":925,"column":11}},"226":{"start":{"line":915,"column":12},"end":{"line":922,"column":13}},"227":{"start":{"line":916,"column":16},"end":{"line":921,"column":17}},"228":{"start":{"line":918,"column":20},"end":{"line":918,"column":64}},"229":{"start":{"line":920,"column":20},"end":{"line":920,"column":63}},"230":{"start":{"line":924,"column":12},"end":{"line":924,"column":59}},"231":{"start":{"line":941,"column":8},"end":{"line":942,"column":52}},"232":{"start":{"line":1003,"column":8},"end":{"line":1004,"column":28}},"233":{"start":{"line":1006,"column":8},"end":{"line":1009,"column":9}},"234":{"start":{"line":1007,"column":12},"end":{"line":1007,"column":31}},"235":{"start":{"line":1008,"column":12},"end":{"line":1008,"column":26}},"236":{"start":{"line":1011,"column":8},"end":{"line":1011,"column":43}},"237":{"start":{"line":1013,"column":8},"end":{"line":1016,"column":9}},"238":{"start":{"line":1014,"column":12},"end":{"line":1014,"column":38}},"239":{"start":{"line":1015,"column":12},"end":{"line":1015,"column":33}},"240":{"start":{"line":1018,"column":8},"end":{"line":1021,"column":9}},"241":{"start":{"line":1019,"column":12},"end":{"line":1019,"column":27}},"242":{"start":{"line":1020,"column":12},"end":{"line":1020,"column":29}},"243":{"start":{"line":1023,"column":8},"end":{"line":1025,"column":9}},"244":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":45}},"245":{"start":{"line":1027,"column":8},"end":{"line":1033,"column":11}},"246":{"start":{"line":1028,"column":12},"end":{"line":1030,"column":13}},"247":{"start":{"line":1029,"column":16},"end":{"line":1029,"column":42}},"248":{"start":{"line":1032,"column":12},"end":{"line":1032,"column":59}},"249":{"start":{"line":1035,"column":8},"end":{"line":1035,"column":59}},"250":{"start":{"line":1037,"column":8},"end":{"line":1039,"column":9}},"251":{"start":{"line":1038,"column":12},"end":{"line":1038,"column":36}},"252":{"start":{"line":1041,"column":8},"end":{"line":1043,"column":9}},"253":{"start":{"line":1042,"column":12},"end":{"line":1042,"column":41}},"254":{"start":{"line":1045,"column":8},"end":{"line":1048,"column":21}},"255":{"start":{"line":1072,"column":8},"end":{"line":1072,"column":74}},"256":{"start":{"line":1094,"column":8},"end":{"line":1097,"column":9}},"257":{"start":{"line":1095,"column":12},"end":{"line":1095,"column":31}},"258":{"start":{"line":1096,"column":12},"end":{"line":1096,"column":26}},"259":{"start":{"line":1098,"column":8},"end":{"line":1098,"column":34}},"260":{"start":{"line":1099,"column":8},"end":{"line":1099,"column":54}},"261":{"start":{"line":1115,"column":8},"end":{"line":1115,"column":62}},"262":{"start":{"line":1131,"column":8},"end":{"line":1131,"column":54}},"263":{"start":{"line":1148,"column":8},"end":{"line":1148,"column":57}},"264":{"start":{"line":1163,"column":8},"end":{"line":1163,"column":56}},"265":{"start":{"line":1182,"column":8},"end":{"line":1185,"column":9}},"266":{"start":{"line":1183,"column":12},"end":{"line":1183,"column":31}},"267":{"start":{"line":1184,"column":12},"end":{"line":1184,"column":26}},"268":{"start":{"line":1187,"column":8},"end":{"line":1187,"column":78}},"269":{"start":{"line":1204,"column":6},"end":{"line":1207,"column":7}},"270":{"start":{"line":1205,"column":8},"end":{"line":1205,"column":27}},"271":{"start":{"line":1206,"column":8},"end":{"line":1206,"column":21}},"272":{"start":{"line":1208,"column":6},"end":{"line":1208,"column":75}},"273":{"start":{"line":1247,"column":8},"end":{"line":1247,"column":34}},"274":{"start":{"line":1248,"column":8},"end":{"line":1248,"column":25}},"275":{"start":{"line":1249,"column":8},"end":{"line":1249,"column":38}},"276":{"start":{"line":1250,"column":8},"end":{"line":1253,"column":21}},"277":{"start":{"line":1272,"column":8},"end":{"line":1272,"column":67}},"278":{"start":{"line":1273,"column":8},"end":{"line":1278,"column":11}},"279":{"start":{"line":1276,"column":12},"end":{"line":1276,"column":68}},"280":{"start":{"line":1276,"column":23},"end":{"line":1276,"column":66}},"281":{"start":{"line":1277,"column":12},"end":{"line":1277,"column":52}},"282":{"start":{"line":1309,"column":8},"end":{"line":1311,"column":9}},"283":{"start":{"line":1310,"column":12},"end":{"line":1310,"column":31}},"284":{"start":{"line":1312,"column":8},"end":{"line":1312,"column":56}},"285":{"start":{"line":1313,"column":8},"end":{"line":1316,"column":21}},"286":{"start":{"line":1333,"column":8},"end":{"line":1333,"column":69}},"287":{"start":{"line":1334,"column":8},"end":{"line":1336,"column":21}},"288":{"start":{"line":1346,"column":0},"end":{"line":1346,"column":44}},"289":{"start":{"line":1348,"column":0},"end":{"line":1348,"column":23}},"290":{"start":{"line":1351,"column":0},"end":{"line":1351,"column":18}}},"branchMap":{"1":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"2":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":12}},{"start":{"line":132,"column":17},"end":{"line":132,"column":32}}]},"3":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":11}},{"start":{"line":133,"column":16},"end":{"line":133,"column":28}}]},"4":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"5":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":153,"column":12}},{"start":{"line":153,"column":12},"end":{"line":153,"column":12}}]},"6":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":31}},{"start":{"line":153,"column":35},"end":{"line":153,"column":61}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":16}},{"start":{"line":156,"column":16},"end":{"line":156,"column":16}}]},"8":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":20},"end":{"line":161,"column":20}},{"start":{"line":161,"column":20},"end":{"line":161,"column":20}}]},"9":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":8}},{"start":{"line":172,"column":8},"end":{"line":172,"column":8}}]},"10":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":31}},{"start":{"line":172,"column":35},"end":{"line":172,"column":53}}]},"11":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":37},"end":{"line":173,"column":47}},{"start":{"line":173,"column":51},"end":{"line":173,"column":53}}]},"12":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"13":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":26}},{"start":{"line":178,"column":30},"end":{"line":178,"column":45}}]},"14":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":28},"end":{"line":179,"column":31}},{"start":{"line":179,"column":34},"end":{"line":179,"column":37}}]},"15":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"16":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"17":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":7},"end":{"line":220,"column":15}},{"start":{"line":220,"column":19},"end":{"line":223,"column":5}}]},"18":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":221,"column":8}},{"start":{"line":221,"column":8},"end":{"line":221,"column":8}}]},"19":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"20":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"21":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":33},"end":{"line":253,"column":38}},{"start":{"line":253,"column":42},"end":{"line":253,"column":44}}]},"22":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":272,"column":4}},{"start":{"line":272,"column":4},"end":{"line":272,"column":4}}]},"23":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"24":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"25":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"26":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"27":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"28":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"29":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":4},"end":{"line":356,"column":4}},{"start":{"line":356,"column":4},"end":{"line":356,"column":4}}]},"30":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"31":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":4},"end":{"line":389,"column":4}},{"start":{"line":389,"column":4},"end":{"line":389,"column":4}}]},"32":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"33":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":8},"end":{"line":420,"column":33}},{"start":{"line":420,"column":37},"end":{"line":420,"column":58}}]},"34":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":12}},{"start":{"line":426,"column":17},"end":{"line":426,"column":32}}]},"35":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":4},"end":{"line":428,"column":4}},{"start":{"line":428,"column":4},"end":{"line":428,"column":4}}]},"36":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":8},"end":{"line":429,"column":8}},{"start":{"line":429,"column":8},"end":{"line":429,"column":8}}]},"37":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":4},"end":{"line":483,"column":4}},{"start":{"line":483,"column":4},"end":{"line":483,"column":4}}]},"38":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":8},"end":{"line":484,"column":8}},{"start":{"line":484,"column":8},"end":{"line":484,"column":8}}]},"39":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":4},"end":{"line":518,"column":4}},{"start":{"line":518,"column":4},"end":{"line":518,"column":4}}]},"40":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":4},"end":{"line":525,"column":4}},{"start":{"line":525,"column":4},"end":{"line":525,"column":4}}]},"41":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":4},"end":{"line":529,"column":9}},{"start":{"line":529,"column":14},"end":{"line":529,"column":28}}]},"42":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":553,"column":4}},{"start":{"line":553,"column":4},"end":{"line":553,"column":4}}]},"43":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":4},"end":{"line":558,"column":4}},{"start":{"line":558,"column":4},"end":{"line":558,"column":4}}]},"44":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":9}},{"start":{"line":562,"column":14},"end":{"line":562,"column":28}}]},"45":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":4},"end":{"line":592,"column":4}},{"start":{"line":592,"column":4},"end":{"line":592,"column":4}}]},"46":{"line":597,"type":"binary-expr","locations":[{"start":{"line":597,"column":4},"end":{"line":597,"column":12}},{"start":{"line":597,"column":17},"end":{"line":597,"column":32}}]},"47":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":4},"end":{"line":600,"column":4}},{"start":{"line":600,"column":4},"end":{"line":600,"column":4}}]},"48":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":4},"end":{"line":610,"column":4}},{"start":{"line":610,"column":4},"end":{"line":610,"column":4}}]},"49":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"50":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":4},"end":{"line":693,"column":4}},{"start":{"line":693,"column":4},"end":{"line":693,"column":4}}]},"51":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":8},"end":{"line":744,"column":8}},{"start":{"line":744,"column":8},"end":{"line":744,"column":8}}]},"52":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":8},"end":{"line":749,"column":16}},{"start":{"line":749,"column":21},"end":{"line":749,"column":36}}]},"53":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":8},"end":{"line":752,"column":8}},{"start":{"line":752,"column":8},"end":{"line":752,"column":8}}]},"54":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":8},"end":{"line":757,"column":8}},{"start":{"line":757,"column":8},"end":{"line":757,"column":8}}]},"55":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":12},"end":{"line":759,"column":12}},{"start":{"line":759,"column":12},"end":{"line":759,"column":12}}]},"56":{"line":760,"type":"cond-expr","locations":[{"start":{"line":760,"column":58},"end":{"line":760,"column":72}},{"start":{"line":760,"column":75},"end":{"line":760,"column":79}}]},"57":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":16},"end":{"line":765,"column":16}},{"start":{"line":765,"column":16},"end":{"line":765,"column":16}}]},"58":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":20},"end":{"line":766,"column":20}},{"start":{"line":766,"column":20},"end":{"line":766,"column":20}}]},"59":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":24},"end":{"line":766,"column":37}},{"start":{"line":766,"column":41},"end":{"line":766,"column":44}},{"start":{"line":766,"column":48},"end":{"line":766,"column":67}}]},"60":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":16},"end":{"line":776,"column":16}},{"start":{"line":776,"column":16},"end":{"line":776,"column":16}}]},"61":{"line":776,"type":"binary-expr","locations":[{"start":{"line":776,"column":20},"end":{"line":776,"column":34}},{"start":{"line":776,"column":38},"end":{"line":776,"column":53}}]},"62":{"line":777,"type":"cond-expr","locations":[{"start":{"line":777,"column":36},"end":{"line":777,"column":39}},{"start":{"line":777,"column":42},"end":{"line":777,"column":45}}]},"63":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":12},"end":{"line":785,"column":12}},{"start":{"line":785,"column":12},"end":{"line":785,"column":12}}]},"64":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":16},"end":{"line":790,"column":16}},{"start":{"line":790,"column":16},"end":{"line":790,"column":16}}]},"65":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":20},"end":{"line":791,"column":20}},{"start":{"line":791,"column":20},"end":{"line":791,"column":20}}]},"66":{"line":791,"type":"binary-expr","locations":[{"start":{"line":791,"column":24},"end":{"line":791,"column":37}},{"start":{"line":791,"column":41},"end":{"line":791,"column":44}},{"start":{"line":791,"column":48},"end":{"line":791,"column":67}}]},"67":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":8},"end":{"line":878,"column":8}},{"start":{"line":878,"column":8},"end":{"line":878,"column":8}}]},"68":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":8},"end":{"line":885,"column":8}},{"start":{"line":885,"column":8},"end":{"line":885,"column":8}}]},"69":{"line":886,"type":"cond-expr","locations":[{"start":{"line":887,"column":16},"end":{"line":887,"column":39}},{"start":{"line":887,"column":42},"end":{"line":887,"column":55}}]},"70":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":8}},{"start":{"line":890,"column":8},"end":{"line":890,"column":8}}]},"71":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":8},"end":{"line":895,"column":8}},{"start":{"line":895,"column":8},"end":{"line":895,"column":8}}]},"72":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":12},"end":{"line":901,"column":12}},{"start":{"line":901,"column":12},"end":{"line":901,"column":12}}]},"73":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":16},"end":{"line":901,"column":30}},{"start":{"line":901,"column":34},"end":{"line":901,"column":49}}]},"74":{"line":902,"type":"cond-expr","locations":[{"start":{"line":902,"column":32},"end":{"line":902,"column":35}},{"start":{"line":902,"column":38},"end":{"line":902,"column":41}}]},"75":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":8},"end":{"line":910,"column":8}},{"start":{"line":910,"column":8},"end":{"line":910,"column":8}}]},"76":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":12},"end":{"line":915,"column":12}},{"start":{"line":915,"column":12},"end":{"line":915,"column":12}}]},"77":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":16},"end":{"line":916,"column":16}},{"start":{"line":916,"column":16},"end":{"line":916,"column":16}}]},"78":{"line":916,"type":"binary-expr","locations":[{"start":{"line":916,"column":20},"end":{"line":916,"column":33}},{"start":{"line":916,"column":37},"end":{"line":916,"column":40}},{"start":{"line":916,"column":45},"end":{"line":916,"column":65}},{"start":{"line":917,"column":27},"end":{"line":917,"column":67}}]},"79":{"line":924,"type":"binary-expr","locations":[{"start":{"line":924,"column":27},"end":{"line":924,"column":37}},{"start":{"line":924,"column":41},"end":{"line":924,"column":52}}]},"80":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":8},"end":{"line":1006,"column":8}},{"start":{"line":1006,"column":8},"end":{"line":1006,"column":8}}]},"81":{"line":1011,"type":"binary-expr","locations":[{"start":{"line":1011,"column":28},"end":{"line":1011,"column":35}},{"start":{"line":1011,"column":39},"end":{"line":1011,"column":41}}]},"82":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":8},"end":{"line":1013,"column":8}},{"start":{"line":1013,"column":8},"end":{"line":1013,"column":8}}]},"83":{"line":1018,"type":"if","locations":[{"start":{"line":1018,"column":8},"end":{"line":1018,"column":8}},{"start":{"line":1018,"column":8},"end":{"line":1018,"column":8}}]},"84":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":8},"end":{"line":1023,"column":8}},{"start":{"line":1023,"column":8},"end":{"line":1023,"column":8}}]},"85":{"line":1023,"type":"binary-expr","locations":[{"start":{"line":1023,"column":12},"end":{"line":1023,"column":26}},{"start":{"line":1023,"column":30},"end":{"line":1023,"column":50}}]},"86":{"line":1028,"type":"if","locations":[{"start":{"line":1028,"column":12},"end":{"line":1028,"column":12}},{"start":{"line":1028,"column":12},"end":{"line":1028,"column":12}}]},"87":{"line":1028,"type":"binary-expr","locations":[{"start":{"line":1028,"column":16},"end":{"line":1028,"column":30}},{"start":{"line":1028,"column":34},"end":{"line":1028,"column":49}}]},"88":{"line":1029,"type":"cond-expr","locations":[{"start":{"line":1029,"column":32},"end":{"line":1029,"column":35}},{"start":{"line":1029,"column":38},"end":{"line":1029,"column":41}}]},"89":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":8},"end":{"line":1037,"column":8}},{"start":{"line":1037,"column":8},"end":{"line":1037,"column":8}}]},"90":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":8},"end":{"line":1041,"column":8}},{"start":{"line":1041,"column":8},"end":{"line":1041,"column":8}}]},"91":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":25},"end":{"line":1046,"column":30}},{"start":{"line":1046,"column":33},"end":{"line":1046,"column":39}}]},"92":{"line":1094,"type":"if","locations":[{"start":{"line":1094,"column":8},"end":{"line":1094,"column":8}},{"start":{"line":1094,"column":8},"end":{"line":1094,"column":8}}]},"93":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":8},"end":{"line":1182,"column":8}},{"start":{"line":1182,"column":8},"end":{"line":1182,"column":8}}]},"94":{"line":1204,"type":"if","locations":[{"start":{"line":1204,"column":6},"end":{"line":1204,"column":6}},{"start":{"line":1204,"column":6},"end":{"line":1204,"column":6}}]},"95":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":12},"end":{"line":1276,"column":12}},{"start":{"line":1276,"column":12},"end":{"line":1276,"column":12}}]},"96":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":8},"end":{"line":1309,"column":8}},{"start":{"line":1309,"column":8},"end":{"line":1309,"column":8}}]}},"code":["/**","Provides methods for creating, deleting, and interacting with ElasticSearch","indices.","","@module elastical","@submodule index","@class Index","@param {Client} client Client instance.","@param {String} name Index name.","@constructor","**/","","var util   = require('./util'),","    encode = encodeURIComponent;","","function Index(client, name) {","    this.client = client;","    this.name   = name;","}","","/**","Performs multiple document create/index/delete operations in a single request.","","The _operations_ parameter should be an array of objects. Each object must","adhere to one of the following formats.","","#### Operation Objects","","**Create a Document**","","    {","        create: {","            index: 'index-name',","            type : 'type-name',","            id   : 'document-id',","            data  : { ... document data ... },","","            // Optional properties.","            parent      : '...',","            percolate   : '...',","            routing     : '...',","            version     : '...',","            version_type: 'internal' | 'external'","        }","    }","","**Index a Document**","","    {","        index: {","            index: 'index-name',","            type : 'type-name',","            id   : 'document-id',","            data  : { ... document data ... },","","            // Optional properties.","            parent      : '...',","            percolate   : '...',","            routing     : '...',","            version     : '...',","            version_type: 'internal' | 'external'","        }","    }","","**Delete a Document**","","    {","        delete: {","            index: 'index-name',","            type : 'type-name',","            id   : 'document-id',","","            // Optional properties.","            parent : '...',","            routing: '...',","            version: '...'","        }","    }","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/bulk.html)","","@example","","    index.bulk(client, [","        {create: {index: 'blog', type: 'post', id: '1', data: {","            title: 'Hello',","            body : 'Welcome to my stupid blog.'","        }}},","","        {index: {index: 'blog', type: 'post', id: '2', data: {","            title: 'Breaking news',","            body : 'Today I ate a sandwich.'","        }}},","","        {index: {index: 'blog', type: 'post', id: '3', percolate: '*', data: {","            title: 'Percolate this',","            body : 'Run against all percolators.'","        }}},","","        {delete: {index: 'blog', type: 'post', id: '42'}}","    ], function (err, res) {","        // ...","    });","","@method bulk","@param {Client} client Client instance.","@param {Object[]} operations Array of operations to perform. See above for a","    description of the expected object format.","@param {Object} [options] Options.","    @param {String} [options.consistency=\"quorum\"] Write consistency to use","        for these operations. Permitted values are \"one\", \"quorum\", and \"all\".","        See the ElasticSearch docs for details.","    @param {Boolean} [options.refresh=false] If `true`, the relevant shard","        will be refreshed after the delete operation. This may cause heavy","        server load, so use with caution.","    @param {String} [options.index=\"indexname\"] If specified the url endpoint","        for the bulk operations will include this index.  This is useful for","        scenarios where the root -bulk endpoint is prevented on a shared","        cluster.","@param {Function} [callback] Callback function.","    @param {Error|null} callback.err Error, or `null` on success.","    @param {Object} callback.res ElasticSearch response data.","@static","@see Client.bulk","**/","Index.bulk = function (client, operations, options, callback) {","    if (typeof options === 'function') {","        callback = options;","        options  = {};","    }","","    callback || (callback = noop);","    options || (options = {});","","    var body  = [],","        query = [],","        url   = '/_bulk';","","    if (options.index) {","        url = '/' + encode(options.index) + '/_bulk';","        delete options.index;","    }","","    operations.forEach(function (op) {","        var action = Object.keys(op)[0],","            input  = op[action],","            line   = {},","            name;","","        line[action] = {};","","        for (name in input) {","            if (name !== 'data' && input.hasOwnProperty(name)) {","                // Allow '_index', '_type', etc. in addition to 'index', 'type',","                // etc.","                if (name.charAt(0) === '_') {","                    line[action][name] = input[name];","                } else {","                    // ElasticSearch currently only supports 'percolate', not","                    // '_percolate'.","                    if (name === 'percolate') {","                        line[action][name] = input[name];","                    } else {","                        line[action]['_' + name] = input[name];","                    }","                }","            }","        }","","        body.push(JSON.stringify(line));","","        if (action === 'create' || action === 'index') {","            body.push(JSON.stringify(input.data || {}));","        }","    });","","    util.each(options, function (value, name) {","        if (value === true || value === false) {","            value = value ? '1' : '0';","        }","","        query.push(encode(name) + '=' + encode(value));","    });","","    if (query.length) {","        url += '?' + query.join('&');","    }","","    client._request(url, {","        method: 'PUT',","        body  : body.join('\\n') + '\\n'","    }, callback);","};","","/**","Creates a new index.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index.html)","","@method create","@param {Client} client Client instance.","@param {String} name Name of the new index.","@param {Object} [options] Index options (see ElasticSearch docs for details).","@param {Function} [callback] Callback function.","    @param {Error|null} callback.err Error, or `null` on success.","    @param {Index} callback.index Index instance for the newly created index.","    @param {Object} callback.data ElasticSearch response data.","@static","@see Client.createIndex","**/","Index.create = function (client, name, options, callback) {","    if (typeof options === 'function') {","        callback = options;","        options  = {};","    }","","    client._request('/' + encode(name), {","        method: 'PUT',","        json  : options","    }, callback && function (err, data) {","        if (err) { return callback(err, data), undefined; }","        callback(null, client.getIndex(name), data);","    });","};","","/**","Deletes the specified index or indices. If no indices are specified, **all**","indices on the server will be deleted.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index.html)","","@method delete","@param {Client} client Client instance.","@param {String|String[]} [names] Name of the index to delete, or an array of","    names to delete multiple indices. If omitted, **all** indices will be","    deleted.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.data ElasticSearch response data.","@static","@see Client.deleteIndex","**/","Index.delete = function (client, names, callback) {","    if (typeof names === 'function') {","        callback = names;","        names    = undefined;","    }","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    client._request('/' + encode(names || ''), {method: 'DELETE'}, callback);","};","","/**","Checks whether the specified index or indices exist.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists.html)","","@method exists","@param {Client} client Client instance.","@param {String|String[]} names Index name or array of names to check.","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Boolean} callback.exists `true` if all specified indices exist,","      `false` otherwise.","@static","@see Client.indexExists","**/","Index.exists = function (client, names, callback) {","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    client._request('/' + encode(names), {method: 'HEAD'}, function (err) {","        callback(null, !err);","    });","};","","/**","Retrieve the mappings for one or more indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping.html)","","@method count","@param {Client} client Client instance.","@param {String|String[]} names Index name or array of names.","@param {String} [type] Document type. If omitted, count for all types are returned.","@param {String} query query. If omitted, count for a match_all is returned.","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.count","**/","Index.count = function (client, names, type, query, callback) {","    var url;","    if (typeof query === 'function') {","        callback = query;","        query     = null;","    }","    if (typeof type === 'function') {","        callback = type;","        query     = null;","        type     = null;","    }","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    names = names.trim();","    url   = '/' + encode(names);","","    if (type) {","        url += '/' + encode(type);","    }","","    url += '/_count';","    if (query) {","        url += '?q=' + encode(query);","    } else {","      // count in elastic Search require a query and returns an error if it does not find it:","      // {\"error\":\"No query to execute, not in body, and not bounded to 'q' parameter\"}%","      // perhaps there is better than that to do?","      url += '?q=*';","    }","","    client._request(url, callback);","}","","/**","Retrieve the mappings for one or more indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping.html)","","@method getMapping","@param {Client} client Client instance.","@param {String|String[]} names Index name or array of names.","@param {String} [type] Document type. If omitted, mappings for all types are returned.","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.getMapping","**/","Index.getMapping = function (client, names, type, callback) {","    var url;","","    if (typeof type === 'function') {","        callback = type;","        type     = null;","    }","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    names = names.trim();","    url   = '/' + encode(names);","","    if (type) {","        url += '/' + encode(type);","    }","","    url += '/_mapping';","","    client._request(url, callback);","}","","/**","Retrieve the settings for one or more indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings.html)","","@method getSettings","@param {Client} client Client instance.","@param {String|String[]} names Index name or array of names.","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.getSettings","**/","Index.getSettings = function (client, names, callback) {","    var url;","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    names = names.trim();","    url   = '/' + encode(names);","","    url += '/_settings';","","    client._request(url, callback);","}","","/**","Update the settings for one or more indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/)","","@method updateSettings","@param {Client} client Client instance.","@param {String|String[]} index Index name or array of names. If not specified,","    it will be applied to all indices","@param {Object} settings Settings. See ElasticSearch docs for details.","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.updateSettings","**/","Index.updateSettings = function (client, index, settings, callback) {","    var params, url = '';","","    if (typeof index === 'object' && !Array.isArray(index)) {","        callback = settings;","        settings = index;","        index = null;","    }","","    callback || (callback = noop);","","    if (index) {","        if (Array.isArray(index)) {","            index = index.join(',');","        }","","        index = index.trim();","        url   = '/' + encode(index);","    }","","    url += '/_settings';","","    client._request(url, {","        method: 'PUT',","        json: settings","    }, callback);","}","","/**"," Apply aliases actions.",""," [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases.html)",""," @method addAlias"," @param {Client} client Client instance."," @param {Object[]} actions Aliases actions."," @param {Function} callback Callback function."," @param {Error|null} callback.err Error, or `null` on success."," @param {Object} callback.res ElasticSearch response data."," @static"," @see Client.applyAliasesActions"," **/","Index.applyAliasesActions = function (client, actions, callback) {","    client._request('/_aliases', {","        method: 'POST',","        json: {actions:actions}","    }, callback);","}","","/**"," Get aliases.",""," [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases.html)",""," @method getAliases"," @param {Client} client Client instance."," @param {String|String[]|null} names Index name or array of names."," @param {Function} callback Callback function."," @param {Error|null} callback.err Error, or `null` on success."," @param {Object} callback.res ElasticSearch response data."," @static"," @see Client.getAliases"," **/","Index.getAliases = function (client, names, callback) {","    var url = '';","","    if(names){","        if (Array.isArray(names)) {","            names = names.join(',');","        }","","        names = names.trim();","        url = '/' + encode(names);","    }","","    url += '/_aliases';","","    client._request(url, callback);","}","","/**","Registers a mapping definition for the specified type within the specified","index or indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping.html)","","@method putMapping","@param {Client} client Client instance.","@param {String|String[]} [names] Index name or array of names to define the","    mapping within. If not specified, it will be defined in all indices.","@param {String} type Document type.","@param {Object} [mapping] Mapping definition. See the [ElasticSearch","    docs](http://www.elasticsearch.org/guide/reference/mapping/) for","    an overview.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.putMapping","**/","Index.putMapping = function (client, names, type, mapping, callback) {","    if (typeof type === 'object') {","        callback = mapping;","        mapping  = type;","        type     = names;","        names    = undefined;","    }","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    names || (names = '_all');","","    client._request('/' + encode(names) + '/' + encode(type) + '/_mapping', {","        method: 'PUT',","        json: mapping","    }, callback);","}","","/**","Refreshes the specified index or indices.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh.html)","","@method refresh","@param {Client} client Client instance.","@param {String|String[]} [names] Index name or array of names to refresh. If not","    specified, all indices will be refreshed.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","@see Client.refresh","**/","Index.refresh = function (client, names, callback) {","    if (typeof names === 'function') {","        callback = names;","        names    = undefined;","    }","","    if (Array.isArray(names)) {","        names = names.join(',');","    }","","    names || (names = '_all');","","    client._request('/' + encode(names) + '/_refresh', {method: 'POST'},","        callback);","};","","/**"," Analyze",""," [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze.html)",""," @method analyze"," @param {Client} client Client instance."," @param {String} text Text to analyze"," @param {Object} [options] Options. See ElasticSearch docs for details.","     @param {String} [options.index=\"indexname\"] Index name whose analyzer must be used. If not","         specified, use built-in analyzers.","     @param {String} [options.analyzer=\"standard\"] Analyzer to use for analysis","     @param {String} [options.tokenizer=\"keyword\"] Tokenizer to use for analysis when","         using a custom transient analyzer","     @param {String} [options.field=\"obj1.field1\"] Use the analyzer configured in","         the mapping for this field"," @param {Function} [callback] Callback function.","    @param {Error|null} callback.err Error, or `null` on success.","    @param {Object} callback.res ElasticSearch response data."," @static"," @see Client.analyze","**/","Index.analyze = function (client, text, options, callback) {","    var params, url = '/_analyze';","    if (typeof options === 'function') {","        callback = options;","        options  = {};","    }","","    callback || (callback = noop);","    params = util.merge(options);","","    if (params.index) {","        url = '/' + encode(params.index) + '/_analyze';","        delete params.index;","    }","","    var query = [ 'text=' + encode(text) ];","    util.each(params, function (value, name) {","        query.push(encode(name) + '=' + encode(value));","    });","","    if (query.length) {","        url += '?' + query.join('&');","    }","","    client._request(url, { method: 'GET' }, callback);","};","","/**","Registers a river with the cluster.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","@method putRiver","@param {Client} client Client instance.","@param {String} name A name for this river.","@param {Object} config The river configuration.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","**/","Index.putRiver = function( client, name, config, callback ){","    client._request('/_river/' + name + '/_meta', {","        method: 'PUT',","        json: config","    }, callback);","};","","/**","Gets river config from the cluster.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","@method getRiver","@param {Client} client Client instance.","@param {String} name A name for this river.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","**/","Index.getRiver = function( client, name, callback ){","    client._request('/_river/' + name + '/_meta', { method: 'GET' }, callback);","};","","/**","Deletes a river config from the cluster.","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","@method deleteRiver","@param {Client} client Client instance.","@param {String} name A name for this river.","@param {Function} [callback] Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@static","**/","Index.deleteRiver = function( client, name, callback ){","    client._request('/_river/' + name, { method: 'DELETE' }, callback);","};","","/**","Multi GET API allows to get multiple documents","","[ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/multi-get.html)","","@method multiGet","@param {Client} client Client instance.","@param {String|null} index optional Index name.","@param {String|null} type optional document type.","@param {Object} data either docs or ids","  @param {Object[]} [data.docs] docs to query (can include _index, _type, _id, fields)","  @param {String[]} [data.ids] ids to query","@param {Function} callback Callback function.","  @param {Error|null} callback.err Error, or `null` on success.","  @param {Object} callback.res ElasticSearch response data.","@see Client.multiGet"," **/","Index.multiGet= function (client, index, type, data, callback) {","    var url = '';","    if(index)","        url +='/'+encode(index)   ;","    if(type)","        url +=  '/'+encode(type) ;","    url += '/_mget';","    client._request(url, {","        method: 'POST',","        json  : data","    }, callback);","};","","Index.prototype = {","    // http://www.elasticsearch.org/guide/reference/api/count.html","    count: function (query, callback) {","","    },","","    /**","    Deletes a document from this index.","","    @method delete","    @param {String} type Type name.","    @param {String} id Document id to delete.","    @param {Object} [options] Delete options.","      @param {String} [options.consistency=\"quorum\"] Write consistency to use","          for this indexing operation. Permitted values are \"one\", \"quorum\" and","          \"all\". See the ElasticSearch docs for details.","      @param {Boolean} [options.ignoreMissing=false] If `true`, an error will","          not be returned if the index, type, or document do not exist.","      @param {String} [options.parent] Parent document id.","      @param {Boolean} [options.refresh=false] If `true`, the relevant shard","          will be refreshed after the delete operation. This may cause heavy","          server load, so use with caution.","      @param {String} [options.replication=\"sync\"] Replication mode for this","          indexing operation. Maybe be set to \"sync\" or \"async\".","      @param {String} [options.routing] Value that determines what shard this","          operation will be routed to. Note that an incorrectly routed operation","          will fail, so it's best to leave this alone unless you know your","          business.","      @param {Number} [options.version] Document version to delete. If","          the specified document's version differs from this, an error will be","          returned and the document will not be deleted.","      @param {object} [options.query] To perform removal using a query. Warning:","          id and all other options except ignoreMissing will be ignored.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response.","    @see Client.delete","    **/","    delete: function (type, id, options, callback) {","        var query = [],","            ignoreMissing, params, url;","","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","","        callback || (callback = noop);","        params = util.merge(options);","","        if (typeof params.ignoreMissing !== 'undefined') {","            ignoreMissing = params.ignoreMissing;","            delete params.ignoreMissing;","        }","","        if(params.query) {","            url = '/' + encode(this.name);","            if (type) {","                url += '/' + encode(Array.isArray(type) ? type.join(',') : type);","            }","            url += '/_query';","            ","            this.client._request(url, {method: 'DELETE', json: params.query}, function (err, res) {","                if (err) {","                    if (ignoreMissing && res && res.found === false) {","                        return callback(null, res), undefined;","                    } else {","                        return callback(err, res), undefined;","                    }","                }","                callback(null, res);","            });","        } else {","            util.each(params, function (value, name) {","                if (value === true || value === false) {","                    value = value ? '1' : '0';","                }","  ","                query.push(encode(name) + '=' + encode(value));","            });","  ","            url = '/' + encode(this.name) + '/' + encode(type) + '/' + encode(id);","  ","            if (query.length) {","                url += '?' + query.join('&');","            }","  ","            this.client._request(url, {method: 'DELETE'}, function (err, res) {","                if (err) {","                    if (ignoreMissing && res && res.found === false) {","                        return callback(null, res), undefined;","                    } else {","                        return callback(err, res), undefined;","                    }","                }","  ","                callback(null, res);","            });","        }","    },","","    /**","    Deletes this index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index.html)","","    @method deleteIndex","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.data ElasticSearch response data.","    **/","    deleteIndex: function (callback) {","        Index.delete(this.client, this.name, callback);","    },","","    // http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping.html","    deleteMapping: function (type) {","","    },","","    /**","    Checks whether this index exists on the server.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists.html)","","    @method exists","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Boolean} callback.exists `true` if the index exists, `false`","        otherwise.","    **/","    exists: function (callback) {","        Index.exists(this.client, this.name, callback);","    },","","    /**","    Gets a document from this index based on its id.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/get.html)","","    @method get","    @param {String} id Document id.","    @param {Object} [options] Options.","      @param {String|String[]} [options.fields] Document field name or array of","          field names to retrieve. By default, all fields are retrieved.","      @param {Boolean} [options.ignoreMissing=false] If `true`, an error will","          not be returned if the index, type, or document do not exist. Instead,","          a `null` document will be returned.","      @param {String} [options.preference] Controls which shard replicas the","          request should be executed on. By default, the operation will be","          randomized between the shard replicas. See the ElasticSearch docs for","          possible values.","      @param {Boolean} [options.realtime=true] Whether or not to use realtime","          GET. See the ElasticSearch docs for details.","      @param {Boolean} [options.refresh=false] If `true`, the relevant shard","          will be refreshed before the get operation to ensure that it's","          searchable. This may cause heavy server load, so use with caution.","      @param {String} [options.routing] Value that determines what shard this","          document will be routed to. If not specified, a hash of the document's","          id will be used. Note that an incorrectly routed get operation will","          fail, so it's best to leave this alone unless you know your business.","      @param {String} [options.type=\"_all\"] If specified, the get operation will","          be limited to documents of this type.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object|null} callback.doc Retrieved document or document fields,","          or `null` if the document was not found and `options.ignoreMissing` is","          `true`.","      @param {Object} callback.res Full ElasticSearch response data.","    @see Client.get","    **/","    get: function (id, options, callback) {","        var query = [],","            type  = '_all',","            ignoreMissing, params, url;","","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","","        params = util.merge(options);","","        if (params.fields) {","            params.fields = Array.isArray(params.fields) ?","                params.fields.join(',') : params.fields;","        }","","        if (typeof params.ignoreMissing !== 'undefined') {","            ignoreMissing = params.ignoreMissing;","            delete params.ignoreMissing;","        }","","        if (params.type) {","            type = params.type;","            delete params.type;","        }","","        util.each(params, function (value, name) {","            if (value === true || value === false) {","                value = value ? '1' : '0';","            }","","            query.push(encode(name) + '=' + encode(value));","        });","","        url = '/' + encode(this.name) + '/' + encode(type) + '/' + encode(id);","","        if (query.length) {","            url += '?' + query.join('&');","        }","","        this.client._request(url, {method: 'GET'}, function (err, res) {","            if (err) {","                if (ignoreMissing && res && (res.exists === false","                        || res.error.indexOf('IndexMissing') !== -1)) {","                    return callback(null, null, res), undefined;","                } else {","                    return callback(err, null, res), undefined;","                }","            }","","            callback(null, res.fields || res._source, res);","        });","    },","","    /**","    Gets the mapping definition for this index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping.html)","","    @method getMapping","    @param {String} [type] Document type. If omitted, mappings for all types are returned.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.getMapping","    **/","    getMapping: function (type, callback) {","        Index.getMapping.apply(null, [this.client, this.name].concat(","            Array.prototype.slice.call(arguments)));","    },","","    /**","    Adds a document to this index.","","    If a document already exists in this index with the specified _type_ and","    _id_, it will be updated. Otherwise, a new document will be created.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/index_.html)","","    @example","","        var blog = client.getIndex('blog');","","        blog.index('post', {","            title  : \"Welcome to my stupid blog\",","            content: \"This is the first and last time I'll post anything.\",","            tags   : ['welcome', 'first post', 'last post'],","            created: Date.now()","        }, function (err, res) {","            if (err) { throw err; }","            console.log('Indexed a blog post');","        });","","    @method index","    @param {String} type Document type.","    @param {Object} doc Document data to index.","    @param {Object} [options] Options.","      @param {String} [options.consistency=\"quorum\"] Write consistency to use","          for this indexing operation. Permitted values are \"one\", \"quorum\" and","          \"all\". See the ElasticSearch docs for details.","      @param {Boolean} [options.create=false] Only create the document if it","          doesn't already exist.","      @param {String} [options.id] Document id. One will be automatically","          generated if not specified.","      @param {String} [options.parent] Parent document id.","      @param {String} [options.percolate] Percolation query to check against","          this document. See the ElasticSearch docs for details.","      @param {Boolean} [options.refresh=false] If `true`, the document will be","          made searchable immediately after it is indexed.","      @param {String} [options.replication=\"sync\"] Replication mode for this","          indexing operation. Maybe be set to \"sync\" or \"async\".","      @param {String} [options.routing] Value that determines what shard this","          document will be routed to. If not specified, a hash of the document's","          id will be used.","      @param {String} [options.timeout=\"1m\"] How long to wait for the primary","          shard to become available to index this document before aborting. See","          the ElasticSearch docs for details. This should be a value like \"5m\"","          (5 minutes) or \"15s\" (15 seconds).","      @param {Number} [options.version] Document version to create/update. If","          this is set and `options.version_type` is not set,","          `options.version_type` will automatically be set to \"external\".","      @param {String} [options.version_type=\"internal\"] Version type (either","          \"internal\" or \"external\"). See the ElasticSearch docs for details.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.index","    **/","    index: function (type, doc, options, callback) {","        var query = [],","            id, params, url;","","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","","        params = util.merge(options || {});","","        if (params.create) {","            params.op_type = 'create';","            delete params.create;","        }","","        if (params.id) {","            id = params.id;","            delete params.id;","        }","","        if (params.version && !params.version_type) {","            params.version_type = 'external';","        }","","        util.each(params, function (value, name) {","            if (value === true || value === false) {","                value = value ? '1' : '0';","            }","","            query.push(encode(name) + '=' + encode(value));","        });","","        url = '/' + encode(this.name) + '/' + encode(type);","","        if (id) {","            url += '/' + encode(id);","        }","","        if (query.length) {","            url += '?' + query.join('&');","        }","","        this.client._request(url, {","            method: id ? 'PUT' : 'POST',","            json  : doc","        }, callback);","    },","","    // http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize.html","    optimize: function (options) {","","    },","","    /**","    Registers a mapping definition for the specified type within this index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping.html)","","    @method putMapping","    @param {String} type Document type.","    @param {Object} [mapping] Mapping definition. See the [ElasticSearch","        docs](http://www.elasticsearch.org/guide/reference/mapping/) for","        an overview.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.putMapping","    **/","    putMapping: function (type, mapping, callback) {","        Index.putMapping(this.client, this.name, type, mapping, callback);","    },","","    /**","    Analyze using analyzer from this index","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze.html)","","    @method analyze","    @param {String} text Text to analyze","    @param {Object} [options] Options. See ElasticSearch docs for details.","      @param {String} [options.analyzer=\"standard\"] Analyzer to use for analysis","      @param {String} [options.tokenizer=\"keyword\"] Tokenizer to use for analysis when","        using a custom transient analyzer","      @param {String} [options.field=\"obj1.field1\"] Use the analyzer configured in","        the mapping for this field","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.analyze","    **/","    analyze: function (text, options, callback) {","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","        options.index = this.name;","        Index.analyze(this.client, options, callback);","    },","","    /**","    Registers a river with the cluster.","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method putRiver","    @param {String} name A name for this river.","    @param {Object} config The river configuration.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    putRiver: function( name, config, callback ){","        Index.putRiver( this.client, name, config, callback );","    },","","    /**","    Gets river config from the cluster.","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method getRiver","    @param {Client} client Client instance.","    @param {String} name A name for this river.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    getRiver: function( name, callback ){","        Index.getRiver( this.client, name, callback );","    },","","    /**","    Deletes a river config from the cluster.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/river/)","","    @method deleteRiver","    @param {Client} client Client instance.","    @param {String} name A name for this river.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @static","    **/","    deleteRiver: function( name, callback ){","        Index.deleteRiver( this.client, name, callback );","    },","","    /**","    Refreshes this index.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh.html)","","    @method refresh","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.refresh","    **/","    refresh: function (callback) {","        Index.refresh(this.client, this.name, callback);","    },","","    /**","    Searches for documents in this index matching the given query. See","    `Client.search()` for the complete list of supported options.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/search/)","","    @method search","    @param {Object} [options] Search options. Technically this argument is","        optional, but you'll almost always want to provide at least a query.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.results Search results.","      @param {Object} callback.res Full ElasticSearch response data.","    @see Client.search","    **/","    search: function (options, callback) {","        if (typeof options === 'function') {","            callback = options;","            options  = {};","        }","","        this.client.search(util.merge(options, {index: this.name}), callback);","    },","","    /**","    Provide statistics on different operations happening on an index.","    See `Client.stats()` for the complete list of supported options.","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/admin-indices-stats.html)","","    @method stats","    @param {Object} [options] Stats options. This argument is optional.","    @param {Function} [callback] Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res ElasticSearch response data.","    @see Client.stats","    **/","    stats: function (options, callback) {","      if (typeof options === 'function') {","        callback = options;","        options = {};","      }","      this.client.stats(util.merge(options, {index: this.name}), callback);","    },","","    // TODO: close, open, get settings, get mapping, flush, snapshot,","    // update settings, templates, status, segments, clear cache","    /**","    Registers a percolator for the given index or modifies the existing percolator","    if one with the name already exists","","    [ElasticSearch docs](http://www.elasticsearch.org/guide/reference/api/pecolator/)","","    @example","        var put =   {","                        \"query\" : {","                            \"text\" : {","                                \"hashtags\" : {","                                    \"query\" : 'blah blah blah ',","                                    \"operator\" : \"or\"","                                }","                            }","                        }","                    };","        client.percolator('tweets', 'mypercolator', query, function (err, res) {","            if (err) { throw err; }","            console.log(results);","        });","    @method setPercolator","    @param {String} percolator The identifier string of the percolator.","            This identifier is returned when a document matches","            the query in the percolator, either through percolate operation or","            through index opertation.","    @param {Object|String} query Search query. Afull query object.","        See the [ElasticSearch Query DSL docs](http://www.elasticsearch.org/guide/reference/query-dsl/)","        for details.","    @param {Function} callback Callback function.","      @param {Error|null} callback.err Error, or `null` on success.","      @param {Object} callback.res Full ElasticSearch response data.","    */","    setPercolator: function(percolator, query, callback){","        var url = '/_percolator/';","        url += this.name;","        url += '/'+encode(percolator);","        this.client._request(url, {","            method: 'POST',","            json  : query","        }, callback);","    },","    /**","     * Retrieve the percolator doc","     *","     * @example","     *","     *  client.getPercolator('tweets', 'mypercolator', function (err, results) {","     *      if (err) { throw err; }","     *      console.log(results);","     *  });","     *","     *  @param {String} percolator The name of the percolator","     *  @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.doc  Percolator document.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    getPercolator: function(percolator, callback){","        var url = '/_percolator/'+this.name+'/'+encode(percolator);","        this.client._request(url, {","            method: 'GET'","        }, function (err, res) {","            if (err) { return callback(err, null, res), undefined; }","            return callback(null, res._source, res);","        });","    },","","    /**","     * Test if a given doc matches a percolator for","     * the given index and document type","     * @example","     *      client.perolate('tweets', 'tweet', {","     *          doc: {","     *","     *              title  : \"Welcome to my stupid blog\",","     *              content: \"This is the first and last time I'll post anything.\",","     *              tags   : ['welcome', 'first post', 'last post'],","     *              created: Date.now()","     *          }","     *      }, function(err, res){","     *          if(err){ throw err; }","     *          console.log(res);","     *      });","     *  _NOTE_: You must wrap your document in 'doc' param","     *  @param {String} type The type name of the document","     *  @param {Object} doc The document object which the registered percolators","     *      are matched against","     *  @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    percolate: function(type, doc, callback){","        // this check is required because elasticsearch does not return an error","        // but times out if the'doc' element is not present in the body of the","        // request","        if(doc['doc'] === undefined){","            doc = {'doc': doc};","        }","        var url = '/'+ this.name+'/'+type+'/_percolate';","        this.client._request(url, {","            method: 'GET',","            json  : doc","        }, callback);","    },","","    /**","     * Delete a registered percolator for the given index or indicies","     * @example","     *      client.deletePercolator('tweets', 'mypercolator', function(err, res){","     *          if(err){ throw err;}","     *          console.log(res);","     *      });","     * @param {String|String[]} index Index name or array of index names","     * @param {String} percolator Name of the percolator to delete","     * @param {Function} callback Callback function.","     *      @param {Error|null} callback.err Error, or `null` on success.","     *      @param {Object} callback.res Full ElasticSearch response data.","     */","    deletePercolator: function(percolator, callback){","        var url = '/_percolator/'+ this.name +'/'+encode(percolator);","        this.client._request(url, {","            method: 'DELETE'","        }, callback);","    }","};","","/**","Alias for index().","","@method set","@see index","**/","Index.prototype.set = Index.prototype.index;","","module.exports = Index;","","// -- Private Functions --------------------------------------------------------","function noop() {}",""],"l":{"13":1,"16":1,"17":0,"18":0,"126":1,"127":0,"128":0,"129":0,"132":0,"133":0,"135":0,"139":0,"140":0,"141":0,"144":0,"145":0,"150":0,"152":0,"153":0,"156":0,"157":0,"161":0,"162":0,"164":0,"170":0,"172":0,"173":0,"177":0,"178":0,"179":0,"182":0,"185":0,"186":0,"189":0,"211":1,"212":0,"213":0,"214":0,"217":0,"221":0,"222":0,"243":1,"244":0,"245":0,"246":0,"249":0,"250":0,"253":0,"271":1,"272":0,"273":0,"276":0,"277":0,"297":1,"298":0,"299":0,"300":0,"301":0,"303":0,"304":0,"305":0,"306":0,"309":0,"310":0,"313":0,"314":0,"316":0,"317":0,"320":0,"321":0,"322":0,"327":0,"330":0,"348":1,"349":0,"351":0,"352":0,"353":0,"356":0,"357":0,"360":0,"361":0,"363":0,"364":0,"367":0,"369":0,"386":1,"387":0,"389":0,"390":0,"393":0,"394":0,"396":0,"398":0,"417":1,"418":0,"420":0,"421":0,"422":0,"423":0,"426":0,"428":0,"429":0,"430":0,"433":0,"434":0,"437":0,"439":0,"459":1,"460":0,"480":1,"481":0,"483":0,"484":0,"485":0,"488":0,"489":0,"492":0,"494":0,"517":1,"518":0,"519":0,"520":0,"521":0,"522":0,"525":0,"526":0,"529":0,"531":0,"552":1,"553":0,"554":0,"555":0,"558":0,"559":0,"562":0,"564":0,"590":1,"591":0,"592":0,"593":0,"594":0,"597":0,"598":0,"600":0,"601":0,"602":0,"605":0,"606":0,"607":0,"610":0,"611":0,"614":0,"631":1,"632":0,"651":1,"652":0,"668":1,"669":0,"689":1,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"702":1,"741":0,"744":0,"745":0,"746":0,"749":0,"750":0,"752":0,"753":0,"754":0,"757":0,"758":0,"759":0,"760":0,"762":0,"764":0,"765":0,"766":0,"767":0,"769":0,"772":0,"775":0,"776":0,"777":0,"780":0,"783":0,"785":0,"786":0,"789":0,"790":0,"791":0,"792":0,"794":0,"798":0,"814":0,"834":0,"874":0,"878":0,"879":0,"880":0,"883":0,"885":0,"886":0,"890":0,"891":0,"892":0,"895":0,"896":0,"897":0,"900":0,"901":0,"902":0,"905":0,"908":0,"910":0,"911":0,"914":0,"915":0,"916":0,"918":0,"920":0,"924":0,"941":0,"1003":0,"1006":0,"1007":0,"1008":0,"1011":0,"1013":0,"1014":0,"1015":0,"1018":0,"1019":0,"1020":0,"1023":0,"1024":0,"1027":0,"1028":0,"1029":0,"1032":0,"1035":0,"1037":0,"1038":0,"1041":0,"1042":0,"1045":0,"1072":0,"1094":0,"1095":0,"1096":0,"1098":0,"1099":0,"1115":0,"1131":0,"1148":0,"1163":0,"1182":0,"1183":0,"1184":0,"1187":0,"1204":0,"1205":0,"1206":0,"1208":0,"1247":0,"1248":0,"1249":0,"1250":0,"1272":0,"1273":0,"1276":0,"1277":0,"1309":0,"1310":0,"1312":0,"1313":0,"1333":0,"1334":0,"1346":1,"1348":1,"1351":1}}}